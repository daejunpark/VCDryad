ensures b0000 ==> (F#srtl($s,$phys_ptr_cast(P#x,^s_node)));
ensures b0001 ==> (F#srtl($s,$phys_ptr_cast($result,^s_node)));
ensures b0002 ==> (F#srtl_lseg($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node)));
ensures b0003 ==> (F#srtl_lseg($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node)));
ensures b0004 ==> (((F#srtl($s,$phys_ptr_cast(P#x,^s_node)) && F#srtl($s,$phys_ptr_cast($result,^s_node))) ==> $oset_disjoint(F#srtl_reach($s,$phys_ptr_cast(P#x,^s_node)),F#srtl_reach($s,$phys_ptr_cast($result,^s_node)))));
ensures b0005 ==> (((F#srtl($s,$phys_ptr_cast($result,^s_node)) && F#srtl($s,$phys_ptr_cast(P#x,^s_node))) ==> $oset_disjoint(F#srtl_reach($s,$phys_ptr_cast($result,^s_node)),F#srtl_reach($s,$phys_ptr_cast(P#x,^s_node)))));
ensures b0006 ==> (((F#srtl_lseg($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node)) && F#srtl($s,$phys_ptr_cast($result,^s_node))) ==> $oset_disjoint(F#srtl_lseg_reach($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node)),F#srtl_reach($s,$phys_ptr_cast($result,^s_node)))));
ensures b0007 ==> (((F#srtl_lseg($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node)) && F#srtl($s,$phys_ptr_cast(P#x,^s_node))) ==> $oset_disjoint(F#srtl_lseg_reach($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node)),F#srtl_reach($s,$phys_ptr_cast(P#x,^s_node)))));
ensures b0008 ==> ((F#srtl($s,$phys_ptr_cast($result,^s_node)) ==> $oset_disjoint($oset_singleton($phys_ptr_cast(P#x,^s_node)),F#srtl_reach($s,$phys_ptr_cast($result,^s_node)))));
ensures b0009 ==> ((F#srtl($s,$phys_ptr_cast(P#x,^s_node)) ==> $oset_disjoint($oset_singleton($phys_ptr_cast($result,^s_node)),F#srtl_reach($s,$phys_ptr_cast(P#x,^s_node)))));
ensures b0010 ==> ((F#srtl_reach($s,$phys_ptr_cast(P#x,^s_node)) == F#srtl_reach($s,$phys_ptr_cast($result,^s_node))));
ensures b0011 ==> ((F#srtl_reach($s,$phys_ptr_cast($result,^s_node)) == F#srtl_reach($s,$phys_ptr_cast(P#x,^s_node))));
ensures b0012 ==> ((F#srtl_reach($s,$phys_ptr_cast(P#x,^s_node)) == F#srtl_reach(old($s),$phys_ptr_cast(P#x,^s_node))));
ensures b0013 ==> ((F#srtl_reach($s,$phys_ptr_cast($result,^s_node)) == F#srtl_reach(old($s),$phys_ptr_cast($result,^s_node))));
ensures b0014 ==> ($non_null($phys_ptr_cast(P#x,^s_node)));
ensures b0015 ==> ($non_null($phys_ptr_cast($result,^s_node)));
ensures b0016 ==> ($is_null($phys_ptr_cast(P#x,^s_node)));
ensures b0017 ==> ($is_null($phys_ptr_cast($result,^s_node)));
ensures b0018 ==> (($phys_ptr_cast(P#x,^s_node) == $phys_ptr_cast($result,^s_node)));
ensures b0019 ==> (($phys_ptr_cast($result,^s_node) == $phys_ptr_cast(P#x,^s_node)));
ensures b0020 ==> (($non_null($phys_ptr_cast(P#x,^s_node)) ==> $non_null($rd_phys_ptr($s,s_node.next,$phys_ptr_cast(P#x,^s_node),^s_node))));
ensures b0021 ==> (($non_null($phys_ptr_cast($result,^s_node)) ==> $non_null($rd_phys_ptr($s,s_node.next,$phys_ptr_cast($result,^s_node),^s_node))));
ensures b0022 ==> (($non_null($phys_ptr_cast(P#x,^s_node)) ==> $is_null($rd_phys_ptr($s,s_node.next,$phys_ptr_cast(P#x,^s_node),^s_node))));
ensures b0023 ==> (($non_null($phys_ptr_cast($result,^s_node)) ==> $is_null($rd_phys_ptr($s,s_node.next,$phys_ptr_cast($result,^s_node),^s_node))));
ensures b0024 ==> (($non_null($phys_ptr_cast(P#x,^s_node)) ==> ($rd_phys_ptr($s,s_node.next,$phys_ptr_cast(P#x,^s_node),^s_node) == $phys_ptr_cast($result,^s_node))));
ensures b0025 ==> (($non_null($phys_ptr_cast($result,^s_node)) ==> ($rd_phys_ptr($s,s_node.next,$phys_ptr_cast($result,^s_node),^s_node) == $phys_ptr_cast(P#x,^s_node))));
ensures b0026 ==> ((!($intset_in(P#k,F#sll_keys($s,$phys_ptr_cast(P#x,^s_node))))));
ensures b0027 ==> ((!($intset_in(P#k,F#sll_keys($s,$phys_ptr_cast($result,^s_node))))));
ensures b0028 ==> ((!($intset_in(P#k,F#sll_lseg_keys($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node))))));
ensures b0029 ==> ((!($intset_in(P#k,F#sll_lseg_keys($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node))))));
ensures b0030 ==> ($intset_in(P#k,F#sll_keys($s,$phys_ptr_cast(P#x,^s_node))));
ensures b0031 ==> ($intset_in(P#k,F#sll_keys($s,$phys_ptr_cast($result,^s_node))));
ensures b0032 ==> ($intset_in(P#k,F#sll_lseg_keys($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node))));
ensures b0033 ==> ($intset_in(P#k,F#sll_lseg_keys($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node))));
ensures b0034 ==> ((F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)) == F#sll_keys($s,$phys_ptr_cast($result,^s_node))));
ensures b0035 ==> ((F#sll_keys($s,$phys_ptr_cast($result,^s_node)) == F#sll_keys($s,$phys_ptr_cast(P#x,^s_node))));
ensures b0036 ==> ((F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)) == F#sll_keys(old($s),$phys_ptr_cast($result,^s_node))));
ensures b0037 ==> ((F#sll_keys($s,$phys_ptr_cast($result,^s_node)) == F#sll_keys(old($s),$phys_ptr_cast(P#x,^s_node))));
ensures b0038 ==> ((F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)) == $intset_union(F#sll_keys(old($s),$phys_ptr_cast($result,^s_node)),$intset_singleton(P#k))));
ensures b0039 ==> ((F#sll_keys($s,$phys_ptr_cast($result,^s_node)) == $intset_union(F#sll_keys(old($s),$phys_ptr_cast(P#x,^s_node)),$intset_singleton(P#k))));
ensures b0040 ==> ((F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)) == F#sll_keys($s,$phys_ptr_cast($result,^s_node))));
ensures b0041 ==> ((F#sll_keys($s,$phys_ptr_cast($result,^s_node)) == F#sll_keys($s,$phys_ptr_cast(P#x,^s_node))));
ensures b0042 ==> ((F#sll_keys(old($s),$phys_ptr_cast(P#x,^s_node)) == $intset_union(F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)),F#sll_keys($s,$phys_ptr_cast($result,^s_node)))));
ensures b0043 ==> ((F#sll_keys(old($s),$phys_ptr_cast($result,^s_node)) == $intset_union(F#sll_keys($s,$phys_ptr_cast($result,^s_node)),F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)))));
ensures b0044 ==> ((F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)) == $intset_union(F#sll_keys(old($s),$phys_ptr_cast(P#x,^s_node)),F#sll_keys($s,$phys_ptr_cast($result,^s_node)))));
ensures b0045 ==> ((F#sll_keys($s,$phys_ptr_cast($result,^s_node)) == $intset_union(F#sll_keys(old($s),$phys_ptr_cast($result,^s_node)),F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)))));
ensures b0046 ==> ((P#k < 2147483647));
ensures b0047 ==> ((P#k < 2147483647));
ensures b0048 ==> ((P#k < 4294967295));
ensures b0049 ==> ((P#k < 4294967295));
ensures b0050 ==> ((P#k >= 0));
ensures b0051 ==> ((P#k >= 0));
ensures b0052 ==> (($rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node)) < P#k));
ensures b0053 ==> (($rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node)) < P#k));
ensures b0054 ==> (($rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node)) <= $rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node))));
ensures b0055 ==> (($rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node)) <= $rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node))));
ensures b0056 ==> (($rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node)) == $rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node))));
ensures b0057 ==> (($rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node)) == $rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node))));
ensures b0058 ==> ((F#sll_lseg_len_next($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node)) == P#k));
ensures b0059 ==> ((F#sll_lseg_len_next($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node)) == P#k));
ensures b0060 ==> ($intset_le(F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)),$intset_singleton(P#k)));
ensures b0061 ==> ($intset_le(F#sll_keys($s,$phys_ptr_cast($result,^s_node)),$intset_singleton(P#k)));
ensures b0062 ==> ($intset_le($intset_singleton(P#k),F#sll_keys($s,$phys_ptr_cast(P#x,^s_node))));
ensures b0063 ==> ($intset_le($intset_singleton(P#k),F#sll_keys($s,$phys_ptr_cast($result,^s_node))));
ensures b0064 ==> ($intset_le(F#sll_lseg_keys($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node)),$intset_singleton(P#k)));
ensures b0065 ==> ($intset_le(F#sll_lseg_keys($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node)),$intset_singleton(P#k)));
ensures b0066 ==> ($intset_le($intset_singleton(P#k),F#sll_lseg_keys($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node))));
ensures b0067 ==> ($intset_le($intset_singleton(P#k),F#sll_lseg_keys($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node))));
ensures b0068 ==> ($intset_le(F#sll_keys($s,$phys_ptr_cast($result,^s_node)),$intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node)))));
ensures b0069 ==> ($intset_le(F#sll_keys($s,$phys_ptr_cast(P#x,^s_node)),$intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node)))));
ensures b0070 ==> ($intset_le($intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node))),F#sll_keys($s,$phys_ptr_cast(P#x,^s_node))));
ensures b0071 ==> ($intset_le($intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node))),F#sll_keys($s,$phys_ptr_cast($result,^s_node))));
ensures b0072 ==> ($intset_le(F#sll_lseg_keys($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node)),$intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node)))));
ensures b0073 ==> ($intset_le(F#sll_lseg_keys($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node)),$intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node)))));
ensures b0074 ==> ($intset_le($intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast(P#x,^s_node))),F#sll_lseg_keys($s,$phys_ptr_cast(P#x,^s_node),$phys_ptr_cast($result,^s_node))));
ensures b0075 ==> ($intset_le($intset_singleton($rd_inv($s,s_node.key,$phys_ptr_cast($result,^s_node))),F#sll_lseg_keys($s,$phys_ptr_cast($result,^s_node),$phys_ptr_cast(P#x,^s_node))));
INV
const {:existential true} b0000 : bool;
const {:existential true} b0001 : bool;
const {:existential true} b0002 : bool;
const {:existential true} b0003 : bool;
const {:existential true} b0004 : bool;
const {:existential true} b0005 : bool;
const {:existential true} b0006 : bool;
const {:existential true} b0007 : bool;
const {:existential true} b0008 : bool;
const {:existential true} b0009 : bool;
const {:existential true} b0010 : bool;
const {:existential true} b0011 : bool;
const {:existential true} b0012 : bool;
const {:existential true} b0013 : bool;
const {:existential true} b0014 : bool;
const {:existential true} b0015 : bool;
const {:existential true} b0016 : bool;
const {:existential true} b0017 : bool;
const {:existential true} b0018 : bool;
const {:existential true} b0019 : bool;
const {:existential true} b0020 : bool;
const {:existential true} b0021 : bool;
const {:existential true} b0022 : bool;
const {:existential true} b0023 : bool;
const {:existential true} b0024 : bool;
const {:existential true} b0025 : bool;
const {:existential true} b0026 : bool;
const {:existential true} b0027 : bool;
const {:existential true} b0028 : bool;
const {:existential true} b0029 : bool;
const {:existential true} b0030 : bool;
const {:existential true} b0031 : bool;
const {:existential true} b0032 : bool;
const {:existential true} b0033 : bool;
const {:existential true} b0034 : bool;
const {:existential true} b0035 : bool;
const {:existential true} b0036 : bool;
const {:existential true} b0037 : bool;
const {:existential true} b0038 : bool;
const {:existential true} b0039 : bool;
const {:existential true} b0040 : bool;
const {:existential true} b0041 : bool;
const {:existential true} b0042 : bool;
const {:existential true} b0043 : bool;
const {:existential true} b0044 : bool;
const {:existential true} b0045 : bool;
const {:existential true} b0046 : bool;
const {:existential true} b0047 : bool;
const {:existential true} b0048 : bool;
const {:existential true} b0049 : bool;
const {:existential true} b0050 : bool;
const {:existential true} b0051 : bool;
const {:existential true} b0052 : bool;
const {:existential true} b0053 : bool;
const {:existential true} b0054 : bool;
const {:existential true} b0055 : bool;
const {:existential true} b0056 : bool;
const {:existential true} b0057 : bool;
const {:existential true} b0058 : bool;
const {:existential true} b0059 : bool;
const {:existential true} b0060 : bool;
const {:existential true} b0061 : bool;
const {:existential true} b0062 : bool;
const {:existential true} b0063 : bool;
const {:existential true} b0064 : bool;
const {:existential true} b0065 : bool;
const {:existential true} b0066 : bool;
const {:existential true} b0067 : bool;
const {:existential true} b0068 : bool;
const {:existential true} b0069 : bool;
const {:existential true} b0070 : bool;
const {:existential true} b0071 : bool;
const {:existential true} b0072 : bool;
const {:existential true} b0073 : bool;
const {:existential true} b0074 : bool;
const {:existential true} b0075 : bool;
