invariant b0000 ==> (F#slave_dll($s,$phys_ptr_cast(P#dll,^slave_item)));
invariant b0001 ==> (F#slave_dll($s,$phys_ptr_cast(L#d,^slave_item)));
invariant b0002 ==> (((F#slave_dll($s,$phys_ptr_cast(P#dll,^slave_item)) && F#slave_dll($s,$phys_ptr_cast(L#d,^slave_item))) ==> $oset_disjoint(F#slave_dll_reach($s,$phys_ptr_cast(P#dll,^slave_item)),F#slave_dll_reach($s,$phys_ptr_cast(L#d,^slave_item)))));
invariant b0003 ==> (((F#slave_dll($s,$phys_ptr_cast(L#d,^slave_item)) && F#slave_dll($s,$phys_ptr_cast(P#dll,^slave_item))) ==> $oset_disjoint(F#slave_dll_reach($s,$phys_ptr_cast(L#d,^slave_item)),F#slave_dll_reach($s,$phys_ptr_cast(P#dll,^slave_item)))));
invariant b0004 ==> ((F#slave_dll($s,$phys_ptr_cast(L#d,^slave_item)) ==> $oset_disjoint($oset_singleton($phys_ptr_cast(P#dll,^slave_item)),F#slave_dll_reach($s,$phys_ptr_cast(L#d,^slave_item)))));
invariant b0005 ==> ((F#slave_dll($s,$phys_ptr_cast(P#dll,^slave_item)) ==> $oset_disjoint($oset_singleton($phys_ptr_cast(L#d,^slave_item)),F#slave_dll_reach($s,$phys_ptr_cast(P#dll,^slave_item)))));
invariant b0006 ==> ($non_null($phys_ptr_cast(P#dll,^slave_item)));
invariant b0007 ==> ($non_null($phys_ptr_cast(L#d,^slave_item)));
invariant b0008 ==> ($is_null($phys_ptr_cast(P#dll,^slave_item)));
invariant b0009 ==> ($is_null($phys_ptr_cast(L#d,^slave_item)));
invariant b0010 ==> (($phys_ptr_cast(P#dll,^slave_item) == $phys_ptr_cast(L#d,^slave_item)));
invariant b0011 ==> (($phys_ptr_cast(L#d,^slave_item) == $phys_ptr_cast(P#dll,^slave_item)));
invariant b0012 ==> (($non_null($phys_ptr_cast(P#dll,^slave_item)) ==> $non_null($rd_phys_ptr($s,slave_item.next,$phys_ptr_cast(P#dll,^slave_item),^slave_item))));
invariant b0013 ==> (($non_null($phys_ptr_cast(L#d,^slave_item)) ==> $non_null($rd_phys_ptr($s,slave_item.next,$phys_ptr_cast(L#d,^slave_item),^slave_item))));
invariant b0014 ==> (($non_null($phys_ptr_cast(P#dll,^slave_item)) ==> $is_null($rd_phys_ptr($s,slave_item.next,$phys_ptr_cast(P#dll,^slave_item),^slave_item))));
invariant b0015 ==> (($non_null($phys_ptr_cast(L#d,^slave_item)) ==> $is_null($rd_phys_ptr($s,slave_item.next,$phys_ptr_cast(L#d,^slave_item),^slave_item))));
invariant b0016 ==> (($non_null($phys_ptr_cast(P#dll,^slave_item)) ==> ($rd_phys_ptr($s,slave_item.next,$phys_ptr_cast(P#dll,^slave_item),^slave_item) == $phys_ptr_cast(L#d,^slave_item))));
invariant b0017 ==> (($non_null($phys_ptr_cast(L#d,^slave_item)) ==> ($rd_phys_ptr($s,slave_item.next,$phys_ptr_cast(L#d,^slave_item),^slave_item) == $phys_ptr_cast(P#dll,^slave_item))));
INV
const {:existential true} b0000 : bool;
const {:existential true} b0001 : bool;
const {:existential true} b0002 : bool;
const {:existential true} b0003 : bool;
const {:existential true} b0004 : bool;
const {:existential true} b0005 : bool;
const {:existential true} b0006 : bool;
const {:existential true} b0007 : bool;
const {:existential true} b0008 : bool;
const {:existential true} b0009 : bool;
const {:existential true} b0010 : bool;
const {:existential true} b0011 : bool;
const {:existential true} b0012 : bool;
const {:existential true} b0013 : bool;
const {:existential true} b0014 : bool;
const {:existential true} b0015 : bool;
const {:existential true} b0016 : bool;
const {:existential true} b0017 : bool;
