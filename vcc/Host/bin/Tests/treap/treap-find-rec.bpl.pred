ensures b0000 ==> (F#treap($s,$phys_ptr_cast(P#x,^b_node)));
ensures b0001 ==> ((F#treap_reach($s,$phys_ptr_cast(P#x,^b_node)) == F#treap_reach(old($s),$phys_ptr_cast(P#x,^b_node))));
ensures b0002 ==> ($non_null($phys_ptr_cast(P#x,^b_node)));
ensures b0003 ==> ($is_null($phys_ptr_cast(P#x,^b_node)));
ensures b0004 ==> (($non_null($phys_ptr_cast(P#x,^b_node)) ==> $non_null($rd_phys_ptr($s,b_node.left,$phys_ptr_cast(P#x,^b_node),^b_node))));
ensures b0005 ==> (($non_null($phys_ptr_cast(P#x,^b_node)) ==> $is_null($rd_phys_ptr($s,b_node.left,$phys_ptr_cast(P#x,^b_node),^b_node))));
ensures b0006 ==> (($non_null($phys_ptr_cast(P#x,^b_node)) ==> $non_null($rd_phys_ptr($s,b_node.right,$phys_ptr_cast(P#x,^b_node),^b_node))));
ensures b0007 ==> (($non_null($phys_ptr_cast(P#x,^b_node)) ==> $is_null($rd_phys_ptr($s,b_node.right,$phys_ptr_cast(P#x,^b_node),^b_node))));
ensures b0008 ==> ((F#treap_keys($s,$phys_ptr_cast(P#x,^b_node)) == F#treap_keys(old($s),$phys_ptr_cast(P#x,^b_node))));
ensures b0009 ==> ((F#treap_keys($s,$phys_ptr_cast(P#x,^b_node)) == $intset_union(F#treap_keys(old($s),$phys_ptr_cast(P#x,^b_node)),$intset_singleton(P#k))));
ensures b0010 ==> ((F#treap_keys($s,$phys_ptr_cast(P#x,^b_node)) == $intset_union(F#treap_keys(old($s),$phys_ptr_cast(P#x,^b_node)),$intset_singleton($result))));
ensures b0011 ==> ((P#k < 2147483647));
ensures b0012 ==> (($result < 2147483647));
ensures b0013 ==> ((P#k < 4294967295));
ensures b0014 ==> (($result < 4294967295));
ensures b0015 ==> ((P#k >= 0));
ensures b0016 ==> (($result >= 0));
ensures b0017 ==> (($rd_inv($s,b_node.key,$phys_ptr_cast(P#x,^b_node)) < P#k));
ensures b0018 ==> (($rd_inv($s,b_node.key,$phys_ptr_cast(P#x,^b_node)) < $result));
INV
const {:existential true} b0000 : bool;
const {:existential true} b0001 : bool;
const {:existential true} b0002 : bool;
const {:existential true} b0003 : bool;
const {:existential true} b0004 : bool;
const {:existential true} b0005 : bool;
const {:existential true} b0006 : bool;
const {:existential true} b0007 : bool;
const {:existential true} b0008 : bool;
const {:existential true} b0009 : bool;
const {:existential true} b0010 : bool;
const {:existential true} b0011 : bool;
const {:existential true} b0012 : bool;
const {:existential true} b0013 : bool;
const {:existential true} b0014 : bool;
const {:existential true} b0015 : bool;
const {:existential true} b0016 : bool;
const {:existential true} b0017 : bool;
const {:existential true} b0018 : bool;
