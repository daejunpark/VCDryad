type-decl $ctype 0 0
type-decl $ptr 0 0
type-decl $field 0 0
type-decl $primitive 0 0
type-decl $struct 0 0
type-decl $token 0 0
type-decl $state 0 0
type-decl $pure_function 0 0
type-decl $label 0 0
type-decl $labelset 0 0
type-decl $ctype_branch 0 0
type-decl $field_kind 0 0
type-decl $version 0 0
type-decl $vol_version 0 0
type-decl $dt_tag 0 0
type-decl cf_event 0 0
type-decl var_locglob 0 0
type-decl $##thread_id 0 0
type-decl $##club 0 0
fun-decl $state_zero 1 0
    type-con $state 0
fun-decl $type_branch 2 0
    type-con $ctype 0
    type-con $ctype_branch 0
fun-decl $ctype_flat 1 1
    type-con $ctype_branch 0
  attribute unique 0
fun-decl $ctype_ptr 1 1
    type-con $ctype_branch 0
  attribute unique 0
fun-decl $ctype_spec_ptr 1 1
    type-con $ctype_branch 0
  attribute unique 0
fun-decl $ctype_map 1 1
    type-con $ctype_branch 0
  attribute unique 0
fun-decl $ctype_array 1 1
    type-con $ctype_branch 0
  attribute unique 0
fun-decl $ctype_blob 1 1
    type-con $ctype_branch 0
  attribute unique 0
fun-decl $ptr_to 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $spec_ptr_to 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $type_project_0 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $map_t 3 0
    type-con $ctype 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $map_domain 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $map_range 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $sizeof 2 0
    type-con $ctype 0
    int
fun-decl $sizeof_object 2 1
    type-con $ptr 0
    int
  attribute inline 0
fun-decl $as_in_range_t 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $def_flat_type 3 1
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_primitive_type 3 1
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_math_type 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_fnptr_type 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_record_type 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_composite_type 5 1
    type-con $ctype 0
    int
    bool
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_union_type 5 1
    type-con $ctype 0
    int
    bool
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_struct_type 5 1
    type-con $ctype 0
    int
    bool
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_integer_type 3 1
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_primitive 2 0
    type-con $ctype 0
    bool
fun-decl $is_non_primitive 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_non_primitive_ptr 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_claimable 2 0
    type-con $ctype 0
    bool
fun-decl $is_span_sequential 2 0
    type-con $ctype 0
    bool
fun-decl $is_group_type 2 0
    type-con $ctype 0
    bool
fun-decl $is_math_type 2 0
    type-con $ctype 0
    bool
fun-decl $is_fnptr_type 2 0
    type-con $ctype 0
    bool
fun-decl $is_record_type 2 0
    type-con $ctype 0
    bool
fun-decl $typ 2 1
    type-con $ptr 0
    type-con $ctype 0
  attribute inline 1
    expr-attr
      true
fun-decl $addr 2 0
    type-con $ptr 0
    int
fun-decl $base 2 0
    type-con $ptr 0
    int
fun-decl $field 2 0
    type-con $ptr 0
    type-con $field 0
fun-decl $ptr 3 0
    type-con $field 0
    int
    type-con $ptr 0
fun-decl $non_null 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_null 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $null 1 0
    type-con $ptr 0
fun-decl $fk_base 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $fk_owns 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $fk_ref_cnt 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $fk_vol_version 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $fk_active_option 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $fk_allocation_root 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $fk_as_array_first 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $fk_emb_array 1 1
    type-con $field_kind 0
  attribute unique 0
fun-decl $field_kind 2 0
    type-con $field 0
    type-con $field_kind 0
fun-decl $is_base_field 2 1
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_proper 2 0
    type-con $ptr 0
    bool
fun-decl $is 3 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $spec_ptr_cast 3 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
fun-decl $phys_ptr_cast 3 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
fun-decl $addr0 2 0
    type-con $ptr 0
    int
fun-decl $cast_props 4 1
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $dot 3 0
    type-con $ptr 0
    type-con $field 0
    type-con $ptr 0
fun-decl $emb 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $maybe_emb 2 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $prim_emb 2 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $is_semi_sequential_field 2 0
    type-con $field 0
    bool
fun-decl $is_sequential_field 2 0
    type-con $field 0
    bool
fun-decl $is_volatile_field 2 0
    type-con $field 0
    bool
fun-decl $as_primitive_field 2 0
    type-con $field 0
    type-con $field 0
fun-decl $as_composite_field 2 0
    type-con $field 0
    type-con $field 0
fun-decl $as_field_with_type 3 0
    type-con $field 0
    type-con $ctype 0
    type-con $field 0
fun-decl $as_ptr_with_type 3 1
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $field_type 2 0
    type-con $field 0
    type-con $ctype 0
fun-decl $has_field_at0 3 0
    type-con $ctype 0
    type-con $field 0
    bool
fun-decl $def_field_family 4 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_field 5 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_phys_field 6 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_ghost_field 5 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_group 4 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $f_group_root 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $f_root 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $f_owns 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $f_ref_cnt 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $f_vol_version 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $f_active_option 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $def_special_field 5 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    type-con $field_kind 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_special_ghost_field 5 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    type-con $field_kind 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $primitive_emb_type 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl $arch_ptr_size 1 0
    int
fun-decl $arch_ptr_type 1 0
    type-con $ctype 0
fun-decl $in_range_uintptr 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $unchk_add_ptr 3 1
    int
    int
    int
  attribute inline 1
    expr-attr
      true
fun-decl ^^i1 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^i2 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^i4 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^i8 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u1 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u2 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u4 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u8 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^void 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^bool 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^f4 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^f8 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^object 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^field 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^null_type 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^claim 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^mathint 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^nat 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#ptrset 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#state_t 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#volatile_version_t 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#struct 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#seq_version 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#vol_version 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl $field_offset 2 0
    type-con $field 0
    int
fun-decl $field_parent_type 2 0
    type-con $field 0
    type-con $ctype 0
fun-decl $is_ghost_field 2 0
    type-con $field 0
    bool
fun-decl $is_phys_field 2 0
    type-con $field 0
    bool
fun-decl $is_proper_field 2 0
    type-con $field 0
    bool
fun-decl $is_nice_spec_ptr 3 1
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl ^$#thread_id_t 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl $me 1 0
    type-con $ptr 0
fun-decl $is_threadtype 2 0
    type-con $ctype 0
    bool
fun-decl $untyped_owner_type 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl $untyped_owner 1 0
    type-con $ptr 0
fun-decl $untyped_owner_owner 1 0
    type-con $ptr 0
fun-decl $field_arr_index 2 0
    type-con $field 0
    int
fun-decl $field_arr_root 2 0
    type-con $field 0
    type-con $field 0
fun-decl $field_arr_size 2 0
    type-con $field 0
    int
fun-decl $field_arr_ctor 3 0
    type-con $field 0
    int
    type-con $field 0
fun-decl $same_field_meta 3 1
    type-con $field 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_arr_field 6 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_phys_arr_field 7 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_ghost_arr_field 6 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_phys_as_array_field 7 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_ghost_as_array_field 6 1
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $idx_inline_prim 3 0
    type-con $ptr 0
    int
    type-con $ptr 0
fun-decl $idx_inline_comp 3 0
    type-con $ptr 0
    int
    type-con $ptr 0
fun-decl $idx_inline 3 1
    type-con $ptr 0
    int
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $idx 3 0
    type-con $ptr 0
    int
    type-con $ptr 0
fun-decl $field_plus 3 1
    type-con $field 0
    int
    type-con $field 0
  attribute inline 1
    expr-attr
      true
fun-decl $is_array 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
fun-decl $is_array_stateless 4 1
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_thread_local_array 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
fun-decl $is_thread_local_array_inline 5 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_mutable_array 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
fun-decl $array_range 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    array 2
      type-con $ptr 0
      bool
fun-decl $arrays_disjoint 5 0
    type-con $ptr 0
    int
    type-con $ptr 0
    int
    bool
fun-decl $arrays_disjoint_id 6 0
    type-con $ptr 0
    int
    type-con $ptr 0
    int
    type-con $ptr 0
    int
fun-decl $mem_range 4 1
    type-con $state 0
    type-con $ptr 0
    int
    int
  attribute inline 1
    expr-attr
      true
fun-decl $mem_range_heap 4 0
    array 2
      type-con $field 0
      array 2
        type-con $ptr 0
        int
    type-con $ptr 0
    int
    int
fun-decl $index_within 3 0
    type-con $ptr 0
    type-con $ptr 0
    int
fun-decl $array_range_no_state 4 0
    type-con $ptr 0
    type-con $ctype 0
    int
    array 2
      type-con $ptr 0
      bool
fun-decl $in_composite_array 4 0
    type-con $ptr 0
    type-con $ptr 0
    int
    bool
fun-decl $in_composite_array_lev2 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    int
    bool
fun-decl $in_array 5 1
    type-con $ptr 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_array_full_extent_of 5 1
    type-con $ptr 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_array_extent_of 6 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $array_members 4 0
    type-con $ptr 0
    type-con $ctype 0
    int
    array 2
      type-con $ptr 0
      bool
fun-decl $array 3 0
    type-con $ctype 0
    int
    type-con $ctype 0
fun-decl $element_type 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $array_length 2 0
    type-con $ctype 0
    int
fun-decl $array_emb 3 0
    type-con $ctype 0
    int
    type-con $field 0
fun-decl $as_array_first_index 2 1
    type-con $ptr 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $as_array 4 0
    type-con $ptr 0
    type-con $ctype 0
    int
    type-con $ptr 0
fun-decl $f_timestamp 2 0
    type-con $state 0
    array 2
      type-con $ptr 0
      int
fun-decl $f_owner 2 0
    type-con $state 0
    array 2
      type-con $ptr 0
      type-con $ptr 0
fun-decl $f_closed 2 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
fun-decl $roots 2 0
    type-con $state 0
    array 2
      type-con $ptr 0
      type-con $ptr 0
fun-decl $heap 2 0
    type-con $state 0
    array 2
      type-con $field 0
      array 2
        type-con $ptr 0
        int
fun-decl $typemap 2 0
    array 2
      type-con $ptr 0
      type-con $ptr 0
    array 3
      int
      type-con $ctype 0
      type-con $ptr 0
fun-decl $domain_root 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $rd_inv 4 1
    type-con $state 0
    type-con $field 0
    type-con $ptr 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $rd 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $rdtrig 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $rd_spec_ptr 5 1
    type-con $state 0
    type-con $field 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $rd_phys_ptr 5 1
    type-con $state 0
    type-con $field 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $current_state 2 1
    type-con $state 0
    type-con $state 0
  attribute inline 1
    expr-attr
      true
fun-decl $owner 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      false
fun-decl $closed 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      false
fun-decl $timestamp 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $ref_cnt 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute inline 1
    expr-attr
      false
fun-decl $position_marker 1 0
    bool
fun-decl $owns_inline 3 1
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
  attribute inline 1
    expr-attr
      true
fun-decl $owns 3 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl $keeps 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $wrapped 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $nested 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $irrelevant 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $mutable 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $thread_owned 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $thread_owned_or_even_mutable 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $initially_mutable 3 1
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $initially_mutable_array 5 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $initially_thread_owned_or_mutable 3 1
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_phys_ptr 2 0
    type-con $ptr 0
    bool
fun-decl $in_range_spec_ptr 2 0
    type-con $ptr 0
    bool
fun-decl $arch_spec_ptr_start 1 0
    int
fun-decl $is_ghost_ptr 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $typed2_phys 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $typed2_spec 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $retype 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $ptr_eq 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $addr_eq 3 1
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $ptr_neq 3 1
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $byte_ptr_subtraction 3 0
    type-con $ptr 0
    type-con $ptr 0
    int
fun-decl $is_primitive_field_of 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_domain_root 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $in_wrapped_domain 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $thread_local_np 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $thread_local 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $thread_local2 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $typed2 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $typed 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $readable_span 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $dont_instantiate 2 0
    type-con $ptr 0
    bool
fun-decl $dont_instantiate_int 2 0
    int
    bool
fun-decl $dont_instantiate_state 2 0
    type-con $state 0
    bool
fun-decl $instantiate_int 2 0
    int
    bool
fun-decl $instantiate_bool 2 0
    bool
    bool
fun-decl $instantiate_ptr 2 0
    type-con $ptr 0
    bool
fun-decl $instantiate_ptrset 2 0
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl sk_hack 2 0
    bool
    bool
fun-decl $start_here 1 0
    bool
fun-decl $expect_unreachable 1 0
    bool
fun-decl $expect_unreachable_master 2 0
    int
    bool
fun-decl $expect_unreachable_child 2 0
    int
    bool
fun-decl $function_entry 2 0
    type-con $state 0
    bool
fun-decl $good_state 2 0
    type-con $state 0
    bool
fun-decl $invok_state 2 0
    type-con $state 0
    bool
fun-decl $full_stop 2 0
    type-con $state 0
    bool
fun-decl $inv 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inv2nt 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inv2s 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inv2 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $inv2_without_lemmas 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $full_stop_ext 3 1
    type-con $token 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $file_name_is 3 0
    int
    type-con $token 0
    bool
fun-decl $timestamp_checkpoint 2 1
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $good_state_ext 3 0
    type-con $token 0
    type-con $state 0
    bool
fun-decl $closed_is_transitive 2 1
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $call_transition 3 0
    type-con $state 0
    type-con $state 0
    bool
fun-decl $trans_call_transition 3 0
    type-con $state 0
    type-con $state 0
    bool
fun-decl $update 5 1
    array 2
      type-con $field 0
      array 2
        type-con $ptr 0
        int
    type-con $ptr 0
    type-con $field 0
    int
    array 2
      type-con $field 0
      array 2
        type-con $ptr 0
        int
  attribute inline 1
    expr-attr
      true
fun-decl $havoc_at 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $specials_eq 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $specials_eq_except 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $meta_eq 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $mutable_increases 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $rd_local 4 1
    array 2
      type-con $ptr 0
      int
    type-con $field 0
    type-con $ptr 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $rd_spec_ptr_local 5 1
    array 2
      type-con $ptr 0
      int
    type-con $field 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $rd_phys_ptr_local 5 1
    array 2
      type-con $ptr 0
      int
    type-con $field 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $updated_owns 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $timestamp_is_now 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $timestamp_post 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $timestamp_post_strict 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $writes_at 2 0
    int
    array 2
      type-con $ptr 0
      bool
fun-decl $in_writes_at 3 1
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      false
fun-decl $def_writes 4 1
    type-con $state 0
    int
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $current_timestamp 2 0
    type-con $state 0
    int
fun-decl $is_fresh 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $writable 4 1
    type-con $state 0
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $writable_prim 4 1
    type-con $state 0
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $listed_in_writes 4 1
    type-con $state 0
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $top_writable 4 1
    type-con $state 0
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      false
fun-decl $not_written 4 1
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $modifies 4 1
    type-con $state 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      false
fun-decl $preserves_thread_local 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $writes_nothing 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $frame_level 2 0
    type-con $pure_function 0
    int
fun-decl $current_frame_level 1 0
    int
fun-decl $can_use_all_frame_axioms 2 1
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $can_use_frame_axiom_of 2 1
    type-con $pure_function 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $reads_check_pre 2 0
    type-con $state 0
    bool
fun-decl $reads_check_post 2 0
    type-con $state 0
    bool
fun-decl $same_array 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    int
    bool
fun-decl $is_in_stackframe 3 0
    int
    type-con $ptr 0
    bool
fun-decl $is_allocated0 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_allocated 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_malloc_root 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_object_root 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_object_root_ptr 2 0
    type-con $ptr 0
    bool
fun-decl $pre_wrap 2 0
    type-con $state 0
    bool
fun-decl $pre_unwrap 2 0
    type-con $state 0
    bool
fun-decl $pre_static_wrap 2 0
    type-con $state 0
    bool
fun-decl $pre_static_unwrap 2 0
    type-con $state 0
    bool
fun-decl $post_unwrap 3 0
    type-con $state 0
    type-con $state 0
    bool
fun-decl $pre_wrap_set 2 0
    type-con $state 0
    bool
fun-decl $pre_unwrap_set 2 0
    type-con $state 0
    bool
fun-decl $timestamp_updated 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $timestamp_possibly_updated 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_unwrapped_dynamic 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $is_unwrapped 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $is_wrapped_dynamic 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $is_wrapped 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $take_over 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $state 0
fun-decl $start_release 3 0
    type-con $state 0
    type-con $state 0
    type-con $state 0
fun-decl $release 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $state 0
fun-decl $change_owner 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $state 0
fun-decl $update_heap_owns 4 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    type-con $state 0
fun-decl $is_unwrapped_set 6 0
    type-con $state 0
    type-con $state 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $is_wrapped_set 7 0
    type-con $state 0
    type-con $state 0
    type-con $state 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $spans_the_same_no_timestamp 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $spans_the_same 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $nonvolatile_spans_the_same 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $good_for_admissibility 2 0
    type-con $state 0
    bool
fun-decl $good_for_post_admissibility 2 0
    type-con $state 0
    bool
fun-decl $admissibility_start 3 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $stuttering_pre 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $admissibility_pre 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_stuttering_check 1 0
    bool
fun-decl $is_unwrap_check 1 0
    bool
fun-decl $is_admissibility_check 1 1
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $good_for_pre_can_unwrap 2 0
    type-con $state 0
    bool
fun-decl $good_for_post_can_unwrap 2 0
    type-con $state 0
    bool
fun-decl $unwrap_check_pre 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $claims_obj 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $valid_claim 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $claim_initial_assumptions 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $token 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inv2_when_closed 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $claim_transitivity_assumptions 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $token 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $valid_claim_impl 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $claims_claim 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $not_shared 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $claimed_closed 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $no_claim 1 1
    type-con $ptr 0
  attribute unique 0
fun-decl $claim_killed 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $claims_upgrade 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $account_claim 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $claim_no 4 0
    type-con $state 0
    type-con $ptr 0
    int
    type-con $ptr 0
fun-decl $claim_idx 3 0
    type-con $ptr 0
    type-con $ptr 0
    int
fun-decl $new_ownees 4 1
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_domain_lab 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $label 0
    bool
fun-decl $in_vdomain_lab 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $label 0
    bool
fun-decl $inv_lab 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $label 0
    bool
fun-decl $in_domain 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $in_vdomain 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $as_deep_domain 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $wrapped_with_deep_domain 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $ver_domain 2 0
    type-con $version 0
    array 2
      type-con $ptr 0
      bool
fun-decl $int_to_version 2 0
    int
    type-con $version 0
fun-decl $read_version 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $version 0
  attribute inline 1
    expr-attr
      true
fun-decl $domain 3 1
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
  attribute inline 1
    expr-attr
      true
fun-decl $fetch_from_domain 4 0
    type-con $version 0
    type-con $ptr 0
    type-con $field 0
    int
fun-decl $in_claim_domain 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $by_claim 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $claim_version 2 0
    type-con $ptr 0
    type-con $version 0
fun-decl $int_to_vol_version 2 0
    int
    type-con $vol_version 0
fun-decl $volatile_version_addr 2 1
    type-con $ptr 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $read_vol_version 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $vol_version 0
fun-decl $fetch_from_vv 4 0
    type-con $vol_version 0
    type-con $ptr 0
    type-con $field 0
    int
fun-decl $fetch_vol_field 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $is_approved_by 4 0
    type-con $ctype 0
    type-con $field 0
    type-con $field 0
    bool
fun-decl $is_owner_approved 3 0
    type-con $ctype 0
    type-con $field 0
    bool
fun-decl $inv_is_approved_by_ptr 6 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $depends 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $inv_is_approved_by 6 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inv_is_owner_approved 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $composite_extent 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    array 2
      type-con $ptr 0
      bool
fun-decl $dot_emb 2 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $extent 3 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl $full_extent_state 1 0
    type-con $state 0
fun-decl $full_extent 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl $span 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl $struct_extent 2 1
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
  attribute inline 1
    expr-attr
      true
fun-decl $extent_mutable 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $extent_thread_local 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $extent_is_now 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $extent_is_fresh 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $volatile_span 3 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl $extent_hint 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $union_havoced 5 1
    type-con $state 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_union_field 2 0
    type-con $field 0
    bool
fun-decl $as_union_type 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $is_union_type 2 0
    type-con $ctype 0
    bool
fun-decl $as_union_ptr 3 1
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $first_union_field 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $is_first_union_field 2 1
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $first_option_typed 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $all_first_option_typed 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $union_active 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    bool
  attribute inline 0
fun-decl $active_option 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
fun-decl $active_member 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
  attribute inline 0
fun-decl $strong_struct_eq 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $strong_shallow_struct_eq 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $struct_zero 1 0
    type-con $struct 0
fun-decl $vs_base 3 1
    type-con $struct 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $vs_base_ref 2 0
    type-con $struct 0
    type-con $ptr 0
fun-decl $vs_state 2 0
    type-con $struct 0
    type-con $state 0
fun-decl $vs_deep_eq 4 0
    type-con $struct 0
    type-con $struct 0
    type-con $ctype 0
    bool
fun-decl $vs_shallow_eq 4 0
    type-con $struct 0
    type-con $struct 0
    type-con $ctype 0
    bool
fun-decl $vs_ctor 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $struct 0
fun-decl $mem 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $update_int 4 0
    type-con $state 0
    type-con $ptr 0
    int
    type-con $state 0
fun-decl $program_entry_point 2 0
    type-con $state 0
    bool
fun-decl $program_entry_point_ch 2 0
    type-con $state 0
    bool
fun-decl $def_global 3 1
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_global 3 1
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_global_array 4 1
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $has_arity 3 0
    type-con $dt_tag 0
    int
    bool
fun-decl $is_datatype 2 0
    type-con $ctype 0
    bool
fun-decl $def_datatype_type 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $def_datatype_option 4 0
    type-con $ctype 0
    type-con $dt_tag 0
    int
    bool
fun-decl $in 3 1
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $set_in 3 1
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $set_empty 1 0
    array 2
      type-con $ptr 0
      bool
fun-decl $set_singleton 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl $non_null_set_singleton 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl $set_union 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl $set_difference 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl $set_intersection 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl $set_subset 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $set_add_element 3 1
    array 2
      type-con $ptr 0
      bool
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
  attribute inline 1
    expr-attr
      true
fun-decl $set_remove_element 3 1
    array 2
      type-con $ptr 0
      bool
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
  attribute inline 1
    expr-attr
      true
fun-decl $set_eq 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $set_cardinality 2 0
    array 2
      type-con $ptr 0
      bool
    int
fun-decl $set_universe 1 0
    array 2
      type-con $ptr 0
      bool
fun-decl $set_disjoint 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $id_set_disjoint 4 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    int
fun-decl $set_in_pos 3 1
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
  attribute inline 1
    expr-attr
      false
fun-decl $set_in0 3 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $get_fnptr 3 0
    int
    type-con $ctype 0
    type-con $ptr 0
fun-decl $get_fnptr_ref 2 0
    int
    int
fun-decl $get_fnptr_inv 2 0
    int
    int
fun-decl $valid_fnptr 2 0
    type-con $ptr 0
    bool
fun-decl $in_range 4 1
    int
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $bool_to_int 2 1
    bool
    int
  attribute inline 1
    expr-attr
      true
fun-decl $int_to_bool 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $bool_id 2 0
    bool
    bool
fun-decl $min.i1 1 0
    int
fun-decl $max.i1 1 0
    int
fun-decl $min.i2 1 0
    int
fun-decl $max.i2 1 0
    int
fun-decl $min.i4 1 0
    int
fun-decl $max.i4 1 0
    int
fun-decl $min.i8 1 0
    int
fun-decl $max.i8 1 0
    int
fun-decl $max.u1 1 0
    int
fun-decl $max.u2 1 0
    int
fun-decl $max.u4 1 0
    int
fun-decl $max.u8 1 0
    int
fun-decl $in_range_i1 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_i2 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_i4 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_i8 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u1 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u2 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u4 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u8 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_nat 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_ptr 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i1 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i2 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i4 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i8 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $_pow2 2 0
    int
    int
fun-decl $in_range_ubits 3 0
    int
    int
    bool
fun-decl $unchecked_sbits 3 0
    int
    int
    int
fun-decl $in_range_sbits 3 0
    int
    int
    bool
fun-decl $unchecked_ubits 3 0
    int
    int
    int
fun-decl $_or 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_xor 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_and 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_not 3 0
    type-con $ctype 0
    int
    int
fun-decl $abs 2 0
    int
    int
fun-decl $unchk_add 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $unchk_sub 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $unchk_mul 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $unchk_div 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $unchk_mod 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_shl 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_shr 3 0
    int
    int
    int
fun-decl $bv_extract_signed 5 0
    int
    int
    int
    int
    int
fun-decl $bv_extract_unsigned 5 0
    int
    int
    int
    int
    int
fun-decl $bv_update 6 0
    int
    int
    int
    int
    int
    int
fun-decl $unchecked 3 0
    type-con $ctype 0
    int
    int
fun-decl $in_range_t 3 0
    type-con $ctype 0
    int
    bool
fun-decl $op_mul 3 0
    int
    int
    int
fun-decl $op_add 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $op_sub 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $op_div 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $op_lt 4 0
    type-con $ctype 0
    int
    int
    bool
fun-decl $op_le 4 0
    type-con $ctype 0
    int
    int
    bool
fun-decl $op_gt 4 0
    type-con $ctype 0
    int
    int
    bool
fun-decl $op_ge 4 0
    type-con $ctype 0
    int
    int
    bool
fun-decl $ptr_to_int 2 0
    type-con $ptr 0
    int
fun-decl $int_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $field_to_int 2 0
    type-con $field 0
    int
fun-decl $int_to_field 2 0
    int
    type-con $field 0
fun-decl $ptrset_to_int 2 0
    array 2
      type-con $ptr 0
      bool
    int
fun-decl $int_to_ptrset 2 0
    int
    array 2
      type-con $ptr 0
      bool
fun-decl $ptr_to_u8 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_i8 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_u4 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_i4 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_u2 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_i2 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_u1 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_i1 2 0
    type-con $ptr 0
    int
fun-decl $u8_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $i8_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $u4_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $i4_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $u2_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $i2_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $u1_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $i1_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $add_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $sub_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $mul_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $div_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $neg_f4 2 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $lt_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl $leq_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl $gt_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl $geq_f4 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl $add_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $sub_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $mul_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $div_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $neg_f8 2 0
    type-con $primitive 0
    type-con $primitive 0
fun-decl $lt_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl $leq_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl $gt_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl $geq_f8 3 0
    type-con $primitive 0
    type-con $primitive 0
    bool
fun-decl conditional_moment 1 1
    type-con cf_event 0
  attribute unique 0
fun-decl took_then_branch 1 1
    type-con cf_event 0
  attribute unique 0
fun-decl took_else_branch 1 1
    type-con cf_event 0
  attribute unique 0
fun-decl loop_register 1 1
    type-con cf_event 0
  attribute unique 0
fun-decl loop_entered 1 1
    type-con cf_event 0
  attribute unique 0
fun-decl loop_exited 1 1
    type-con cf_event 0
  attribute unique 0
fun-decl cev_local 1 1
    type-con var_locglob 0
  attribute unique 0
fun-decl cev_global 1 1
    type-con var_locglob 0
  attribute unique 0
fun-decl cev_parameter 1 1
    type-con var_locglob 0
  attribute unique 0
fun-decl cev_implicit 1 1
    type-con var_locglob 0
  attribute unique 0
fun-decl #cev_init 2 0
    int
    bool
fun-decl #cev_save_position 2 0
    int
    type-con $token 0
fun-decl #cev_var_intro 6 0
    int
    type-con var_locglob 0
    type-con $token 0
    int
    type-con $ctype 0
    bool
fun-decl #cev_var_update 5 0
    int
    type-con var_locglob 0
    type-con $token 0
    int
    bool
fun-decl #cev_control_flow_event 3 0
    int
    type-con cf_event 0
    bool
fun-decl #cev_function_call 2 0
    int
    bool
fun-decl $local_value_is 6 0
    type-con $state 0
    type-con $token 0
    type-con $token 0
    int
    type-con $ctype 0
    bool
fun-decl $local_value_is_ptr 6 0
    type-con $state 0
    type-con $token 0
    type-con $token 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $read_ptr_m 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
fun-decl $type_code_is 3 0
    int
    type-con $ctype 0
    bool
fun-decl $function_arg_type 4 0
    type-con $pure_function 0
    int
    type-con $ctype 0
    bool
fun-decl $int_lt_or 4 1
    int
    int
    bool
    bool
  attribute inline 0
fun-decl $may_diverge 1 0
    bool
fun-decl $int_distance 3 0
    int
    int
    int
fun-decl $decreases_level 1 0
    int
fun-decl $check_termination 2 0
    int
    bool
fun-decl $yarra_heap 2 0
    type-con $state 0
    type-con $state 0
fun-decl $get_string_literal 3 0
    int
    int
    type-con $ptr 0
fun-decl $address_root 3 1
    int
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 0
fun-decl $blob_type 2 0
    int
    type-con $ctype 0
fun-decl $blob 3 1
    type-con $ptr 0
    int
    type-con $ptr 0
  attribute inline 0
fun-decl $blob_of 2 1
    type-con $ptr 0
    type-con $ptr 0
  attribute inline 0
fun-decl $mutable_root 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 0
fun-decl $root_array 3 1
    type-con $ptr 0
    int
    type-con $ptr 0
  attribute inline 0
fun-decl $root_index 3 1
    type-con $ptr 0
    int
    type-con $ptr 0
  attribute inline 0
fun-decl $allow_reinterpretation_in 2 0
    type-con $ptr 0
    bool
fun-decl $allow_reinterpretation 2 0
    type-con $ptr 0
    bool
fun-decl $precise_test 2 0
    type-con $ptr 0
    bool
fun-decl $updated_only_values 4 0
    type-con $state 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $updated_only_domains 4 0
    type-con $state 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl $domain_updated_at 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
    bool
fun-decl ^$##thread_id 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$##club 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl #tok$1^3.1 1 1
    type-con $token 0
  attribute unique 0
fun-decl #file^C?3A?5CUsers?5Ceddie?5Cvcc2_3?2Dsrc?5Cvcc?5CTest?5Ctestsuite?5Cvcc3?5Cisabelle?2D00__vcc_split__1_23456.c 1 1
    type-con $token 0
  attribute unique 0
fun-decl lambda@677 4 0
    type-con $ptr 0
    type-con $ctype 0
    int
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@678 3 0
    int
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@679 4 0
    int
    type-con $ptr 0
    type-con $ctype 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@680 3 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      type-con $ptr 0
fun-decl lambda@681 3 0
    type-con $ptr 0
    type-con $state 0
    array 2
      type-con $ptr 0
      type-con $ptr 0
fun-decl lambda@682 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      type-con $ptr 0
fun-decl lambda@683 4 0
    type-con $state 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      type-con $ptr 0
fun-decl lambda@684 4 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@685 4 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@686 3 0
    type-con $ptr 0
    type-con $state 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@687 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@688 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@689 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@690 1 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@691 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@692 2 0
    type-con $ptr 0
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@693 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@694 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@695 3 0
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
    array 2
      type-con $ptr 0
      bool
fun-decl lambda@696 1 0
    array 2
      type-con $ptr 0
      bool
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.71:15
      attribute uniqueId 1
        string-attr 13230
      attribute bvZ3Native 1
        string-attr False
    and 2
    =
    fun $type_project_0 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
    var #n
      type-con $ctype 0
    =
    fun $type_branch 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
    fun $ctype_ptr 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $spec_ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.72:15
      attribute uniqueId 1
        string-attr 13231
      attribute bvZ3Native 1
        string-attr False
    and 2
    =
    fun $type_project_0 1
    fun $spec_ptr_to 1
    var #n
      type-con $ctype 0
    var #n
      type-con $ctype 0
    =
    fun $type_branch 1
    fun $spec_ptr_to 1
    var #n
      type-con $ctype 0
    fun $ctype_spec_ptr 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.74:15
      attribute uniqueId 1
        string-attr 13232
      attribute bvZ3Native 1
        string-attr False
    =
    fun $sizeof 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
    fun $arch_ptr_size 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $spec_ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.75:15
      attribute uniqueId 1
        string-attr 13233
      attribute bvZ3Native 1
        string-attr False
    =
    fun $sizeof 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
    fun $arch_ptr_size 0
axiom 0
    forall 2 1 3
      var #r
        type-con $ctype 0
      var #d
        type-con $ctype 0
      pat 1
        fun $map_t 2
        var #r
          type-con $ctype 0
        var #d
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.81:15
      attribute uniqueId 1
        string-attr 13234
      attribute bvZ3Native 1
        string-attr False
    and 3
    =
    fun $map_domain 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
    var #d
      type-con $ctype 0
    =
    fun $map_range 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
    var #r
      type-con $ctype 0
    =
    fun $type_branch 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
    fun $ctype_map 0
axiom 0
    forall 2 1 3
      var #r
        type-con $ctype 0
      var #d
        type-con $ctype 0
      pat 1
        fun $map_t 2
        var #r
          type-con $ctype 0
        var #d
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.144:15
      attribute uniqueId 1
        string-attr 13235
      attribute bvZ3Native 1
        string-attr False
    fun $is_primitive 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.145:15
      attribute uniqueId 1
        string-attr 13236
      attribute bvZ3Native 1
        string-attr False
    fun $is_primitive 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $spec_ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.146:15
      attribute uniqueId 1
        string-attr 13237
      attribute bvZ3Native 1
        string-attr False
    fun $is_primitive 1
    fun $spec_ptr_to 1
    var #n
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $is_primitive 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.148:15
      attribute uniqueId 1
        string-attr 13238
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_primitive 1
    var #n
      type-con $ctype 0
    not
    fun $is_claimable 1
    var #n
      type-con $ctype 0
axiom 0
    forall 2 0 3
      var t
        type-con $field 0
      var b
        int
      attribute qid 1
        string-attr Vcc3Prel.160:15
      attribute uniqueId 1
        string-attr 13239
      attribute bvZ3Native 1
        string-attr False
    =
    fun $field 1
    fun $ptr 2
    var t
      type-con $field 0
    var b
      int
    var t
      type-con $field 0
axiom 0
    forall 2 0 3
      var t
        type-con $field 0
      var b
        int
      attribute qid 1
        string-attr Vcc3Prel.161:15
      attribute uniqueId 1
        string-attr 13240
      attribute bvZ3Native 1
        string-attr False
    =
    fun $base 1
    fun $ptr 2
    var t
      type-con $field 0
    var b
      int
    var b
      int
axiom 0
    forall 1 2 3
      var p
        type-con $ptr 0
      pat 1
        fun $base 1
        var p
          type-con $ptr 0
      pat 1
        fun $field 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.162:15
      attribute uniqueId 1
        string-attr 13241
      attribute bvZ3Native 1
        string-attr False
    and 2
    >=
    fun $base 1
    var p
      type-con $ptr 0
    int-num 0
    =
    fun $ptr 2
    fun $field 1
    var p
      type-con $ptr 0
    fun $base 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $addr 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.168:15
      attribute uniqueId 1
        string-attr 13242
      attribute bvZ3Native 1
        string-attr False
    and 2
    =
    fun $addr 1
    var p
      type-con $ptr 0
    fun $addr0 1
    var p
      type-con $ptr 0
    implies
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    fun $in_range_t 2
    fun $arch_ptr_type 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    =
    fun $null 0
    fun $ptr 2
    fun $f_root 1
    fun ^^void 0
    int-num 0
axiom 0
    =
    fun $addr0 1
    fun $null 0
    int-num 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $is_proper 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.201:15
      attribute uniqueId 1
        string-attr 13243
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $is_proper 1
    var p
      type-con $ptr 0
    and 2
    fun $is_proper_field 1
    fun $field 1
    var p
      type-con $ptr 0
    =
    fun $field_parent_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    fun $prim_emb 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $is 2
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.206:14
      attribute uniqueId 1
        string-attr 13244
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
axiom 0
    forall 1 2 3
      var p
        type-con $ptr 0
      pat 1
        fun $spec_ptr_cast 2
        var p
          type-con $ptr 0
        fun $field_type 1
        fun $field 1
        var p
          type-con $ptr 0
      pat 1
        fun $in_range_spec_ptr 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.212:15
      attribute uniqueId 1
        string-attr 13245
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_spec_ptr 1
    var p
      type-con $ptr 0
    =
    fun $spec_ptr_cast 2
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 1 2 3
      var p
        type-con $ptr 0
      pat 1
        fun $phys_ptr_cast 2
        var p
          type-con $ptr 0
        fun $field_type 1
        fun $field 1
        var p
          type-con $ptr 0
      pat 1
        fun $in_range_phys_ptr 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.214:15
      attribute uniqueId 1
        string-attr 13246
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    and 2
    =
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $is_phys_field 1
    fun $field 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $addr 1
        fun $phys_ptr_cast 2
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.218:15
      attribute uniqueId 1
        string-attr 13247
      attribute bvZ3Native 1
        string-attr False
    =
    fun $addr 1
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var t0
        type-con $ctype 0
      var t1
        type-con $ctype 0
      pat 1
        fun $phys_ptr_cast 2
        fun $phys_ptr_cast 2
        var p
          type-con $ptr 0
        var t0
          type-con $ctype 0
        var t1
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.223:15
      attribute uniqueId 1
        string-attr 13248
      attribute bvZ3Native 1
        string-attr False
    =
    fun $phys_ptr_cast 2
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t0
      type-con $ctype 0
    var t1
      type-con $ctype 0
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t1
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $addr0 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.227:17
      attribute uniqueId 1
        string-attr 13249
      attribute bvZ3Native 1
        string-attr False
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    fun $unchk_add 3
    fun $arch_ptr_type 0
    fun $base 1
    var p
      type-con $ptr 0
    fun $field_offset 1
    fun $field 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $spec_ptr_cast 2
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.233:15
      attribute uniqueId 1
        string-attr 13250
      attribute bvZ3Native 1
        string-attr False
    and 5
    =
    fun $field_type 1
    fun $field 1
    fun $spec_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    =
    =
    fun $addr0 1
    fun $spec_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    int-num 0
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
    =
    fun $field 1
    fun $spec_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $as_field_with_type 2
    fun $field 1
    fun $spec_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    or 2
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $spec_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $ptr 2
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $addr0 1
    var p
      type-con $ptr 0
    fun $in_range_spec_ptr 1
    fun $spec_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $phys_ptr_cast 2
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.235:15
      attribute uniqueId 1
        string-attr 13251
      attribute bvZ3Native 1
        string-attr False
    and 5
    =
    fun $field_type 1
    fun $field 1
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    =
    =
    fun $addr0 1
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    int-num 0
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
    =
    fun $field 1
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $as_field_with_type 2
    fun $field 1
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    or 2
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $ptr 2
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $addr0 1
    var p
      type-con $ptr 0
    fun $in_range_phys_ptr 1
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $in_range_phys_ptr 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.237:15
      attribute uniqueId 1
        string-attr 13252
      attribute bvZ3Native 1
        string-attr False
    and 2
    implies
    not
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    fun $in_range_spec_ptr 1
    var p
      type-con $ptr 0
    true
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 2
        fun $has_field_at0 2
        fun $field_type 1
        fun $field 1
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        fun $phys_ptr_cast 2
        var p
          type-con $ptr 0
        fun $field_type 1
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.246:15
      attribute uniqueId 1
        string-attr 13253
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $is_proper 1
    var p
      type-con $ptr 0
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    fun $has_field_at0 2
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    =
    fun $phys_ptr_cast 2
    var p
      type-con $ptr 0
    fun $field_type 1
    var f
      type-con $field 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.273:15
      attribute uniqueId 1
        string-attr 13254
      attribute bvZ3Native 1
        string-attr False
    =
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    ite
    fun $is_primitive 1
    fun $field_type 1
    var f
      type-con $field 0
    fun $ptr 2
    var f
      type-con $field 0
    fun $base 1
    var p
      type-con $ptr 0
    fun $ptr 2
    fun $f_root 1
    fun $field_type 1
    var f
      type-con $field 0
    +
    fun $base 1
    var p
      type-con $ptr 0
    fun $field_offset 1
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var b
        int
      pat 1
        fun $is_proper 1
        fun $ptr 2
        fun $f_root 1
        var t
          type-con $ctype 0
        var b
          int
      attribute qid 1
        string-attr Vcc3Prel.280:15
      attribute uniqueId 1
        string-attr 13255
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    fun $is_proper 1
    fun $ptr 2
    fun $f_root 1
    var t
      type-con $ctype 0
    var b
      int
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $addr 1
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.283:15
      attribute uniqueId 1
        string-attr 13256
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_phys_field 1
    var f
      type-con $field 0
    =
    fun $addr 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $unchk_add 3
    fun $arch_ptr_type 0
    fun $addr 1
    var p
      type-con $ptr 0
    fun $field_offset 1
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.288:15
      attribute uniqueId 1
        string-attr 13257
      attribute bvZ3Native 1
        string-attr False
    and 3
    implies
    or 2
    fun $in_range_spec_ptr 1
    var p
      type-con $ptr 0
    fun $is_ghost_field 1
    var f
      type-con $field 0
    fun $in_range_spec_ptr 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    implies
    and 2
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    fun $is_phys_field 1
    var f
      type-con $field 0
    fun $in_range_phys_ptr 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    implies
    and 3
    fun $is_proper 1
    var p
      type-con $ptr 0
    =
    fun $field_parent_type 1
    var f
      type-con $field 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $is_proper_field 1
    var f
      type-con $field 0
    fun $is_proper 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $emb 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.301:15
      attribute uniqueId 1
        string-attr 13258
      attribute bvZ3Native 1
        string-attr False
    =
    fun $emb 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $emb 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $maybe_emb 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.303:21
      attribute uniqueId 1
        string-attr 13259
      attribute bvZ3Native 1
        string-attr False
    =
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $prim_emb 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.305:20
      attribute uniqueId 1
        string-attr 13260
      attribute bvZ3Native 1
        string-attr False
    =
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $ptr 2
    fun $f_root 1
    fun $field_parent_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $base 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var f
        type-con $field 0
      pat 1
        fun $field_parent_type 1
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.322:15
      attribute uniqueId 1
        string-attr 13261
      attribute bvZ3Native 1
        string-attr False
    not
    fun $is_primitive 1
    fun $field_parent_type 1
    var f
      type-con $field 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $f_root 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.386:15
      attribute uniqueId 1
        string-attr 13262
      attribute bvZ3Native 1
        string-attr False
    and 2
    =
    fun $field_offset 1
    fun $f_root 1
    var t
      type-con $ctype 0
    int-num 0
    ite
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    and 10
    =
    fun $field_parent_type 1
    fun $f_root 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    fun $is_proper_field 1
    fun $f_root 1
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $f_root 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    =
    fun $as_field_with_type 2
    fun $f_root 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    implies
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $as_primitive_field 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $as_composite_field 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    =
    fun $field_arr_root 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    true
    =
    fun $field_kind 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $fk_allocation_root 0
    true
    and 11
    =
    fun $field_parent_type 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $primitive_emb_type 0
    fun $is_proper_field 1
    fun $f_root 1
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $f_root 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    =
    fun $as_field_with_type 2
    fun $f_root 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    implies
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $as_primitive_field 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $as_composite_field 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    =
    fun $field_arr_root 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $f_root 1
    var t
      type-con $ctype 0
    true
    =
    fun $field_kind 1
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $fk_allocation_root 0
    true
    fun $is_sequential_field 1
    fun $f_root 1
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $f_owns 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.395:15
      attribute uniqueId 1
        string-attr 13263
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    and 11
    =
    fun $field_parent_type 1
    fun $f_owns 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    fun $is_proper_field 1
    fun $f_owns 1
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $f_owns 1
    var t
      type-con $ctype 0
    fun ^$#ptrset 0
    =
    fun $as_field_with_type 2
    fun $f_owns 1
    var t
      type-con $ctype 0
    fun ^$#ptrset 0
    fun $f_owns 1
    var t
      type-con $ctype 0
    implies
    fun $is_primitive 1
    fun ^$#ptrset 0
    =
    fun $as_primitive_field 1
    fun $f_owns 1
    var t
      type-con $ctype 0
    fun $f_owns 1
    var t
      type-con $ctype 0
    implies
    not
    fun $is_primitive 1
    fun ^$#ptrset 0
    =
    fun $as_composite_field 1
    fun $f_owns 1
    var t
      type-con $ctype 0
    fun $f_owns 1
    var t
      type-con $ctype 0
    =
    fun $field_arr_root 1
    fun $f_owns 1
    var t
      type-con $ctype 0
    fun $f_owns 1
    var t
      type-con $ctype 0
    true
    =
    fun $field_kind 1
    fun $f_owns 1
    var t
      type-con $ctype 0
    fun $fk_owns 0
    true
    fun $is_ghost_field 1
    fun $f_owns 1
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $f_ref_cnt 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.398:15
      attribute uniqueId 1
        string-attr 13264
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    and 12
    =
    fun $field_parent_type 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    fun $is_proper_field 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    fun ^^mathint 0
    =
    fun $as_field_with_type 2
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    fun ^^mathint 0
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    implies
    fun $is_primitive 1
    fun ^^mathint 0
    =
    fun $as_primitive_field 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    implies
    not
    fun $is_primitive 1
    fun ^^mathint 0
    =
    fun $as_composite_field 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    =
    fun $field_arr_root 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    true
    =
    fun $field_kind 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    fun $fk_ref_cnt 0
    true
    fun $is_ghost_field 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    fun $is_semi_sequential_field 1
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $f_vol_version 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.402:15
      attribute uniqueId 1
        string-attr 13265
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    and 12
    =
    fun $field_parent_type 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    fun $is_proper_field 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    fun ^$#volatile_version_t 0
    =
    fun $as_field_with_type 2
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    fun ^$#volatile_version_t 0
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    implies
    fun $is_primitive 1
    fun ^$#volatile_version_t 0
    =
    fun $as_primitive_field 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    implies
    not
    fun $is_primitive 1
    fun ^$#volatile_version_t 0
    =
    fun $as_composite_field 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    =
    fun $field_arr_root 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    true
    =
    fun $field_kind 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    fun $fk_vol_version 0
    true
    fun $is_ghost_field 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
    fun $is_semi_sequential_field 1
    fun $f_vol_version 1
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $f_active_option 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.406:15
      attribute uniqueId 1
        string-attr 13266
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    and 12
    =
    fun $field_parent_type 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    var t
      type-con $ctype 0
    fun $is_proper_field 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    fun ^^field 0
    =
    fun $as_field_with_type 2
    fun $f_active_option 1
    var t
      type-con $ctype 0
    fun ^^field 0
    fun $f_active_option 1
    var t
      type-con $ctype 0
    implies
    fun $is_primitive 1
    fun ^^field 0
    =
    fun $as_primitive_field 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    fun $f_active_option 1
    var t
      type-con $ctype 0
    implies
    not
    fun $is_primitive 1
    fun ^^field 0
    =
    fun $as_composite_field 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    fun $f_active_option 1
    var t
      type-con $ctype 0
    =
    fun $field_arr_root 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    fun $f_active_option 1
    var t
      type-con $ctype 0
    true
    =
    fun $field_kind 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    fun $fk_active_option 0
    true
    fun $is_ghost_field 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
    fun $is_sequential_field 1
    fun $f_active_option 1
    var t
      type-con $ctype 0
axiom 0
    implies
    =
    fun $arch_ptr_size 0
    int-num 4
    =
    fun $arch_ptr_type 0
    fun ^^u4 0
axiom 0
    implies
    =
    fun $arch_ptr_size 0
    int-num 8
    =
    fun $arch_ptr_type 0
    fun ^^u8 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^i1 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^i1 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^i1 0
    =
    fun $as_in_range_t 1
    fun ^^i1 0
    fun ^^i1 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^i2 0
    int-num 2
    =
    fun $type_branch 1
    fun ^^i2 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^i2 0
    =
    fun $as_in_range_t 1
    fun ^^i2 0
    fun ^^i2 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^i4 0
    int-num 4
    =
    fun $type_branch 1
    fun ^^i4 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^i4 0
    =
    fun $as_in_range_t 1
    fun ^^i4 0
    fun ^^i4 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^i8 0
    int-num 8
    =
    fun $type_branch 1
    fun ^^i8 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^i8 0
    =
    fun $as_in_range_t 1
    fun ^^i8 0
    fun ^^i8 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^u1 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^u1 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^u1 0
    =
    fun $as_in_range_t 1
    fun ^^u1 0
    fun ^^u1 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^u2 0
    int-num 2
    =
    fun $type_branch 1
    fun ^^u2 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^u2 0
    =
    fun $as_in_range_t 1
    fun ^^u2 0
    fun ^^u2 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^u4 0
    int-num 4
    =
    fun $type_branch 1
    fun ^^u4 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^u4 0
    =
    fun $as_in_range_t 1
    fun ^^u4 0
    fun ^^u4 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^u8 0
    int-num 8
    =
    fun $type_branch 1
    fun ^^u8 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^u8 0
    =
    fun $as_in_range_t 1
    fun ^^u8 0
    fun ^^u8 0
axiom 0
    and 3
    =
    fun $sizeof 1
    fun ^^f4 0
    int-num 4
    =
    fun $type_branch 1
    fun ^^f4 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^f4 0
axiom 0
    and 3
    =
    fun $sizeof 1
    fun ^^f8 0
    int-num 8
    =
    fun $type_branch 1
    fun ^^f8 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^f8 0
axiom 0
    and 3
    =
    fun $sizeof 1
    fun ^^bool 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^bool 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^bool 0
axiom 0
    and 3
    =
    fun $sizeof 1
    fun ^^void 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^void 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^void 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^object 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^object 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^object 0
    fun $is_math_type 1
    fun ^^object 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^field 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^field 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^field 0
    fun $is_math_type 1
    fun ^^field 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^null_type 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^null_type 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^null_type 0
    fun $is_math_type 1
    fun ^^null_type 0
axiom 0
    and 6
    =
    fun $sizeof 1
    fun ^^claim 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^claim 0
    fun $ctype_flat 0
    not
    fun $is_primitive 1
    fun ^^claim 0
    =
    fun $is_claimable 1
    fun ^^claim 0
    true
    ite
    false
    fun $is_volatile_field 1
    fun $f_owns 1
    fun ^^claim 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun ^^claim 0
    true
axiom 0
    and 6
    =
    fun $sizeof 1
    fun ^$#volatile_version_t 0
    int-num 1
    =
    fun $type_branch 1
    fun ^$#volatile_version_t 0
    fun $ctype_flat 0
    not
    fun $is_primitive 1
    fun ^$#volatile_version_t 0
    =
    fun $is_claimable 1
    fun ^$#volatile_version_t 0
    false
    ite
    false
    fun $is_volatile_field 1
    fun $f_owns 1
    fun ^$#volatile_version_t 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun ^$#volatile_version_t 0
    true
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^mathint 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^mathint 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^mathint 0
    fun $is_math_type 1
    fun ^^mathint 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^^nat 0
    int-num 1
    =
    fun $type_branch 1
    fun ^^nat 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^^nat 0
    fun $is_math_type 1
    fun ^^nat 0
axiom 0
    =
    fun $as_in_range_t 1
    fun ^^nat 0
    fun ^^nat 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^$#ptrset 0
    int-num 1
    =
    fun $type_branch 1
    fun ^$#ptrset 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^$#ptrset 0
    fun $is_math_type 1
    fun ^$#ptrset 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^$#state_t 0
    int-num 1
    =
    fun $type_branch 1
    fun ^$#state_t 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^$#state_t 0
    fun $is_math_type 1
    fun ^$#state_t 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^$#struct 0
    int-num 1
    =
    fun $type_branch 1
    fun ^$#struct 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^$#struct 0
    fun $is_math_type 1
    fun ^$#struct 0
axiom 0
    and 6
    =
    fun $sizeof 1
    fun ^$#thread_id_t 0
    int-num 1
    =
    fun $type_branch 1
    fun ^$#thread_id_t 0
    fun $ctype_flat 0
    not
    fun $is_primitive 1
    fun ^$#thread_id_t 0
    =
    fun $is_claimable 1
    fun ^$#thread_id_t 0
    false
    ite
    true
    fun $is_volatile_field 1
    fun $f_owns 1
    fun ^$#thread_id_t 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun ^$#thread_id_t 0
    true
axiom 0
    and 4
    fun $in_range_spec_ptr 1
    fun $me 0
    not
    =
    fun $addr0 1
    fun $me 0
    int-num 0
    fun $is_proper 1
    fun $me 0
    =
    fun $field 1
    fun $me 0
    fun $f_root 1
    fun ^$#thread_id_t 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $is_threadtype 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.494:25
      attribute uniqueId 1
        string-attr 13267
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_threadtype 1
    var t
      type-con $ctype 0
    =
    var t
      type-con $ctype 0
    fun ^$#thread_id_t 0
axiom 0
    and 6
    =
    fun $sizeof 1
    fun $untyped_owner_type 0
    int-num 1
    =
    fun $type_branch 1
    fun $untyped_owner_type 0
    fun $ctype_flat 0
    not
    fun $is_primitive 1
    fun $untyped_owner_type 0
    =
    fun $is_claimable 1
    fun $untyped_owner_type 0
    false
    ite
    true
    fun $is_volatile_field 1
    fun $f_owns 1
    fun $untyped_owner_type 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun $untyped_owner_type 0
    true
axiom 0
    and 4
    fun $in_range_spec_ptr 1
    fun $untyped_owner 0
    not
    =
    fun $addr0 1
    fun $untyped_owner 0
    int-num 0
    fun $is_proper 1
    fun $untyped_owner 0
    =
    fun $field 1
    fun $untyped_owner 0
    fun $f_root 1
    fun $untyped_owner_type 0
axiom 0
    and 4
    fun $in_range_spec_ptr 1
    fun $untyped_owner_owner 0
    not
    =
    fun $addr0 1
    fun $untyped_owner_owner 0
    int-num 0
    fun $is_proper 1
    fun $untyped_owner_owner 0
    =
    fun $field 1
    fun $untyped_owner_owner 0
    fun $f_root 1
    fun ^$#thread_id_t 0
axiom 0
    not
    =
    fun $me 0
    fun $untyped_owner_owner 0
axiom 0
    forall 1 2 3
      var S
        type-con $state 0
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        fun $untyped_owner 0
      pat 1
        select 2
        fun $roots 1
        var S
          type-con $state 0
        fun $untyped_owner 0
      attribute qid 1
        string-attr Vcc3Prel.505:15
      attribute uniqueId 1
        string-attr 13268
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $untyped_owner 0
    fun $untyped_owner_owner 0
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    fun $untyped_owner 0
    fun $untyped_owner 0
axiom 0
    forall 1 1 3
      var f
        type-con $field 0
      pat 1
        fun $field_arr_index 1
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.528:15
      attribute uniqueId 1
        string-attr 13269
      attribute bvZ3Native 1
        string-attr False
    =
    var f
      type-con $field 0
    fun $field_arr_ctor 2
    fun $field_arr_root 1
    var f
      type-con $field 0
    fun $field_arr_index 1
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var f
        type-con $field 0
      var i
        int
      pat 1
        fun $field_arr_ctor 2
        var f
          type-con $field 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.530:15
      attribute uniqueId 1
        string-attr 13270
      attribute bvZ3Native 1
        string-attr False
    and 14
    =
    fun $field_arr_root 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    var f
      type-con $field 0
    implies
    =
    var i
      int
    int-num 0
    =
    fun $field_arr_root 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    =
    fun $field_arr_index 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    var i
      int
    =
    fun $field_arr_size 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $field_arr_size 1
    var f
      type-con $field 0
    =
    fun $field_kind 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $field_kind 1
    var f
      type-con $field 0
    =
    fun $field_type 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $field_type 1
    var f
      type-con $field 0
    =
    fun $as_field_with_type 2
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $field_type 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    =
    fun $is_sequential_field 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $is_sequential_field 1
    var f
      type-con $field 0
    =
    fun $is_volatile_field 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $is_volatile_field 1
    var f
      type-con $field 0
    =
    fun $is_phys_field 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $is_phys_field 1
    var f
      type-con $field 0
    =
    fun $field_parent_type 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    fun $field_parent_type 1
    var f
      type-con $field 0
    true
    =
    fun $field_offset 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
    +
    fun $field_offset 1
    var f
      type-con $field 0
    *
    var i
      int
    fun $sizeof 1
    fun $field_type 1
    var f
      type-con $field 0
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <=
    var i
      int
    -
    fun $field_arr_size 1
    var f
      type-con $field 0
    int-num 1
    fun $is_proper_field 1
    fun $field_arr_ctor 2
    var f
      type-con $field 0
    var i
      int
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var i
        int
      pat 1
        fun $idx_inline_prim 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.588:27
      attribute uniqueId 1
        string-attr 13271
      attribute bvZ3Native 1
        string-attr False
    =
    fun $idx_inline_prim 2
    var p
      type-con $ptr 0
    var i
      int
    fun $dot 2
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $field_arr_ctor 2
    fun $field_arr_root 1
    fun $field 1
    var p
      type-con $ptr 0
    +
    fun $field_arr_index 1
    fun $field 1
    var p
      type-con $ptr 0
    var i
      int
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var i
        int
      pat 1
        fun $idx_inline_comp 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.591:27
      attribute uniqueId 1
        string-attr 13272
      attribute bvZ3Native 1
        string-attr False
    =
    fun $idx_inline_comp 2
    var p
      type-con $ptr 0
    var i
      int
    fun $ptr 2
    fun $f_root 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    +
    fun $base 1
    var p
      type-con $ptr 0
    *
    var i
      int
    fun $sizeof 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var i
        int
      pat 1
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.598:15
      attribute uniqueId 1
        string-attr 13273
      attribute bvZ3Native 1
        string-attr False
    =
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $idx_inline_prim 2
    var p
      type-con $ptr 0
    var i
      int
    fun $idx_inline_comp 2
    var p
      type-con $ptr 0
    var i
      int
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var i
        int
      var j
        int
      pat 1
        fun $idx 2
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
        var j
          int
      attribute qid 1
        string-attr Vcc3Prel.603:15
      attribute uniqueId 1
        string-attr 13274
      attribute bvZ3Native 1
        string-attr False
    =
    fun $idx 2
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    var j
      int
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $idx_inline_prim 2
    var p
      type-con $ptr 0
    +
    var i
      int
    var j
      int
    fun $idx_inline_comp 2
    var p
      type-con $ptr 0
    +
    var i
      int
    var j
      int
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var i
        int
      pat 1
        fun $addr 1
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.606:15
      attribute uniqueId 1
        string-attr 13275
      attribute bvZ3Native 1
        string-attr False
    =
    fun $addr 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    fun $unchk_add 3
    fun $arch_ptr_type 0
    fun $addr 1
    var p
      type-con $ptr 0
    *
    fun $sizeof 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var i
      int
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var i
        int
      pat 1
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.615:15
      attribute uniqueId 1
        string-attr 13276
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    fun $in_range_phys_ptr 1
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    fun $in_range_phys_ptr 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $is_array 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.623:20
      attribute uniqueId 1
        string-attr 13277
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_array 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    or 2
    =
    var sz
      int
    int-num 0
    and 6
    fun $is 2
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    fun $is_proper 1
    var p
      type-con $ptr 0
    >=
    fun $field_arr_size 1
    fun $field 1
    var p
      type-con $ptr 0
    +
    fun $field_arr_index 1
    fun $field 1
    var p
      type-con $ptr 0
    var sz
      int
    =
    var p
      type-con $ptr 0
    fun $idx 2
    fun $ptr 2
    fun $field_arr_root 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $base 1
    var p
      type-con $ptr 0
    fun $field_arr_index 1
    fun $field 1
    var p
      type-con $ptr 0
    not
    =
    fun $field_kind 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $fk_base 0
    >=
    fun $field_arr_index 1
    fun $field 1
    var p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 2
        fun $addr 1
        var p
          type-con $ptr 0
        fun $field_arr_size 1
        fun $field 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.641:15
      attribute uniqueId 1
        string-attr 13278
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_proper 1
    var p
      type-con $ptr 0
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    fun $in_range_t 2
    fun $arch_ptr_type 0
    +
    fun $addr 1
    var p
      type-con $ptr 0
    *
    fun $sizeof 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    -
    fun $field_arr_size 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $field_arr_index 1
    fun $field 1
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $is_thread_local_array 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.649:33
      attribute uniqueId 1
        string-attr 13279
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_thread_local_array 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    and 2
    fun $is_array 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    ite
    fun $is_primitive 1
    var T
      type-con $ctype 0
    fun $thread_local 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var i
        int
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.659:19
      attribute uniqueId 1
        string-attr 13280
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    fun $thread_local 2
    var S
      type-con $state 0
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $is_mutable_array 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.662:28
      attribute uniqueId 1
        string-attr 13282
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_mutable_array 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    and 2
    fun $is_array 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    ite
    fun $is_primitive 1
    var T
      type-con $ctype 0
    fun $mutable 2
    var S
      type-con $state 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    forall 1 1 3
      var i
        int
      pat 1
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.666:19
      attribute uniqueId 1
        string-attr 13281
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    fun $mutable 2
    var S
      type-con $state 0
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $array_range 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.669:23
      attribute uniqueId 1
        string-attr 13283
      attribute bvZ3Native 1
        string-attr False
    =
    fun $array_range 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    fun $array_range_no_state 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
axiom 0
    forall 4 1 3
      var a
        type-con $ptr 0
      var al
        int
      var b
        type-con $ptr 0
      var bl
        int
      pat 1
        fun $arrays_disjoint 4
        var a
          type-con $ptr 0
        var al
          int
        var b
          type-con $ptr 0
        var bl
          int
      attribute qid 1
        string-attr Vcc3Prel.675:15
      attribute uniqueId 1
        string-attr 13285
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 2 1 3
      var i
        int
      var j
        int
      pat 2
        fun $dont_instantiate_int 1
        var i
          int
        fun $dont_instantiate_int 1
        var j
          int
      attribute qid 1
        string-attr Vcc3Prel.677:11
      attribute uniqueId 1
        string-attr 13284
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var al
      int
    <=
    int-num 0
    var j
      int
    <
    var j
      int
    var bl
      int
    not
    =
    fun $idx 2
    var a
      type-con $ptr 0
    var i
      int
    fun $idx 2
    var b
      type-con $ptr 0
    var j
      int
    fun $arrays_disjoint 4
    var a
      type-con $ptr 0
    var al
      int
    var b
      type-con $ptr 0
    var bl
      int
axiom 0
    forall 4 1 3
      var a
        type-con $ptr 0
      var al
        int
      var b
        type-con $ptr 0
      var bl
        int
      pat 1
        fun $set_disjoint 2
        fun $array_range_no_state 3
        var a
          type-con $ptr 0
        fun $field_type 1
        fun $field 1
        var a
          type-con $ptr 0
        var al
          int
        fun $array_range_no_state 3
        var b
          type-con $ptr 0
        fun $field_type 1
        fun $field 1
        var b
          type-con $ptr 0
        var bl
          int
      attribute qid 1
        string-attr Vcc3Prel.682:15
      attribute uniqueId 1
        string-attr 13286
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $set_disjoint 2
    fun $array_range_no_state 3
    var a
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var a
      type-con $ptr 0
    var al
      int
    fun $array_range_no_state 3
    var b
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var b
      type-con $ptr 0
    var bl
      int
    fun $arrays_disjoint 4
    var a
      type-con $ptr 0
    var al
      int
    var b
      type-con $ptr 0
    var bl
      int
axiom 0
    forall 5 2 3
      var a
        type-con $ptr 0
      var al
        int
      var b
        type-con $ptr 0
      var bl
        int
      var i
        int
      pat 2
        fun $arrays_disjoint 4
        var a
          type-con $ptr 0
        var al
          int
        var b
          type-con $ptr 0
        var bl
          int
        fun $idx_inline_prim 2
        var a
          type-con $ptr 0
        var i
          int
      pat 2
        fun $arrays_disjoint 4
        var a
          type-con $ptr 0
        var al
          int
        var b
          type-con $ptr 0
        var bl
          int
        fun $idx_inline_comp 2
        var a
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.687:15
      attribute uniqueId 1
        string-attr 13287
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $arrays_disjoint 4
    var a
      type-con $ptr 0
    var al
      int
    var b
      type-con $ptr 0
    var bl
      int
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var al
      int
    =
    fun $arrays_disjoint_id 5
    var a
      type-con $ptr 0
    var al
      int
    var b
      type-con $ptr 0
    var bl
      int
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var a
      type-con $ptr 0
    fun $idx_inline_prim 2
    var a
      type-con $ptr 0
    var i
      int
    fun $idx_inline_comp 2
    var a
      type-con $ptr 0
    var i
      int
    int-num 0
axiom 0
    forall 5 2 3
      var a
        type-con $ptr 0
      var al
        int
      var b
        type-con $ptr 0
      var bl
        int
      var i
        int
      pat 2
        fun $arrays_disjoint 4
        var a
          type-con $ptr 0
        var al
          int
        var b
          type-con $ptr 0
        var bl
          int
        fun $idx_inline_prim 2
        var b
          type-con $ptr 0
        var i
          int
      pat 2
        fun $arrays_disjoint 4
        var a
          type-con $ptr 0
        var al
          int
        var b
          type-con $ptr 0
        var bl
          int
        fun $idx_inline_comp 2
        var b
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.693:15
      attribute uniqueId 1
        string-attr 13288
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $arrays_disjoint 4
    var a
      type-con $ptr 0
    var al
      int
    var b
      type-con $ptr 0
    var bl
      int
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var bl
      int
    =
    fun $arrays_disjoint_id 5
    var a
      type-con $ptr 0
    var al
      int
    var b
      type-con $ptr 0
    var bl
      int
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var b
      type-con $ptr 0
    fun $idx_inline_prim 2
    var b
      type-con $ptr 0
    var i
      int
    fun $idx_inline_comp 2
    var b
      type-con $ptr 0
    var i
      int
    int-num 1
axiom 0
    forall 6 0 3
      var h
        array 2
          type-con $field 0
          array 2
            type-con $ptr 0
            int
      var r
        type-con $ptr 0
      var f
        type-con $field 0
      var v
        int
      var p
        type-con $ptr 0
      var sz
        int
      attribute qid 1
        string-attr Vcc3Prel.704:15
      attribute uniqueId 1
        string-attr 13289
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    not
    and 2
    <=
    int-num 0
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $dot 2
    var r
      type-con $ptr 0
    var f
      type-con $field 0
    <=
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $dot 2
    var r
      type-con $ptr 0
    var f
      type-con $field 0
    -
    var sz
      int
    int-num 1
    not
    =
    fun $dot 2
    var r
      type-con $ptr 0
    var f
      type-con $field 0
    fun $idx 2
    var p
      type-con $ptr 0
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $dot 2
    var r
      type-con $ptr 0
    var f
      type-con $field 0
    =
    fun $mem_range_heap 3
    store 3
    var h
      array 2
        type-con $field 0
        array 2
          type-con $ptr 0
          int
    var f
      type-con $field 0
    store 3
    select 2
    var h
      array 2
        type-con $field 0
        array 2
          type-con $ptr 0
          int
    var f
      type-con $field 0
    var r
      type-con $ptr 0
    var v
      int
    var p
      type-con $ptr 0
    var sz
      int
    fun $mem_range_heap 3
    var h
      array 2
        type-con $field 0
        array 2
          type-con $ptr 0
          int
    var p
      type-con $ptr 0
    var sz
      int
axiom 0
    forall 4 1 3
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      var p
        type-con $ptr 0
      var sz
        int
      pat 2
        fun $call_transition 2
        var S0
          type-con $state 0
        var S1
          type-con $state 0
        fun $mem_range_heap 3
        fun $heap 1
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.709:15
      attribute uniqueId 1
        string-attr 13291
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $call_transition 2
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    forall 1 1 3
      var i
        int
      pat 1
        fun $dont_instantiate_int 1
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.712:11
      attribute uniqueId 1
        string-attr 13290
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <=
    var i
      int
    -
    var sz
      int
    int-num 1
    =
    select 2
    select 2
    fun $heap 1
    var S0
      type-con $state 0
    fun $field 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    fun $prim_emb 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    select 2
    select 2
    fun $heap 1
    var S1
      type-con $state 0
    fun $field 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    fun $prim_emb 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    =
    fun $mem_range_heap 3
    fun $heap 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var sz
      int
    fun $mem_range_heap 3
    fun $heap 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    var sz
      int
axiom 0
    forall 4 1 3
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 2
        fun $call_transition 2
        var S0
          type-con $state 0
        var S1
          type-con $state 0
        select 2
        select 2
        fun $heap 1
        var S1
          type-con $state 0
        var f
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.716:15
      attribute uniqueId 1
        string-attr 13292
      attribute bvZ3Native 1
        string-attr False
    fun $instantiate_int 1
    select 2
    select 2
    fun $heap 1
    var S0
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var i
        int
      var a
        type-con $ptr 0
      pat 1
        fun $index_within 2
        fun $idx 2
        var a
          type-con $ptr 0
        var i
          int
        var a
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.727:15
      attribute uniqueId 1
        string-attr 13293
      attribute bvZ3Native 1
        string-attr False
    =
    fun $index_within 2
    fun $idx 2
    var a
      type-con $ptr 0
    var i
      int
    var a
      type-con $ptr 0
    var i
      int
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var a
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $index_within 2
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var a
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.730:15
      attribute uniqueId 1
        string-attr 13294
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_proper 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    <=
    fun $sizeof 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $sizeof 1
    fun $field_type 1
    fun $field 1
    var a
      type-con $ptr 0
    =
    fun $index_within 2
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var a
      type-con $ptr 0
    fun $index_within 2
    var p
      type-con $ptr 0
    var a
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $index_within 2
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
        fun $base 1
        var p
          type-con $ptr 0
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var q
          type-con $ptr 0
        var t
          type-con $ctype 0
        fun $base 1
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.734:15
      attribute uniqueId 1
        string-attr 13295
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    =
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    =
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    var t
      type-con $ctype 0
    ite
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $index_within 2
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    -
    fun $field_arr_index 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $field_arr_index 1
    fun $field 1
    var q
      type-con $ptr 0
    =
    *
    fun $sizeof 1
    var t
      type-con $ctype 0
    fun $index_within 2
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    -
    fun $base 1
    var p
      type-con $ptr 0
    fun $base 1
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $array_range_no_state 3
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.743:32
      attribute uniqueId 1
        string-attr 13296
      attribute bvZ3Native 1
        string-attr False
    =
    fun $array_range_no_state 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    ite
    fun $is_primitive 1
    var T
      type-con $ctype 0
    fun lambda@677 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    fun lambda@678 2
    var sz
      int
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var q
        type-con $ptr 0
      var a
        type-con $ptr 0
      var sz
        int
      pat 1
        fun $in_composite_array 3
        var q
          type-con $ptr 0
        var a
          type-con $ptr 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.758:30
      attribute uniqueId 1
        string-attr 13297
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_composite_array 3
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
    var sz
      int
    and 3
    <=
    int-num 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
    <=
    fun $index_within 2
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
    -
    var sz
      int
    int-num 1
    =
    var q
      type-con $ptr 0
    fun $idx 2
    var a
      type-con $ptr 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var s
        type-con $state 0
      var q
        type-con $ptr 0
      var a
        type-con $ptr 0
      var sz
        int
      pat 1
        fun $in_composite_array_lev2 4
        var s
          type-con $state 0
        var q
          type-con $ptr 0
        var a
          type-con $ptr 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.764:35
      attribute uniqueId 1
        string-attr 13298
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_composite_array_lev2 4
    var s
      type-con $state 0
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
    var sz
      int
    and 3
    <=
    int-num 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
    <=
    fun $index_within 2
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
    -
    var sz
      int
    int-num 1
    select 2
    fun $composite_extent 3
    var s
      type-con $state 0
    fun $idx 2
    var a
      type-con $ptr 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var a
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var a
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $array_members 3
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.779:25
      attribute uniqueId 1
        string-attr 13299
      attribute bvZ3Native 1
        string-attr False
    =
    fun $array_members 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    fun lambda@679 3
    var sz
      int
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr Vcc3Prel.790:15
      attribute uniqueId 1
        string-attr 13300
      attribute bvZ3Native 1
        string-attr False
    and 7
    true
    =
    fun $element_type 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    var T
      type-con $ctype 0
    =
    fun $array_length 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    var s
      int
    not
    fun $is_primitive 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    not
    fun $is_claimable 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    =
    fun $type_branch 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    fun $ctype_array 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
axiom 0
    forall 2 1 3
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $sizeof 1
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr Vcc3Prel.799:15
      attribute uniqueId 1
        string-attr 13301
      attribute bvZ3Native 1
        string-attr False
    =
    fun $sizeof 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    *
    fun $sizeof 1
    var T
      type-con $ctype 0
    var s
      int
axiom 0
    forall 5 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $inv2 4
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr Vcc3Prel.801:15
      attribute uniqueId 1
        string-attr 13302
      attribute bvZ3Native 1
        string-attr False
    =
    fun $inv2 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    =
    fun $owns 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_empty 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $phys_ptr_cast 2
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var p
          type-con $ptr 0
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
        fun $base 1
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.810:15
      attribute uniqueId 1
        string-attr 13303
      attribute bvZ3Native 1
        string-attr False
    =
    fun $phys_ptr_cast 2
    fun $ptr 2
    fun $as_field_with_type 2
    fun $field 1
    var p
      type-con $ptr 0
    fun $array 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $base 1
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $dot 2
    var p
      type-con $ptr 0
    fun $array_emb 2
    fun $element_type 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $array_length 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $spec_ptr_cast 2
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var p
          type-con $ptr 0
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
        fun $base 1
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.813:15
      attribute uniqueId 1
        string-attr 13304
      attribute bvZ3Native 1
        string-attr False
    =
    fun $spec_ptr_cast 2
    fun $ptr 2
    fun $as_field_with_type 2
    fun $field 1
    var p
      type-con $ptr 0
    fun $array 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $base 1
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $dot 2
    var p
      type-con $ptr 0
    fun $array_emb 2
    fun $element_type 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $array_length 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 2 3
      var t
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $array_emb 2
        var t
          type-con $ctype 0
        var sz
          int
      pat 1
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.816:15
      attribute uniqueId 1
        string-attr 13305
      attribute bvZ3Native 1
        string-attr False
    and 15
    =
    fun $field_parent_type 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $array 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $is_proper_field 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    =
    fun $field_type 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    var t
      type-con $ctype 0
    =
    fun $as_field_with_type 2
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    var t
      type-con $ctype 0
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    implies
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $as_primitive_field 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    implies
    not
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $as_composite_field 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    =
    fun $field_arr_root 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    true
    =
    fun $field_kind 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    fun $fk_as_array_first 0
    fun $is_phys_field 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    =
    fun $field_offset 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    int-num 0
    =
    fun $field_arr_size 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    var sz
      int
    =
    fun $field_arr_index 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    int-num 0
    fun $is_sequential_field 1
    fun $array_emb 2
    var t
      type-con $ctype 0
    var sz
      int
    true
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $as_array 3
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.826:20
      attribute uniqueId 1
        string-attr 13306
      attribute bvZ3Native 1
        string-attr False
    =
    fun $as_array 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    ite
    fun $is_primitive 1
    var T
      type-con $ctype 0
    ite
    and 3
    fun $is_proper 1
    var p
      type-con $ptr 0
    =
    fun $field 1
    var p
      type-con $ptr 0
    fun $array_emb 2
    var T
      type-con $ctype 0
    var sz
      int
    true
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $ptr 2
    fun $f_root 1
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    int-num 0
    fun $ptr 2
    fun $f_root 1
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    fun $addr0 1
    var p
      type-con $ptr 0
axiom 0
    forall 5 1 3
      var S
        type-con $state 0
      var T
        type-con $ctype 0
      var sz
        int
      var p
        type-con $ptr 0
      var a
        type-con $ptr 0
      pat 1
        select 2
        fun $composite_extent 3
        var S
          type-con $state 0
        var a
          type-con $ptr 0
        fun $array 2
        var T
          type-con $ctype 0
        var sz
          int
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.840:15
      attribute uniqueId 1
        string-attr 13307
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var a
      type-con $ptr 0
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var p
      type-con $ptr 0
    or 2
    =
    var p
      type-con $ptr 0
    var a
      type-con $ptr 0
    and 2
    not
    fun $is_primitive 1
    var T
      type-con $ctype 0
    fun $in_composite_array_lev2 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $dot 2
    var a
      type-con $ptr 0
    fun $array_emb 2
    fun $element_type 1
    fun $field_type 1
    fun $field 1
    var a
      type-con $ptr 0
    fun $array_length 1
    fun $field_type 1
    fun $field 1
    var a
      type-con $ptr 0
    var sz
      int
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.879:33
      attribute uniqueId 1
        string-attr 13308
      attribute bvZ3Native 1
        string-attr False
      attribute inline 1
        expr-attr
          false
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_owner 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $closed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.881:34
      attribute uniqueId 1
        string-attr 13309
      attribute bvZ3Native 1
        string-attr False
      attribute inline 1
        expr-attr
          false
    =
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    fun $is_proper 1
    var p
      type-con $ptr 0
    select 2
    fun $f_closed 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $ref_cnt 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.885:35
      attribute uniqueId 1
        string-attr 13310
      attribute bvZ3Native 1
        string-attr False
      attribute inline 1
        expr-attr
          false
    =
    fun $ref_cnt 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $f_ref_cnt 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    =
    fun $position_marker 0
    true
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $owns 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.894:16
      attribute uniqueId 1
        string-attr 13311
      attribute bvZ3Native 1
        string-attr False
    =
    fun $owns 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $int_to_ptrset 1
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 1
        fun $wrapped 3
        var S
          type-con $state 0
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.900:19
      attribute uniqueId 1
        string-attr 13312
      attribute bvZ3Native 1
        string-attr False
    =
    fun $wrapped 3
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    and 5
    fun $is 2
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    fun $is_proper 1
    var #p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $me 0
    fun $closed 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    not
    fun $is_primitive 1
    var #t
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $mutable 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.909:19
      attribute uniqueId 1
        string-attr 13313
      attribute bvZ3Native 1
        string-attr False
    =
    fun $mutable 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 3
    fun $is_proper 1
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    fun $me 0
    not
    fun $closed 2
    var S
      type-con $state 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 2
        fun $addr 1
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        fun $owner 2
        var S
          type-con $state 0
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.980:15
      attribute uniqueId 1
        string-attr 13316
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    implies
    and 3
    fun $is_proper 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $in_range_phys_ptr 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    =
    fun $owner 2
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    =
    select 3
    fun $typemap 1
    fun $f_owner 1
    var S
      type-con $state 0
    fun $addr 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $field_type 1
    var f
      type-con $field 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $retype 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1001:18
      attribute uniqueId 1
        string-attr 13317
      attribute bvZ3Native 1
        string-attr False
    =
    fun $retype 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    select 3
    fun $typemap 1
    fun $f_owner 1
    var S
      type-con $state 0
    fun $addr 1
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p1
        type-con $ptr 0
      var p2
        type-con $ptr 0
      pat 1
        fun $ptr_eq 2
        var p1
          type-con $ptr 0
        var p2
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1005:18
      attribute uniqueId 1
        string-attr 13318
      attribute bvZ3Native 1
        string-attr False
    =
    fun $ptr_eq 2
    var p1
      type-con $ptr 0
    var p2
      type-con $ptr 0
    =
    fun $addr 1
    var p1
      type-con $ptr 0
    fun $addr 1
    var p2
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p1
        type-con $ptr 0
      var p2
        type-con $ptr 0
      pat 1
        fun $byte_ptr_subtraction 2
        var p1
          type-con $ptr 0
        var p2
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1015:32
      attribute uniqueId 1
        string-attr 13319
      attribute bvZ3Native 1
        string-attr False
    =
    fun $byte_ptr_subtraction 2
    var p1
      type-con $ptr 0
    var p2
      type-con $ptr 0
    -
    fun $addr 1
    var p1
      type-con $ptr 0
    fun $addr 1
    var p2
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $is_domain_root 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1027:26
      attribute uniqueId 1
        string-attr 13320
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_domain_root 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    true
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $thread_local 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1048:24
      attribute uniqueId 1
        string-attr 13321
      attribute bvZ3Native 1
        string-attr False
    =
    fun $thread_local 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    fun $is_proper 1
    var p
      type-con $ptr 0
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    and 5
    or 2
    fun $is_sequential_field 1
    fun $field 1
    var p
      type-con $ptr 0
    not
    fun $closed 2
    var S
      type-con $state 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $is_proper 1
    fun $prim_emb 1
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $me 0
    not
    =
    fun $addr0 1
    fun $prim_emb 1
    var p
      type-con $ptr 0
    int-num 0
    and 4
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $is_proper 1
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    not
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $typed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1062:17
      attribute uniqueId 1
        string-attr 13322
      attribute bvZ3Native 1
        string-attr False
    =
    fun $typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 3
    not
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
    fun $is_proper 1
    var p
      type-con $ptr 0
    not
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    fun $untyped_owner 0
axiom 0
    forall 4 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var p
        type-con $ptr 0
      var typ
        type-con $ctype 0
      pat 1
        fun $inv2_without_lemmas 4
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var typ
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.1121:15
      attribute uniqueId 1
        string-attr 13323
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $inv2 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var typ
      type-con $ctype 0
    fun $inv2_without_lemmas 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var typ
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $function_entry 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1129:15
      attribute uniqueId 1
        string-attr 13324
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $function_entry 1
    var S
      type-con $state 0
    and 3
    fun $full_stop 1
    var S
      type-con $state 0
    >=
    fun $current_timestamp 1
    var S
      type-con $state 0
    int-num 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1139:11
      attribute uniqueId 1
        string-attr 13327
      attribute bvZ3Native 1
        string-attr False
    <=
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $full_stop 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1132:15
      attribute uniqueId 1
        string-attr 13325
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $full_stop 1
    var S
      type-con $state 0
    and 2
    fun $good_state 1
    var S
      type-con $state 0
    fun $invok_state 1
    var S
      type-con $state 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $invok_state 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1135:15
      attribute uniqueId 1
        string-attr 13326
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $invok_state 1
    var S
      type-con $state 0
    fun $good_state 1
    var S
      type-con $state 0
axiom 0
    forall 2 1 3
      var id
        type-con $token 0
      var S
        type-con $state 0
      pat 1
        fun $good_state_ext 2
        var id
          type-con $token 0
        var S
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1146:15
      attribute uniqueId 1
        string-attr 13328
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state_ext 2
    var id
      type-con $token 0
    var S
      type-con $state 0
    fun $good_state 1
    var S
      type-con $state 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $owns 2
        var S
          type-con $state 0
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var p
          type-con $ptr 0
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
        fun $base 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1171:15
      attribute uniqueId 1
        string-attr 13330
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    implies
    fun $is 2
    var p
      type-con $ptr 0
    fun $array 2
    var t
      type-con $ctype 0
    var sz
      int
    =
    fun $owns 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_empty 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 1
        fun $inv2 4
        var S
          type-con $state 0
        var S
          type-con $state 0
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.1175:15
      attribute uniqueId 1
        string-attr 13331
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $invok_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $inv2 4
    var S
      type-con $state 0
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $good_state 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1178:15
      attribute uniqueId 1
        string-attr 13332
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $set_in_pos 2
        var p
          type-con $ptr 0
        fun $owns 2
        var S
          type-con $state 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1151:13
      attribute uniqueId 1
        string-attr 13329
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $good_state 1
    var S
      type-con $state 0
    select 2
    fun $int_to_ptrset 1
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    and 5
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    not
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
    true
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $closed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1182:14
      attribute uniqueId 1
        string-attr 13333
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    implies
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    not
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $f_owner 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1187:14
      attribute uniqueId 1
        string-attr 13334
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    implies
    =
    select 2
    fun $f_owner 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    and 5
    fun $is_proper 1
    var p
      type-con $ptr 0
    not
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $is_proper 1
    var p
      type-con $ptr 0
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var r
        type-con $ptr 0
      pat 2
        fun $owner 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
        fun $addr 1
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1191:15
      attribute uniqueId 1
        string-attr 13335
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    not
    =
    fun $owner 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $untyped_owner 0
    fun $in_range_phys_ptr 1
    var r
      type-con $ptr 0
    fun $in_range_t 2
    fun $arch_ptr_type 0
    +
    fun $addr 1
    var r
      type-con $ptr 0
    fun $sizeof 1
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var r
        type-con $ptr 0
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1196:15
      attribute uniqueId 1
        string-attr 13336
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 3
    not
    =
    fun $addr0 1
    fun $owner 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    int-num 0
    fun $is_proper 1
    fun $owner 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    implies
    not
    =
    fun $owner 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $untyped_owner 0
    and 5
    fun $is_proper 1
    var r
      type-con $ptr 0
    not
    =
    fun $addr0 1
    var r
      type-con $ptr 0
    int-num 0
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    implies
    fun $is_sequential_field 1
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    fun $owner 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    fun $owner 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    true
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        fun $prim_emb 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1209:15
      attribute uniqueId 1
        string-attr 13337
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_proper 1
    var p
      type-con $ptr 0
    not
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $untyped_owner 0
    not
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $roots 1
        var S
          type-con $state 0
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1219:15
      attribute uniqueId 1
        string-attr 13338
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      pat 1
        fun $call_transition 2
        var S0
          type-con $state 0
        var S1
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1226:15
      attribute uniqueId 1
        string-attr 13339
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $call_transition 2
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    fun $trans_call_transition 2
    var S0
      type-con $state 0
    var S1
      type-con $state 0
axiom 0
    forall 3 1 3
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      pat 2
        fun $trans_call_transition 2
        var S0
          type-con $state 0
        var S1
          type-con $state 0
        fun $call_transition 2
        var S1
          type-con $state 0
        var S2
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1229:15
      attribute uniqueId 1
        string-attr 13340
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $trans_call_transition 2
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    fun $call_transition 2
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    fun $trans_call_transition 2
    var S0
      type-con $state 0
    var S2
      type-con $state 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      var t
        type-con $ctype 0
      pat 1
        select 2
        select 2
        fun $heap 1
        var S
          type-con $state 0
        fun $as_field_with_type 2
        var f
          type-con $field 0
        fun $as_in_range_t 1
        var t
          type-con $ctype 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1236:15
      attribute uniqueId 1
        string-attr 13341
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    fun $in_range_t 2
    var t
      type-con $ctype 0
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $as_field_with_type 2
    var f
      type-con $field 0
    fun $as_in_range_t 1
    var t
      type-con $ctype 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var o
        type-con $ptr 0
      var owns
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $updated_owns 4
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var o
          type-con $ptr 0
        var owns
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.1317:24
      attribute uniqueId 1
        string-attr 13345
      attribute bvZ3Native 1
        string-attr False
    =
    fun $updated_owns 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    var owns
      array 2
        type-con $ptr 0
        bool
    =
    fun $heap 1
    var S
      type-con $state 0
    store 3
    fun $heap 1
    var S0
      type-con $state 0
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    store 3
    select 2
    fun $heap 1
    var S0
      type-con $state 0
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $ptrset_to_int 1
    var owns
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 2 1 4
      var time
        int
      var p
        type-con $ptr 0
      pat 1
        fun $in_writes_at 2
        var time
          int
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1359:40
      attribute uniqueId 1
        string-attr 13346
      attribute bvZ3Native 1
        string-attr False
      attribute inline 1
        expr-attr
          false
    =
    fun $in_writes_at 2
    var time
      int
    var p
      type-con $ptr 0
    select 2
    fun $writes_at 1
    var time
      int
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 4
      var S
        type-con $state 0
      var begin_time
        int
      var p
        type-con $ptr 0
      pat 1
        fun $top_writable 3
        var S
          type-con $state 0
        var begin_time
          int
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1402:40
      attribute uniqueId 1
        string-attr 13347
      attribute bvZ3Native 1
        string-attr False
      attribute inline 1
        expr-attr
          false
    =
    fun $top_writable 3
    var S
      type-con $state 0
    var begin_time
      int
    var p
      type-con $ptr 0
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    and 4
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $is_proper 1
    var p
      type-con $ptr 0
    fun $mutable 2
    var S
      type-con $state 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    or 2
    >=
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    var begin_time
      int
    fun $in_writes_at 2
    var begin_time
      int
    var p
      type-con $ptr 0
    and 2
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    or 2
    >=
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var begin_time
      int
    fun $in_writes_at 2
    var begin_time
      int
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 4
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      var W
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $modifies 3
        var S0
          type-con $state 0
        var S1
          type-con $state 0
        var W
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.1413:36
      attribute uniqueId 1
        string-attr 13355
      attribute bvZ3Native 1
        string-attr False
      attribute inline 1
        expr-attr
          false
    =
    fun $modifies 3
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    var W
      array 2
        type-con $ptr 0
        bool
    and 9
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $roots 1
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1414:13
      attribute uniqueId 1
        string-attr 13348
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    =
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    =
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $roots 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        select 2
        select 2
        fun $heap 1
        var S1
          type-con $state 0
        var f
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1415:13
      attribute uniqueId 1
        string-attr 13349
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    =
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    implies
    or 3
    fun $is_sequential_field 1
    var f
      type-con $field 0
    fun $is_semi_sequential_field 1
    var f
      type-con $field 0
    not
    fun $closed 2
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    =
    select 2
    select 2
    fun $heap 1
    var S0
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    select 2
    select 2
    fun $heap 1
    var S1
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $f_timestamp 1
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1418:13
      attribute uniqueId 1
        string-attr 13350
      attribute bvZ3Native 1
        string-attr False
    and 3
    implies
    and 2
    =
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    =
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    >=
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S1
      type-con $state 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $f_closed 1
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1422:13
      attribute uniqueId 1
        string-attr 13351
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    =
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    =
    select 2
    fun $f_closed 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_closed 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $f_owner 1
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1423:13
      attribute uniqueId 1
        string-attr 13352
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    =
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    =
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_owner 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $wrapped 3
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
        fun $field_type 1
        fun $field 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1425:13
      attribute uniqueId 1
        string-attr 13353
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    fun $wrapped 3
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $wrapped 3
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $mutable 2
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1427:13
      attribute uniqueId 1
        string-attr 13354
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    fun $mutable 2
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $mutable 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $current_timestamp 1
    var S0
      type-con $state 0
    fun $current_timestamp 1
    var S1
      type-con $state 0
    fun $call_transition 2
    var S0
      type-con $state 0
    var S1
      type-con $state 0
axiom 0
    forall 4 1 3
      var s0
        type-con $state 0
      var s1
        type-con $state 0
      var p
        type-con $ptr 0
      var sz
        int
      pat 1
        fun $same_array 4
        var s0
          type-con $state 0
        var s1
          type-con $state 0
        var p
          type-con $ptr 0
        var sz
          int
      attribute qid 1
        string-attr Vcc3Prel.1474:22
      attribute uniqueId 1
        string-attr 13359
      attribute bvZ3Native 1
        string-attr False
    =
    fun $same_array 4
    var s0
      type-con $state 0
    var s1
      type-con $state 0
    var p
      type-con $ptr 0
    var sz
      int
    forall 1 1 3
      var i
        int
      pat 1
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.1476:11
      attribute uniqueId 1
        string-attr 13358
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <=
    var i
      int
    -
    var sz
      int
    int-num 1
    =
    select 2
    select 2
    fun $heap 1
    var s0
      type-con $state 0
    fun $field 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    fun $prim_emb 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    select 2
    select 2
    fun $heap 1
    var s1
      type-con $state 0
    fun $field 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    fun $prim_emb 1
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
axiom 0
    forall 3 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var o
        type-con $ptr 0
      pat 1
        fun $is_unwrapped_dynamic 3
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1592:32
      attribute uniqueId 1
        string-attr 13362
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_unwrapped_dynamic 3
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    and 4
    fun $is_unwrapped 3
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    forall 1 1 3
      var r
        type-con $ptr 0
      pat 1
        select 2
        fun $f_timestamp 1
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1595:14
      attribute uniqueId 1
        string-attr 13360
      attribute bvZ3Native 1
        string-attr False
    ite
    or 2
    =
    fun $owner 2
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    var o
      type-con $ptr 0
    =
    var r
      type-con $ptr 0
    var o
      type-con $ptr 0
    and 2
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    <
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    =
    select 2
    fun $f_timestamp 1
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    forall 1 2 3
      var r
        type-con $ptr 0
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      pat 1
        fun $closed 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1598:14
      attribute uniqueId 1
        string-attr 13361
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    var r
      type-con $ptr 0
    and 2
    =
    fun $owner 2
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $wrapped 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    =
    fun $f_owner 1
    var S
      type-con $state 0
    fun lambda@680 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var o
        type-con $ptr 0
      pat 1
        fun $is_unwrapped 3
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1605:24
      attribute uniqueId 1
        string-attr 13364
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_unwrapped 3
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    and 10
    true
    fun $mutable 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    =
    fun $heap 1
    var S
      type-con $state 0
    fun $heap 1
    var S0
      type-con $state 0
    =
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1611:14
      attribute uniqueId 1
        string-attr 13363
      attribute bvZ3Native 1
        string-attr False
    or 2
    and 2
    not
    =
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    =
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 3
    =
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    or 2
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    not
    =
    fun $owner 2
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    =
    fun $f_closed 1
    var S
      type-con $state 0
    store 3
    fun $f_closed 1
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    false
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    fun $call_transition 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    fun $post_unwrap 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    =
    fun $typemap 1
    fun $f_owner 1
    var S0
      type-con $state 0
    fun $typemap 1
    fun $f_owner 1
    var S
      type-con $state 0
axiom 0
    forall 3 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var o
        type-con $ptr 0
      pat 1
        fun $is_wrapped_dynamic 3
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1627:30
      attribute uniqueId 1
        string-attr 13365
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_wrapped_dynamic 3
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    and 4
    fun $is_wrapped 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    =
    fun $heap 1
    var S
      type-con $state 0
    fun $heap 1
    var S0
      type-con $state 0
    =
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    =
    fun $f_owner 1
    var S
      type-con $state 0
    fun lambda@681 2
    var o
      type-con $ptr 0
    var S0
      type-con $state 0
axiom 0
    forall 4 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var o
        type-con $ptr 0
      var owns
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $is_wrapped 4
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var o
          type-con $ptr 0
        var owns
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.1636:22
      attribute uniqueId 1
        string-attr 13367
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_wrapped 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    var owns
      array 2
        type-con $ptr 0
        bool
    and 9
    true
    =
    fun $f_closed 1
    var S
      type-con $state 0
    store 3
    fun $f_closed 1
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    true
    =
    fun $f_timestamp 1
    var S
      type-con $state 0
    store 3
    fun $f_timestamp 1
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1641:14
      attribute uniqueId 1
        string-attr 13366
      attribute bvZ3Native 1
        string-attr False
    or 2
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    or 2
    =
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    select 2
    var owns
      array 2
        type-con $ptr 0
        bool
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    fun $wrapped 3
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    implies
    fun $is_claimable 1
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    and 2
    =
    fun $ref_cnt 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    int-num 0
    =
    fun $ref_cnt 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    int-num 0
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    fun $call_transition 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    =
    fun $typemap 1
    fun $f_owner 1
    var S0
      type-con $state 0
    fun $typemap 1
    fun $f_owner 1
    var S
      type-con $state 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var l
        type-con $ptr 0
      var p
        type-con $ptr 0
      pat 1
        fun $take_over 3
        var S
          type-con $state 0
        var l
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1687:15
      attribute uniqueId 1
        string-attr 13369
      attribute bvZ3Native 1
        string-attr False
    =
    fun $f_owner 1
    fun $take_over 3
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    store 3
    fun $f_owner 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var l
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      pat 1
        fun $start_release 2
        var S0
          type-con $state 0
        var S
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1690:15
      attribute uniqueId 1
        string-attr 13370
      attribute bvZ3Native 1
        string-attr False
    and 3
    =
    fun $f_owner 1
    fun $start_release 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    fun $f_owner 1
    var S
      type-con $state 0
    =
    fun $f_timestamp 1
    fun $start_release 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    fun $f_timestamp 1
    var S
      type-con $state 0
    >
    fun $current_timestamp 1
    fun $start_release 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    fun $current_timestamp 1
    var S
      type-con $state 0
axiom 0
    forall 4 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var l
        type-con $ptr 0
      var p
        type-con $ptr 0
      pat 1
        fun $release 4
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var l
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1696:15
      attribute uniqueId 1
        string-attr 13371
      attribute bvZ3Native 1
        string-attr False
    and 3
    =
    fun $f_owner 1
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    store 3
    fun $f_owner 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    =
    fun $f_timestamp 1
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    store 3
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    >
    fun $current_timestamp 1
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
axiom 0
    forall 3 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $change_owner 3
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1747:15
      attribute uniqueId 1
        string-attr 13372
      attribute bvZ3Native 1
        string-attr False
    =
    fun $f_owner 1
    fun $change_owner 3
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun lambda@682 3
    var S
      type-con $state 0
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var o
        type-con $ptr 0
      var owns
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $update_heap_owns 3
        var S
          type-con $state 0
        var o
          type-con $ptr 0
        var owns
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.1750:15
      attribute uniqueId 1
        string-attr 13373
      attribute bvZ3Native 1
        string-attr False
    =
    fun $heap 1
    fun $update_heap_owns 3
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    var owns
      array 2
        type-con $ptr 0
        bool
    store 3
    fun $heap 1
    var S
      type-con $state 0
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    store 3
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $ptrset_to_int 1
    var owns
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 5 1 3
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      var S
        type-con $state 0
      var dynamic
        array 2
          type-con $ptr 0
          bool
      var static
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $is_unwrapped_set 5
        var S0
          type-con $state 0
        var S1
          type-con $state 0
        var S
          type-con $state 0
        var dynamic
          array 2
            type-con $ptr 0
            bool
        var static
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.1753:28
      attribute uniqueId 1
        string-attr 13381
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_unwrapped_set 5
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    var S
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var static
      array 2
        type-con $ptr 0
        bool
    and 12
    =
    fun $heap 1
    var S
      type-con $state 0
    fun $heap 1
    var S0
      type-con $state 0
    =
    fun $typemap 1
    fun $f_owner 1
    var S0
      type-con $state 0
    fun $typemap 1
    fun $f_owner 1
    var S
      type-con $state 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1757:14
      attribute uniqueId 1
        string-attr 13375
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    forall 1 2 3
      var r
        type-con $ptr 0
      pat 1
        fun $owner 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      pat 1
        fun $closed 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1758:16
      attribute uniqueId 1
        string-attr 13374
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    var r
      type-con $ptr 0
    and 2
    =
    fun $owner 2
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $wrapped 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    =
    fun $f_owner 1
    var S
      type-con $state 0
    fun lambda@683 3
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    forall 1 1 3
      var r
        type-con $ptr 0
      pat 1
        select 2
        fun $f_timestamp 1
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1763:14
      attribute uniqueId 1
        string-attr 13376
      attribute bvZ3Native 1
        string-attr False
    ite
    or 3
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var r
      type-con $ptr 0
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    fun $owner 2
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    fun $owner 2
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    and 2
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    <
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    =
    select 2
    fun $f_timestamp 1
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1766:14
      attribute uniqueId 1
        string-attr 13377
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    fun $mutable 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1767:14
      attribute uniqueId 1
        string-attr 13378
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    =
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1768:14
      attribute uniqueId 1
        string-attr 13380
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1769:16
      attribute uniqueId 1
        string-attr 13379
      attribute bvZ3Native 1
        string-attr False
    or 2
    and 2
    not
    =
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    =
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 3
    =
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    or 2
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    not
    =
    fun $owner 2
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    =
    fun $f_closed 1
    var S
      type-con $state 0
    fun lambda@684 3
    var S0
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var static
      array 2
        type-con $ptr 0
        bool
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    fun $call_transition 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    fun $post_unwrap 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
axiom 0
    forall 6 1 3
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var S
        type-con $state 0
      var dynamic
        array 2
          type-con $ptr 0
          bool
      var static
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $is_wrapped_set 6
        var S0
          type-con $state 0
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var S
          type-con $state 0
        var dynamic
          array 2
            type-con $ptr 0
            bool
        var static
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.1777:26
      attribute uniqueId 1
        string-attr 13388
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_wrapped_set 6
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var S
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var static
      array 2
        type-con $ptr 0
        bool
    and 11
    =
    fun $heap 1
    var S
      type-con $state 0
    fun $heap 1
    var S2
      type-con $state 0
    =
    fun $f_owner 1
    var S
      type-con $state 0
    fun $f_owner 1
    var S1
      type-con $state 0
    =
    fun $f_closed 1
    var S
      type-con $state 0
    fun lambda@685 3
    var S0
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var static
      array 2
        type-con $ptr 0
        bool
    forall 1 1 3
      var o
        type-con $ptr 0
      pat 1
        select 2
        fun $f_timestamp 1
        var S
          type-con $state 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1782:14
      attribute uniqueId 1
        string-attr 13382
      attribute bvZ3Native 1
        string-attr False
    ite
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    and 2
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    <
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    =
    select 2
    fun $f_timestamp 1
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1785:14
      attribute uniqueId 1
        string-attr 13384
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1786:16
      attribute uniqueId 1
        string-attr 13383
      attribute bvZ3Native 1
        string-attr False
    or 2
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    or 2
    =
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    select 2
    fun $owns 2
    var S2
      type-con $state 0
    var o
      type-con $ptr 0
    select 2
    fun $roots 1
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1789:14
      attribute uniqueId 1
        string-attr 13385
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    fun $wrapped 3
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1790:14
      attribute uniqueId 1
        string-attr 13386
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    implies
    fun $is_claimable 1
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
    and 2
    =
    fun $ref_cnt 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    int-num 0
    =
    fun $ref_cnt 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    int-num 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1791:14
      attribute uniqueId 1
        string-attr 13387
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    =
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    fun $call_transition 2
    var S0
      type-con $state 0
    var S
      type-con $state 0
    =
    fun $typemap 1
    fun $f_owner 1
    var S0
      type-con $state 0
    fun $typemap 1
    fun $f_owner 1
    var S
      type-con $state 0
axiom 0
    forall 4 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $spans_the_same_no_timestamp 4
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.1825:39
      attribute uniqueId 1
        string-attr 13395
      attribute bvZ3Native 1
        string-attr False
    =
    fun $spans_the_same_no_timestamp 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    and 2
    =
    fun $owns 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $owns 2
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var f
        type-con $field 0
      pat 1
        select 2
        select 2
        fun $heap 1
        var S2
          type-con $state 0
        var f
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1827:13
      attribute uniqueId 1
        string-attr 13394
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_proper 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    not
    =
    var f
      type-con $field 0
    fun $f_ref_cnt 1
    var t
      type-con $ctype 0
    =
    select 2
    select 2
    fun $heap 1
    var S1
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    select 2
    select 2
    fun $heap 1
    var S2
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $spans_the_same 4
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.1831:26
      attribute uniqueId 1
        string-attr 13396
      attribute bvZ3Native 1
        string-attr False
    =
    fun $spans_the_same 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    and 2
    fun $spans_the_same_no_timestamp 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    =
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $nonvolatile_spans_the_same 4
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.1835:38
      attribute uniqueId 1
        string-attr 13398
      attribute bvZ3Native 1
        string-attr False
    =
    fun $nonvolatile_spans_the_same 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    and 2
    forall 1 1 3
      var f
        type-con $field 0
      pat 1
        select 2
        select 2
        fun $heap 1
        var S2
          type-con $state 0
        var f
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1836:13
      attribute uniqueId 1
        string-attr 13397
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_proper 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $is_sequential_field 1
    var f
      type-con $field 0
    =
    select 2
    select 2
    fun $heap 1
    var S1
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    select 2
    select 2
    fun $heap 1
    var S2
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    =
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $admissibility_start 2
        var p
          type-con $ptr 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.1843:31
      attribute uniqueId 1
        string-attr 13399
      attribute bvZ3Native 1
        string-attr False
    =
    fun $admissibility_start 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    and 2
    fun $is 2
    var p
      type-con $ptr 0
    var t
      type-con $ctype 0
    fun $is_proper 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      pat 2
        fun $full_stop 1
        var S
          type-con $state 0
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1914:15
      attribute uniqueId 1
        string-attr 13404
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $full_stop 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      pat 1
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1917:15
      attribute uniqueId 1
        string-attr 13405
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    and 2
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $invok_state 1
    var S
      type-con $state 0
axiom 0
    forall 2 1 3
      var c1
        type-con $ptr 0
      var c2
        type-con $ptr 0
      pat 1
        fun $claims_claim 2
        var c1
          type-con $ptr 0
        var c2
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1946:15
      attribute uniqueId 1
        string-attr 13409
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $is 2
    var c1
      type-con $ptr 0
    fun ^^claim 0
    fun $is 2
    var c2
      type-con $ptr 0
    fun ^^claim 0
    forall 1 0 3
      var S
        type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.1948:11
      attribute uniqueId 1
        string-attr 13408
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $valid_claim 2
    var S
      type-con $state 0
    var c1
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var c2
      type-con $ptr 0
    fun $claims_claim 2
    var c1
      type-con $ptr 0
    var c2
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c1
        type-con $ptr 0
      var c2
        type-con $ptr 0
      pat 2
        fun $valid_claim 2
        var S
          type-con $state 0
        var c1
          type-con $ptr 0
        fun $claims_claim 2
        var c1
          type-con $ptr 0
        var c2
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1952:15
      attribute uniqueId 1
        string-attr 13410
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $valid_claim 2
    var S
      type-con $state 0
    var c1
      type-con $ptr 0
    fun $claims_claim 2
    var c1
      type-con $ptr 0
    var c2
      type-con $ptr 0
    fun $valid_claim 2
    var S
      type-con $state 0
    var c2
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var o
        type-con $ptr 0
      pat 2
        fun $closed 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        fun $claims_obj 2
        var c
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1955:15
      attribute uniqueId 1
        string-attr 13411
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    implies
    and 2
    fun $claims_obj 2
    var c
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    and 3
    fun $instantiate_ptrset 1
    fun $owns 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    >
    fun $ref_cnt 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    int-num 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var o
        type-con $ptr 0
      pat 2
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        fun $claims_obj 2
        var c
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1960:15
      attribute uniqueId 1
        string-attr 13412
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $claims_obj 2
    var c
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $inv2 4
    var S
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var o
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var r
        type-con $ptr 0
      var f
        type-con $field 0
      pat 2
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        fun $claims_obj 2
        var c
          type-con $ptr 0
        fun $dot 2
        var r
          type-con $ptr 0
        fun $as_field_with_type 2
        var f
          type-con $field 0
        fun ^^claim 0
      attribute qid 1
        string-attr Vcc3Prel.1964:15
      attribute uniqueId 1
        string-attr 13413
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is 2
    fun $dot 2
    var r
      type-con $ptr 0
    var f
      type-con $field 0
    fun ^^claim 0
    implies
    and 2
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $claims_obj 2
    var c
      type-con $ptr 0
    fun $dot 2
    var r
      type-con $ptr 0
    var f
      type-con $field 0
    fun $valid_claim 2
    var S
      type-con $state 0
    fun $dot 2
    var r
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $not_shared 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1970:22
      attribute uniqueId 1
        string-attr 13414
      attribute bvZ3Native 1
        string-attr False
    =
    fun $not_shared 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    fun $wrapped 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    or 2
    not
    fun $is_claimable 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    =
    fun $ref_cnt 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 2 1 3
      var s
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $claimed_closed 2
        var s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1973:26
      attribute uniqueId 1
        string-attr 13415
      attribute bvZ3Native 1
        string-attr False
    =
    fun $claimed_closed 2
    var s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $closed 2
    var s
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $invok_state 1
        var S
          type-con $state 0
        fun $claimed_closed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1976:15
      attribute uniqueId 1
        string-attr 13416
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $invok_state 1
    var S
      type-con $state 0
    fun $claimed_closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $inv2 4
    var S
      type-con $state 0
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
axiom 0
    and 2
    =
    fun $field_type 1
    fun $field 1
    fun $no_claim 0
    fun ^^claim 0
    =
    fun $addr0 1
    fun $no_claim 0
    int-num 0
axiom 0
    forall 2 1 3
      var the_new
        type-con $ptr 0
      var the_old
        type-con $ptr 0
      pat 1
        fun $claims_upgrade 2
        var the_new
          type-con $ptr 0
        var the_old
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2026:26
      attribute uniqueId 1
        string-attr 13419
      attribute bvZ3Native 1
        string-attr False
    =
    fun $claims_upgrade 2
    var the_new
      type-con $ptr 0
    var the_old
      type-con $ptr 0
    forall 1 0 3
      var o
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2027:13
      attribute uniqueId 1
        string-attr 13418
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $claims_obj 2
    var the_old
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $claims_obj 2
    var the_new
      type-con $ptr 0
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var o
        type-con $ptr 0
      pat 1
        fun $account_claim 3
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2029:25
      attribute uniqueId 1
        string-attr 13420
      attribute bvZ3Native 1
        string-attr False
    =
    fun $account_claim 3
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    var o
      type-con $ptr 0
    and 3
    fun $good_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $claims_obj 2
    var c
      type-con $ptr 0
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var o
        type-con $ptr 0
      pat 1
        fun $account_claim 3
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2035:15
      attribute uniqueId 1
        string-attr 13421
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $account_claim 3
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    var o
      type-con $ptr 0
    and 3
    =
    fun $claim_no 3
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $claim_idx 2
    var o
      type-con $ptr 0
    var c
      type-con $ptr 0
    var c
      type-con $ptr 0
    <=
    int-num 0
    fun $claim_idx 2
    var o
      type-con $ptr 0
    var c
      type-con $ptr 0
    <
    fun $claim_idx 2
    var o
      type-con $ptr 0
    var c
      type-con $ptr 0
    fun $ref_cnt 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_domain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr Vcc3Prel.2118:25
      attribute uniqueId 1
        string-attr 13423
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_domain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_vdomain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr Vcc3Prel.2120:26
      attribute uniqueId 1
        string-attr 13424
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_vdomain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $in_vdomain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_domain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr Vcc3Prel.2124:15
      attribute uniqueId 1
        string-attr 13425
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_domain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $inv_lab 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var l
      type-con $label 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_vdomain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr Vcc3Prel.2127:15
      attribute uniqueId 1
        string-attr 13426
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_vdomain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $inv_lab 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var l
      type-con $label 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $in_domain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2137:15
      attribute uniqueId 1
        string-attr 13427
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $full_stop 1
    var S
      type-con $state 0
    fun $wrapped 3
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $in_domain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2140:15
      attribute uniqueId 1
        string-attr 13428
      attribute bvZ3Native 1
        string-attr False
    and 2
    fun $instantiate_ptr 1
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    implies
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    and 7
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $wrapped 3
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $inv2 4
    var S
      type-con $state 0
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    not
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $untyped_owner 0
    fun $set_in0 2
    var p
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $in_domain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2151:15
      attribute uniqueId 1
        string-attr 13429
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $full_stop 1
    var S
      type-con $state 0
    select 2
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $wrapped 3
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var q
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 1
        fun $in_domain 3
        var S
          type-con $state 0
        var r
          type-con $ptr 0
        select 2
        fun $roots 1
        var S
          type-con $state 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2154:15
      attribute uniqueId 1
        string-attr 13430
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $in_domain 3
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    fun $set_in0 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    and 3
    =
    fun $owner 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    var q
      type-con $ptr 0
    =
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var q
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $as_deep_domain 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2163:26
      attribute uniqueId 1
        string-attr 13431
      attribute bvZ3Native 1
        string-attr False
    =
    fun $as_deep_domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $wrapped_with_deep_domain 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2164:36
      attribute uniqueId 1
        string-attr 13432
      attribute bvZ3Native 1
        string-attr False
    =
    fun $wrapped_with_deep_domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $as_deep_domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 2
        fun $in_domain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        fun $as_deep_domain 2
        var S
          type-con $state 0
        var q
          type-con $ptr 0
        select 2
        fun $owns 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2167:15
      attribute uniqueId 1
        string-attr 13433
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $good_state 1
    var S
      type-con $state 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    select 2
    fun $owns 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var r
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 2
        select 2
        fun $ver_domain 1
        fun $int_to_version 1
        select 2
        fun $f_timestamp 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        fun $in_vdomain 3
        var S
          type-con $state 0
        var r
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2182:15
      attribute uniqueId 1
        string-attr 13435
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $is_volatile_field 1
    fun $f_owns 1
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    select 2
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    forall 1 0 3
      var S1
        type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.2186:11
      attribute uniqueId 1
        string-attr 13434
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $inv2 4
    var S1
      type-con $state 0
    var S1
      type-con $state 0
    var q
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    =
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_in0 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S1
      type-con $state 0
    var q
      type-con $ptr 0
    and 2
    fun $in_vdomain 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $set_in0 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $in_vdomain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2193:15
      attribute uniqueId 1
        string-attr 13436
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_vdomain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var d
        type-con $ptr 0
      var f
        type-con $field 0
      pat 3
        select 2
        select 2
        fun $heap 1
        var S
          type-con $state 0
        var f
          type-con $field 0
        var p
          type-con $ptr 0
        select 2
        fun $ver_domain 1
        fun $int_to_version 1
        select 2
        fun $f_timestamp 1
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        var p
          type-con $ptr 0
        fun $is_sequential_field 1
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.2198:15
      attribute uniqueId 1
        string-attr 13437
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    select 2
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $is_sequential_field 1
    var f
      type-con $field 0
    =
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    fun $fetch_from_domain 3
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var c
        type-con $ptr 0
      pat 1
        fun $in_claim_domain 2
        var p
          type-con $ptr 0
        var c
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2214:15
      attribute uniqueId 1
        string-attr 13440
      attribute bvZ3Native 1
        string-attr False
    implies
    implies
    forall 2 1 3
      var s
        type-con $state 0
      var q
        type-con $ptr 0
      pat 1
        fun $closed 2
        var s
          type-con $state 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2215:12
      attribute uniqueId 1
        string-attr 13438
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $invok_state 1
    var s
      type-con $state 0
    fun $closed 2
    var s
      type-con $state 0
    var q
      type-con $ptr 0
    fun $inv2_without_lemmas 4
    var s
      type-con $state 0
    var s
      type-con $state 0
    var q
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    forall 1 1 3
      var s
        type-con $state 0
      pat 1
        fun $dont_instantiate_state 1
        var s
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.2216:12
      attribute uniqueId 1
        string-attr 13439
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $valid_claim 2
    var s
      type-con $state 0
    var c
      type-con $ptr 0
    fun $closed 2
    var s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var obj
        type-con $ptr 0
      var ptr
        type-con $ptr 0
      pat 1
        fun $by_claim 4
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        var obj
          type-con $ptr 0
        var ptr
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2219:20
      attribute uniqueId 1
        string-attr 13441
      attribute bvZ3Native 1
        string-attr False
    =
    fun $by_claim 4
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    var obj
      type-con $ptr 0
    var ptr
      type-con $ptr 0
    var ptr
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var c
        type-con $ptr 0
      var f
        type-con $field 0
      pat 2
        fun $in_claim_domain 2
        var p
          type-con $ptr 0
        var c
          type-con $ptr 0
        select 2
        select 2
        fun $heap 1
        var S
          type-con $state 0
        var f
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2224:15
      attribute uniqueId 1
        string-attr 13442
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $good_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
    fun $is_sequential_field 1
    var f
      type-con $field 0
    and 2
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
    =
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    fun $fetch_from_domain 3
    fun $claim_version 1
    var c
      type-con $ptr 0
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 5 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var c
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $by_claim 4
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        var q
          type-con $ptr 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.2232:15
      attribute uniqueId 1
        string-attr 13443
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $good_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
    fun $is_sequential_field 1
    var f
      type-con $field 0
    and 2
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
    =
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    fun $fetch_from_domain 3
    fun $claim_version 1
    var c
      type-con $ptr 0
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_vol_version 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2250:28
      attribute uniqueId 1
        string-attr 13444
      attribute bvZ3Native 1
        string-attr False
    =
    fun $read_vol_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $int_to_vol_version 1
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $f_vol_version 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 5 1 3
      var S
        type-con $state 0
      var t
        type-con $ctype 0
      var p
        type-con $ptr 0
      var approver
        type-con $field 0
      var subject
        type-con $field 0
      pat 2
        fun $is_approved_by 3
        var t
          type-con $ctype 0
        var approver
          type-con $field 0
        var subject
          type-con $field 0
        select 2
        select 2
        fun $heap 1
        var S
          type-con $state 0
        var subject
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2263:15
      attribute uniqueId 1
        string-attr 13445
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $full_stop 1
    var S
      type-con $state 0
    fun $is_approved_by 3
    var t
      type-con $ctype 0
    var approver
      type-con $field 0
    var subject
      type-con $field 0
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    or 2
    =
    fun $int_to_ptr 1
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    var approver
      type-con $field 0
    var p
      type-con $ptr 0
    fun $me 0
    =
    fun $int_to_ptr 1
    fun $fetch_from_vv 3
    fun $read_vol_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    var approver
      type-con $field 0
    fun $me 0
    =
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    var subject
      type-con $field 0
    var p
      type-con $ptr 0
    fun $fetch_from_vv 3
    fun $read_vol_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    var subject
      type-con $field 0
axiom 0
    forall 4 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var dependant
        type-con $ptr 0
      var this
        type-con $ptr 0
      pat 1
        fun $depends 4
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var dependant
          type-con $ptr 0
        var this
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2282:19
      attribute uniqueId 1
        string-attr 13446
      attribute bvZ3Native 1
        string-attr False
    =
    fun $depends 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var dependant
      type-con $ptr 0
    var this
      type-con $ptr 0
    or 4
    fun $spans_the_same 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var this
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var this
      type-con $ptr 0
    and 2
    not
    fun $closed 2
    var S1
      type-con $state 0
    var dependant
      type-con $ptr 0
    not
    fun $closed 2
    var S2
      type-con $state 0
    var dependant
      type-con $ptr 0
    and 2
    fun $inv2 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var dependant
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var dependant
      type-con $ptr 0
    fun $nonvolatile_spans_the_same 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var dependant
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var dependant
      type-con $ptr 0
    fun $is_threadtype 1
    fun $field_type 1
    fun $field 1
    var dependant
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      var subject
        type-con $field 0
      pat 2
        fun $is_owner_approved 2
        var t
          type-con $ctype 0
        var subject
          type-con $field 0
        select 2
        select 2
        fun $heap 1
        var S
          type-con $state 0
        var subject
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2292:15
      attribute uniqueId 1
        string-attr 13447
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $full_stop 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $is_owner_approved 2
    var t
      type-con $ctype 0
    var subject
      type-con $field 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    =
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    var subject
      type-con $field 0
    var p
      type-con $ptr 0
    fun $fetch_from_vv 3
    fun $read_vol_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    var subject
      type-con $field 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dot_emb 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2326:15
      attribute uniqueId 1
        string-attr 13448
      attribute bvZ3Native 1
        string-attr False
    and 2
    =
    fun $dot_emb 1
    var p
      type-con $ptr 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    implies
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    =
    fun $dot 2
    fun $prim_emb 1
    var p
      type-con $ptr 0
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var r
        type-con $ptr 0
      pat 1
        fun $extent 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2331:18
      attribute uniqueId 1
        string-attr 13449
      attribute bvZ3Native 1
        string-attr False
    =
    fun $extent 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun lambda@686 2
    var r
      type-con $ptr 0
    var S
      type-con $state 0
axiom 0
    forall 1 1 3
      var r
        type-con $ptr 0
      pat 1
        fun $full_extent 1
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2335:23
      attribute uniqueId 1
        string-attr 13450
      attribute bvZ3Native 1
        string-attr False
    =
    fun $full_extent 1
    var r
      type-con $ptr 0
    fun lambda@687 1
    var r
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 1
        select 2
        fun $composite_extent 3
        var S
          type-con $state 0
        var r
          type-con $ptr 0
        fun $field_type 1
        fun $field 1
        var r
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2338:15
      attribute uniqueId 1
        string-attr 13451
      attribute bvZ3Native 1
        string-attr False
    fun $extent_hint 2
    var p
      type-con $ptr 0
    var r
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var o
        type-con $ptr 0
      pat 1
        fun $span 1
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2342:16
      attribute uniqueId 1
        string-attr 13452
      attribute bvZ3Native 1
        string-attr False
    =
    fun $span 1
    var o
      type-con $ptr 0
    fun lambda@688 1
    var o
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var r
        type-con $ptr 0
      pat 1
        fun $extent_mutable 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2348:26
      attribute uniqueId 1
        string-attr 13454
      attribute bvZ3Native 1
        string-attr False
    =
    fun $extent_mutable 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    and 2
    fun $mutable 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $extent_hint 2
        var p
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2350:13
      attribute uniqueId 1
        string-attr 13453
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $mutable 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var r
        type-con $ptr 0
      pat 1
        fun $extent_thread_local 2
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2352:31
      attribute uniqueId 1
        string-attr 13456
      attribute bvZ3Native 1
        string-attr False
    =
    fun $extent_thread_local 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    and 2
    or 2
    and 2
    fun $is_span_sequential 1
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    fun $thread_local 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $mutable 2
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $extent_hint 2
        var p
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2354:13
      attribute uniqueId 1
        string-attr 13455
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    or 2
    and 2
    fun $is_span_sequential 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $thread_local 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $mutable 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var T
        type-con $ctype 0
      var sz
        int
      var p
        type-con $ptr 0
      pat 1
        fun $extent_mutable 2
        var S
          type-con $state 0
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var p
          type-con $ptr 0
        fun $array 2
        var T
          type-con $ctype 0
        var sz
          int
        fun $base 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2356:15
      attribute uniqueId 1
        string-attr 13457
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $extent_mutable 2
    var S
      type-con $state 0
    fun $ptr 2
    fun $as_field_with_type 2
    fun $field 1
    var p
      type-con $ptr 0
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    fun $base 1
    var p
      type-con $ptr 0
    fun $is_mutable_array 4
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    fun $array_emb 2
    fun $element_type 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $array_length 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var T
        type-con $ctype 0
      var sz
        int
      var p
        type-con $ptr 0
      pat 1
        fun $mutable 2
        var S
          type-con $state 0
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var p
          type-con $ptr 0
        fun $array 2
        var T
          type-con $ctype 0
        var sz
          int
        fun $base 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2359:15
      attribute uniqueId 1
        string-attr 13458
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_phys_ptr 1
    var p
      type-con $ptr 0
    implies
    and 2
    fun $is_primitive 1
    var T
      type-con $ctype 0
    fun $mutable 2
    var S
      type-con $state 0
    fun $ptr 2
    fun $as_field_with_type 2
    fun $field 1
    var p
      type-con $ptr 0
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    fun $base 1
    var p
      type-con $ptr 0
    fun $is_mutable_array 4
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    fun $array_emb 2
    fun $element_type 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $array_length 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
axiom 0
    forall 3 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var r
        type-con $ptr 0
      pat 1
        fun $extent_is_now 3
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2363:25
      attribute uniqueId 1
        string-attr 13460
      attribute bvZ3Native 1
        string-attr False
    =
    fun $extent_is_now 3
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    and 3
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    <
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $extent_hint 2
        var p
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2365:13
      attribute uniqueId 1
        string-attr 13459
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    and 2
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
axiom 0
    forall 3 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var r
        type-con $ptr 0
      pat 1
        fun $extent_is_fresh 3
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2367:27
      attribute uniqueId 1
        string-attr 13462
      attribute bvZ3Native 1
        string-attr False
    =
    fun $extent_is_fresh 3
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    and 3
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    <=
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $extent_hint 2
        var p
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2369:13
      attribute uniqueId 1
        string-attr 13461
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    and 2
    <
    fun $current_timestamp 1
    var S0
      type-con $state 0
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    select 2
    fun $f_timestamp 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var q
        type-con $ptr 0
      pat 1
        fun $volatile_span 2
        var S
          type-con $state 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2371:25
      attribute uniqueId 1
        string-attr 13463
      attribute bvZ3Native 1
        string-attr False
    =
    fun $volatile_span 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun lambda@689 1
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 2
        fun $extent_hint 2
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        fun $extent_hint 2
        var q
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2375:15
      attribute uniqueId 1
        string-attr 13464
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $extent_hint 2
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $extent_hint 2
    var q
      type-con $ptr 0
    var r
      type-con $ptr 0
    fun $extent_hint 2
    var p
      type-con $ptr 0
    var r
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $dot 2
        var p
          type-con $ptr 0
        fun $as_composite_field 1
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.2377:15
      attribute uniqueId 1
        string-attr 13465
      attribute bvZ3Native 1
        string-attr False
    fun $extent_hint 2
    fun $dot 2
    var p
      type-con $ptr 0
    fun $as_composite_field 1
    var f
      type-con $field 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var i
        int
      pat 1
        fun $idx 2
        var p
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.2379:15
      attribute uniqueId 1
        string-attr 13466
      attribute bvZ3Native 1
        string-attr False
    fun $extent_hint 2
    fun $idx 2
    var p
      type-con $ptr 0
    var i
      int
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var #p
        type-con $ptr 0
      pat 1
        fun $first_option_typed 2
        var S
          type-con $state 0
        var #p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2423:30
      attribute uniqueId 1
        string-attr 13471
      attribute bvZ3Native 1
        string-attr False
    =
    fun $first_option_typed 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    implies
    fun $is_union_type 1
    fun $field_type 1
    fun $field 1
    var #p
      type-con $ptr 0
    not
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $dot 2
    var #p
      type-con $ptr 0
    fun $first_union_field 1
    fun $field_type 1
    fun $field 1
    var #p
      type-con $ptr 0
    fun $untyped_owner 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $all_first_option_typed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2427:34
      attribute uniqueId 1
        string-attr 13473
      attribute bvZ3Native 1
        string-attr False
    =
    fun $all_first_option_typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    fun $first_option_typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    forall 2 1 3
      var q
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $extent_hint 2
        fun $ptr 2
        fun $as_field_with_type 2
        fun $field 1
        var q
          type-con $ptr 0
        fun $as_union_type 1
        var t
          type-con $ctype 0
        fun $base 1
        var q
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2430:11
      attribute uniqueId 1
        string-attr 13472
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $first_option_typed 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $active_option 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2438:25
      attribute uniqueId 1
        string-attr 13474
      attribute bvZ3Native 1
        string-attr False
    =
    fun $active_option 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $int_to_field 1
    select 2
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $f_active_option 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 2
        fun $is_union_field 1
        var f
          type-con $field 0
        fun $owner 2
        var S
          type-con $state 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.2444:15
      attribute uniqueId 1
        string-attr 13476
      attribute bvZ3Native 1
        string-attr False
    and 4
    fun $good_state 1
    var S
      type-con $state 0
    fun $is_union_field 1
    var f
      type-con $field 0
    implies
    not
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $untyped_owner 0
    =
    fun $active_option 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    implies
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $untyped_owner 0
    forall 1 1 3
      var q
        type-con $ptr 0
      pat 1
        fun $extent_hint 2
        var q
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2450:13
      attribute uniqueId 1
        string-attr 13475
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $field_type 1
    fun $field 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var q
      type-con $ptr 0
    not
    and 4
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    fun $is_proper 1
    var q
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    select 2
    fun $roots 1
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $me 0
    not
    =
    fun $addr0 1
    var q
      type-con $ptr 0
    int-num 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 3
        fun $is_union_field 1
        var f
          type-con $field 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        fun $active_option 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2452:15
      attribute uniqueId 1
        string-attr 13477
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $good_state 1
    var S
      type-con $state 0
    fun $is_union_field 1
    var f
      type-con $field 0
    or 2
    =
    var f
      type-con $field 0
    fun $active_option 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $untyped_owner 0
axiom 0
    forall 4 1 3
      var A
        type-con $state 0
      var a
        type-con $ptr 0
      var B
        type-con $state 0
      var b
        type-con $ptr 0
      pat 1
        fun $strong_struct_eq 4
        var A
          type-con $state 0
        var a
          type-con $ptr 0
        var B
          type-con $state 0
        var b
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2462:28
      attribute uniqueId 1
        string-attr 13479
      attribute bvZ3Native 1
        string-attr False
    =
    fun $strong_struct_eq 4
    var A
      type-con $state 0
    var a
      type-con $ptr 0
    var B
      type-con $state 0
    var b
      type-con $ptr 0
    and 2
    fun $strong_shallow_struct_eq 4
    var A
      type-con $state 0
    var a
      type-con $ptr 0
    var B
      type-con $state 0
    var b
      type-con $ptr 0
    forall 1 1 3
      var f
        type-con $field 0
      pat 1
        fun $dot 2
        var a
          type-con $ptr 0
        fun $as_composite_field 1
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.2465:11
      attribute uniqueId 1
        string-attr 13478
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    fun $composite_extent 3
    var A
      type-con $state 0
    var a
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var a
      type-con $ptr 0
    fun $dot 2
    var a
      type-con $ptr 0
    var f
      type-con $field 0
    fun $strong_struct_eq 4
    var A
      type-con $state 0
    fun $dot 2
    var a
      type-con $ptr 0
    var f
      type-con $field 0
    var B
      type-con $state 0
    fun $dot 2
    var b
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 4 1 3
      var A
        type-con $state 0
      var a
        type-con $ptr 0
      var B
        type-con $state 0
      var b
        type-con $ptr 0
      pat 1
        fun $strong_shallow_struct_eq 4
        var A
          type-con $state 0
        var a
          type-con $ptr 0
        var B
          type-con $state 0
        var b
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2470:36
      attribute uniqueId 1
        string-attr 13481
      attribute bvZ3Native 1
        string-attr False
    =
    fun $strong_shallow_struct_eq 4
    var A
      type-con $state 0
    var a
      type-con $ptr 0
    var B
      type-con $state 0
    var b
      type-con $ptr 0
    forall 1 0 3
      var f
        type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.2472:11
      attribute uniqueId 1
        string-attr 13480
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    select 2
    fun $heap 1
    var A
      type-con $state 0
    var f
      type-con $field 0
    var a
      type-con $ptr 0
    select 2
    select 2
    fun $heap 1
    var B
      type-con $state 0
    var f
      type-con $field 0
    var b
      type-con $ptr 0
axiom 0
    fun $good_state 1
    fun $vs_state 1
    fun $struct_zero 0
axiom 0
    forall 1 0 3
      var s
        type-con $struct 0
      attribute qid 1
        string-attr Vcc3Prel.2499:15
      attribute uniqueId 1
        string-attr 13483
      attribute bvZ3Native 1
        string-attr False
    fun $good_state 1
    fun $vs_state 1
    var s
      type-con $struct 0
axiom 0
    forall 3 1 3
      var a
        type-con $struct 0
      var b
        type-con $struct 0
      var t
        type-con $ctype 0
      pat 1
        fun $vs_deep_eq 3
        var a
          type-con $struct 0
        var b
          type-con $struct 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.2501:22
      attribute uniqueId 1
        string-attr 13484
      attribute bvZ3Native 1
        string-attr False
    =
    fun $vs_deep_eq 3
    var a
      type-con $struct 0
    var b
      type-con $struct 0
    var t
      type-con $ctype 0
    fun $strong_struct_eq 4
    fun $vs_state 1
    var a
      type-con $struct 0
    fun $phys_ptr_cast 2
    fun $vs_base_ref 1
    var a
      type-con $struct 0
    var t
      type-con $ctype 0
    fun $vs_state 1
    var b
      type-con $struct 0
    fun $phys_ptr_cast 2
    fun $vs_base_ref 1
    var b
      type-con $struct 0
    var t
      type-con $ctype 0
axiom 0
    forall 3 1 3
      var a
        type-con $struct 0
      var b
        type-con $struct 0
      var t
        type-con $ctype 0
      pat 1
        fun $vs_shallow_eq 3
        var a
          type-con $struct 0
        var b
          type-con $struct 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.2506:25
      attribute uniqueId 1
        string-attr 13485
      attribute bvZ3Native 1
        string-attr False
    =
    fun $vs_shallow_eq 3
    var a
      type-con $struct 0
    var b
      type-con $struct 0
    var t
      type-con $ctype 0
    fun $strong_shallow_struct_eq 4
    fun $vs_state 1
    var a
      type-con $struct 0
    fun $phys_ptr_cast 2
    fun $vs_base_ref 1
    var a
      type-con $struct 0
    var t
      type-con $ctype 0
    fun $vs_state 1
    var b
      type-con $struct 0
    fun $phys_ptr_cast 2
    fun $vs_base_ref 1
    var b
      type-con $struct 0
    var t
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $vs_ctor 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2512:15
      attribute uniqueId 1
        string-attr 13486
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    =
    fun $phys_ptr_cast 2
    fun $vs_base_ref 1
    fun $vs_ctor 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    =
    fun $vs_state 1
    fun $vs_ctor 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var S
      type-con $state 0
axiom 0
    forall 2 1 3
      var f
        type-con $field 0
      var t
        type-con $ctype 0
      pat 1
        select 2
        select 2
        fun $heap 1
        fun $vs_state 1
        fun $struct_zero 0
        var f
          type-con $field 0
        fun $phys_ptr_cast 2
        fun $vs_base_ref 1
        fun $struct_zero 0
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.2516:15
      attribute uniqueId 1
        string-attr 13487
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    select 2
    fun $heap 1
    fun $vs_state 1
    fun $struct_zero 0
    var f
      type-con $field 0
    fun $phys_ptr_cast 2
    fun $vs_base_ref 1
    fun $struct_zero 0
    var t
      type-con $ctype 0
    int-num 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var v
        int
      pat 1
        fun $update_int 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var v
          int
      attribute qid 1
        string-attr Vcc3Prel.2523:15
      attribute uniqueId 1
        string-attr 13488
      attribute bvZ3Native 1
        string-attr False
    and 7
    =
    fun $f_timestamp 1
    var S
      type-con $state 0
    fun $f_timestamp 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    =
    fun $f_closed 1
    var S
      type-con $state 0
    fun $f_closed 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    =
    fun $f_owner 1
    var S
      type-con $state 0
    fun $f_owner 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    =
    fun $roots 1
    var S
      type-con $state 0
    fun $roots 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    forall 1 1 3
      var pp
        type-con $ptr 0
      pat 1
        fun $wrapped 3
        fun $update_int 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var v
          int
        var pp
          type-con $ptr 0
        fun $field_type 1
        fun $field 1
        var pp
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1257:13
      attribute uniqueId 1
        string-attr 13342
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $wrapped 3
    var S
      type-con $state 0
    var pp
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var pp
      type-con $ptr 0
    fun $wrapped 3
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    var pp
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var pp
      type-con $ptr 0
    forall 1 1 3
      var pp
        type-con $ptr 0
      pat 1
        fun $mutable 2
        fun $update_int 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var v
          int
        var pp
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1259:13
      attribute uniqueId 1
        string-attr 13343
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $mutable 2
    var S
      type-con $state 0
    var pp
      type-con $ptr 0
    fun $mutable 2
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    var pp
      type-con $ptr 0
    =
    fun $heap 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    store 3
    fun $heap 1
    var S
      type-con $state 0
    fun $field 1
    var p
      type-con $ptr 0
    store 3
    select 2
    fun $heap 1
    var S
      type-con $state 0
    fun $field 1
    var p
      type-con $ptr 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    var v
      int
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $program_entry_point 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr Vcc3Prel.2543:15
      attribute uniqueId 1
        string-attr 13490
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $program_entry_point 1
    var S
      type-con $state 0
    fun $program_entry_point_ch 1
    var S
      type-con $state 0
axiom 0
    forall 3 1 3
      var parent
        type-con $ctype 0
      var tag
        type-con $dt_tag 0
      var arity
        int
      pat 1
        fun $def_datatype_option 3
        var parent
          type-con $ctype 0
        var tag
          type-con $dt_tag 0
        var arity
          int
      attribute qid 1
        string-attr Vcc3Prel.2573:31
      attribute uniqueId 1
        string-attr 13493
      attribute bvZ3Native 1
        string-attr False
    =
    fun $def_datatype_option 3
    var parent
      type-con $ctype 0
    var tag
      type-con $dt_tag 0
    var arity
      int
    fun $has_arity 2
    var tag
      type-con $dt_tag 0
    var arity
      int
axiom 0
    =
    fun $set_empty 0
    fun lambda@690 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $set_singleton 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2593:25
      attribute uniqueId 1
        string-attr 13494
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_singleton 1
    var p
      type-con $ptr 0
    fun lambda@691 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $non_null_set_singleton 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2596:34
      attribute uniqueId 1
        string-attr 13495
      attribute bvZ3Native 1
        string-attr False
    =
    fun $non_null_set_singleton 1
    var p
      type-con $ptr 0
    fun lambda@692 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var A
        array 2
          type-con $ptr 0
          bool
      var B
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_union 2
        var A
          array 2
            type-con $ptr 0
            bool
        var B
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2599:21
      attribute uniqueId 1
        string-attr 13496
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_union 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
    fun lambda@693 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 2 1 3
      var A
        array 2
          type-con $ptr 0
          bool
      var B
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_difference 2
        var A
          array 2
            type-con $ptr 0
            bool
        var B
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2602:26
      attribute uniqueId 1
        string-attr 13497
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_difference 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
    fun lambda@694 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 2 1 3
      var A
        array 2
          type-con $ptr 0
          bool
      var B
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_intersection 2
        var A
          array 2
            type-con $ptr 0
            bool
        var B
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2605:28
      attribute uniqueId 1
        string-attr 13498
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_intersection 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
    fun lambda@695 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 2 1 3
      var A
        array 2
          type-con $ptr 0
          bool
      var B
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_subset 2
        var A
          array 2
            type-con $ptr 0
            bool
        var B
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2609:22
      attribute uniqueId 1
        string-attr 13500
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_subset 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
    forall 1 2 3
      var o
        type-con $ptr 0
      pat 1
        select 2
        var A
          array 2
            type-con $ptr 0
            bool
        var o
          type-con $ptr 0
      pat 1
        select 2
        var B
          array 2
            type-con $ptr 0
            bool
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2610:13
      attribute uniqueId 1
        string-attr 13499
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    var A
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var B
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var #a
        array 2
          type-con $ptr 0
          bool
      var #b
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_eq 2
        var #a
          array 2
            type-con $ptr 0
            bool
        var #b
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2620:15
      attribute uniqueId 1
        string-attr 13502
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 1 1 3
      var #o
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var #o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2621:11
      attribute uniqueId 1
        string-attr 13501
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    var #a
      array 2
        type-con $ptr 0
        bool
    var #o
      type-con $ptr 0
    select 2
    var #b
      array 2
        type-con $ptr 0
        bool
    var #o
      type-con $ptr 0
    fun $set_eq 2
    var #a
      array 2
        type-con $ptr 0
        bool
    var #b
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 2 1 3
      var #a
        array 2
          type-con $ptr 0
          bool
      var #b
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_eq 2
        var #a
          array 2
            type-con $ptr 0
            bool
        var #b
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2622:15
      attribute uniqueId 1
        string-attr 13503
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $set_eq 2
    var #a
      array 2
        type-con $ptr 0
        bool
    var #b
      array 2
        type-con $ptr 0
        bool
    =
    var #a
      array 2
        type-con $ptr 0
        bool
    var #b
      array 2
        type-con $ptr 0
        bool
axiom 0
    =
    fun $set_cardinality 1
    fun $set_empty 0
    int-num 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $set_singleton 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2628:15
      attribute uniqueId 1
        string-attr 13504
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_cardinality 1
    fun $set_singleton 1
    var p
      type-con $ptr 0
    int-num 1
axiom 0
    forall 1 1 3
      var #o
        type-con $ptr 0
      pat 1
        select 2
        fun $set_universe 0
        var #o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2631:15
      attribute uniqueId 1
        string-attr 13505
      attribute bvZ3Native 1
        string-attr False
    select 2
    fun $set_universe 0
    var #o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var s1
        array 2
          type-con $ptr 0
          bool
      var s2
        array 2
          type-con $ptr 0
          bool
      pat 2
        fun $set_disjoint 2
        var s1
          array 2
            type-con $ptr 0
            bool
        var s2
          array 2
            type-con $ptr 0
            bool
        select 2
        var s1
          array 2
            type-con $ptr 0
            bool
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2636:15
      attribute uniqueId 1
        string-attr 13506
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $set_disjoint 2
    var s1
      array 2
        type-con $ptr 0
        bool
    var s2
      array 2
        type-con $ptr 0
        bool
    select 2
    var s1
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    =
    fun $id_set_disjoint 3
    var p
      type-con $ptr 0
    var s1
      array 2
        type-con $ptr 0
        bool
    var s2
      array 2
        type-con $ptr 0
        bool
    int-num 1
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var s1
        array 2
          type-con $ptr 0
          bool
      var s2
        array 2
          type-con $ptr 0
          bool
      pat 2
        fun $set_disjoint 2
        var s1
          array 2
            type-con $ptr 0
            bool
        var s2
          array 2
            type-con $ptr 0
            bool
        select 2
        var s2
          array 2
            type-con $ptr 0
            bool
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2639:15
      attribute uniqueId 1
        string-attr 13507
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $set_disjoint 2
    var s1
      array 2
        type-con $ptr 0
        bool
    var s2
      array 2
        type-con $ptr 0
        bool
    select 2
    var s2
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    =
    fun $id_set_disjoint 3
    var p
      type-con $ptr 0
    var s1
      array 2
        type-con $ptr 0
        bool
    var s2
      array 2
        type-con $ptr 0
        bool
    int-num 2
axiom 0
    forall 2 1 3
      var s1
        array 2
          type-con $ptr 0
          bool
      var s2
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_disjoint 2
        var s1
          array 2
            type-con $ptr 0
            bool
        var s2
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2643:15
      attribute uniqueId 1
        string-attr 13509
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2644:11
      attribute uniqueId 1
        string-attr 13508
      attribute bvZ3Native 1
        string-attr False
    and 2
    implies
    select 2
    var s1
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    not
    select 2
    var s2
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    implies
    select 2
    var s2
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    not
    select 2
    var s1
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    fun $set_disjoint 2
    var s1
      array 2
        type-con $ptr 0
        bool
    var s2
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var s
        array 2
          type-con $ptr 0
          bool
      pat 1
        select 2
        var s
          array 2
            type-con $ptr 0
            bool
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2649:15
      attribute uniqueId 1
        string-attr 13510
      attribute bvZ3Native 1
        string-attr False
    implies
    select 2
    var s
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    fun $set_in_pos 2
    var p
      type-con $ptr 0
    var s
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var s
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $set_in0 2
        var p
          type-con $ptr 0
        var s
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.2668:19
      attribute uniqueId 1
        string-attr 13511
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in0 2
    var p
      type-con $ptr 0
    var s
      array 2
        type-con $ptr 0
        bool
    select 2
    var s
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var no
        int
      var t
        type-con $ctype 0
      pat 1
        fun $get_fnptr 2
        var no
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.2676:21
      attribute uniqueId 1
        string-attr 13512
      attribute bvZ3Native 1
        string-attr False
    =
    fun $get_fnptr 2
    var no
      int
    var t
      type-con $ctype 0
    fun $ptr 2
    fun $f_root 1
    var t
      type-con $ctype 0
    fun $get_fnptr_ref 1
    var no
      int
axiom 0
    forall 1 0 3
      var no
        int
      attribute qid 1
        string-attr Vcc3Prel.2681:15
      attribute uniqueId 1
        string-attr 13513
      attribute bvZ3Native 1
        string-attr False
    =
    fun $get_fnptr_inv 1
    fun $get_fnptr_ref 1
    var no
      int
    var no
      int
axiom 0
    forall 2 1 3
      var no
        int
      var t
        type-con $ctype 0
      pat 1
        fun $get_fnptr 2
        var no
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr Vcc3Prel.2685:15
      attribute uniqueId 1
        string-attr 13514
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_fnptr_type 1
    var t
      type-con $ctype 0
    and 2
    fun $in_range_phys_ptr 1
    fun $get_fnptr 2
    var no
      int
    var t
      type-con $ctype 0
    fun $valid_fnptr 1
    fun $get_fnptr 2
    var no
      int
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var x
        bool
      pat 1
        fun $bool_id 1
        var x
          bool
      attribute qid 1
        string-attr Vcc3Prel.2704:19
      attribute uniqueId 1
        string-attr 13515
      attribute bvZ3Native 1
        string-attr False
    =
    fun $bool_id 1
    var x
      bool
    var x
      bool
axiom 0
    =
    fun $min.i1 0
    -
    int-num 0
    int-num 128
axiom 0
    =
    fun $max.i1 0
    int-num 127
axiom 0
    =
    fun $min.i2 0
    -
    int-num 0
    int-num 32768
axiom 0
    =
    fun $max.i2 0
    int-num 32767
axiom 0
    =
    fun $min.i4 0
    -
    int-num 0
    *
    int-num 65536
    int-num 32768
axiom 0
    =
    fun $max.i4 0
    -
    *
    int-num 65536
    int-num 32768
    int-num 1
axiom 0
    =
    fun $min.i8 0
    -
    int-num 0
    *
    *
    *
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 32768
axiom 0
    =
    fun $max.i8 0
    -
    *
    *
    *
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 32768
    int-num 1
axiom 0
    =
    fun $max.u1 0
    int-num 255
axiom 0
    =
    fun $max.u2 0
    int-num 65535
axiom 0
    =
    fun $max.u4 0
    -
    *
    int-num 65536
    int-num 65536
    int-num 1
axiom 0
    =
    fun $max.u8 0
    -
    *
    *
    *
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 1
axiom 0
    and 65
    =
    fun $_pow2 1
    int-num 0
    int-num 1
    =
    fun $_pow2 1
    int-num 1
    int-num 2
    =
    fun $_pow2 1
    int-num 2
    int-num 4
    =
    fun $_pow2 1
    int-num 3
    int-num 8
    =
    fun $_pow2 1
    int-num 4
    int-num 16
    =
    fun $_pow2 1
    int-num 5
    int-num 32
    =
    fun $_pow2 1
    int-num 6
    int-num 64
    =
    fun $_pow2 1
    int-num 7
    int-num 128
    =
    fun $_pow2 1
    int-num 8
    int-num 256
    =
    fun $_pow2 1
    int-num 9
    int-num 512
    =
    fun $_pow2 1
    int-num 10
    int-num 1024
    =
    fun $_pow2 1
    int-num 11
    int-num 2048
    =
    fun $_pow2 1
    int-num 12
    int-num 4096
    =
    fun $_pow2 1
    int-num 13
    int-num 8192
    =
    fun $_pow2 1
    int-num 14
    int-num 16384
    =
    fun $_pow2 1
    int-num 15
    int-num 32768
    =
    fun $_pow2 1
    int-num 16
    int-num 65536
    =
    fun $_pow2 1
    int-num 17
    int-num 131072
    =
    fun $_pow2 1
    int-num 18
    int-num 262144
    =
    fun $_pow2 1
    int-num 19
    int-num 524288
    =
    fun $_pow2 1
    int-num 20
    int-num 1048576
    =
    fun $_pow2 1
    int-num 21
    int-num 2097152
    =
    fun $_pow2 1
    int-num 22
    int-num 4194304
    =
    fun $_pow2 1
    int-num 23
    int-num 8388608
    =
    fun $_pow2 1
    int-num 24
    int-num 16777216
    =
    fun $_pow2 1
    int-num 25
    int-num 33554432
    =
    fun $_pow2 1
    int-num 26
    int-num 67108864
    =
    fun $_pow2 1
    int-num 27
    int-num 134217728
    =
    fun $_pow2 1
    int-num 28
    int-num 268435456
    =
    fun $_pow2 1
    int-num 29
    int-num 536870912
    =
    fun $_pow2 1
    int-num 30
    int-num 1073741824
    =
    fun $_pow2 1
    int-num 31
    int-num 2147483648
    =
    fun $_pow2 1
    int-num 32
    int-num 4294967296
    =
    fun $_pow2 1
    int-num 33
    int-num 8589934592
    =
    fun $_pow2 1
    int-num 34
    int-num 17179869184
    =
    fun $_pow2 1
    int-num 35
    int-num 34359738368
    =
    fun $_pow2 1
    int-num 36
    int-num 68719476736
    =
    fun $_pow2 1
    int-num 37
    int-num 137438953472
    =
    fun $_pow2 1
    int-num 38
    int-num 274877906944
    =
    fun $_pow2 1
    int-num 39
    int-num 549755813888
    =
    fun $_pow2 1
    int-num 40
    int-num 1099511627776
    =
    fun $_pow2 1
    int-num 41
    int-num 2199023255552
    =
    fun $_pow2 1
    int-num 42
    int-num 4398046511104
    =
    fun $_pow2 1
    int-num 43
    int-num 8796093022208
    =
    fun $_pow2 1
    int-num 44
    int-num 17592186044416
    =
    fun $_pow2 1
    int-num 45
    int-num 35184372088832
    =
    fun $_pow2 1
    int-num 46
    int-num 70368744177664
    =
    fun $_pow2 1
    int-num 47
    int-num 140737488355328
    =
    fun $_pow2 1
    int-num 48
    int-num 281474976710656
    =
    fun $_pow2 1
    int-num 49
    int-num 562949953421312
    =
    fun $_pow2 1
    int-num 50
    int-num 1125899906842624
    =
    fun $_pow2 1
    int-num 51
    int-num 2251799813685248
    =
    fun $_pow2 1
    int-num 52
    int-num 4503599627370496
    =
    fun $_pow2 1
    int-num 53
    int-num 9007199254740992
    =
    fun $_pow2 1
    int-num 54
    int-num 18014398509481984
    =
    fun $_pow2 1
    int-num 55
    int-num 36028797018963968
    =
    fun $_pow2 1
    int-num 56
    int-num 72057594037927936
    =
    fun $_pow2 1
    int-num 57
    int-num 144115188075855872
    =
    fun $_pow2 1
    int-num 58
    int-num 288230376151711744
    =
    fun $_pow2 1
    int-num 59
    int-num 576460752303423488
    =
    fun $_pow2 1
    int-num 60
    int-num 1152921504606846976
    =
    fun $_pow2 1
    int-num 61
    int-num 2305843009213693952
    =
    fun $_pow2 1
    int-num 62
    int-num 4611686018427387904
    =
    fun $_pow2 1
    int-num 63
    int-num 9223372036854775808
    =
    fun $_pow2 1
    int-num 64
    int-num 18446744073709551616
axiom 0
    =
    fun $unchecked 2
    fun ^^u4 0
    -
    int-num 0
    int-num 1
    fun $max.u4 0
axiom 0
    =
    fun $unchecked 2
    fun ^^u4 0
    +
    fun $max.u4 0
    int-num 1
    int-num 0
axiom 0
    =
    fun $unchecked 2
    fun ^^u8 0
    -
    int-num 0
    int-num 1
    fun $max.u8 0
axiom 0
    =
    fun $unchecked 2
    fun ^^u8 0
    +
    fun $max.u8 0
    int-num 1
    int-num 0
axiom 0
    forall 2 1 3
      var bits
        int
      var v
        int
      pat 1
        fun $in_range_ubits 2
        var bits
          int
        var v
          int
      attribute qid 1
        string-attr Vcc3Prel.2776:26
      attribute uniqueId 1
        string-attr 13516
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_ubits 2
    var bits
      int
    var v
      int
    and 2
    <=
    int-num 0
    var v
      int
    <=
    var v
      int
    -
    fun $_pow2 1
    var bits
      int
    int-num 1
axiom 0
    forall 2 1 3
      var bits
        int
      var v
        int
      pat 1
        fun $unchecked_sbits 2
        var bits
          int
        var v
          int
      attribute qid 1
        string-attr Vcc3Prel.2780:15
      attribute uniqueId 1
        string-attr 13517
      attribute bvZ3Native 1
        string-attr False
    and 2
    fun $in_range_sbits 2
    var bits
      int
    fun $unchecked_sbits 2
    var bits
      int
    var v
      int
    implies
    fun $in_range_sbits 2
    var bits
      int
    var v
      int
    =
    fun $unchecked_sbits 2
    var bits
      int
    var v
      int
    var v
      int
axiom 0
    forall 2 1 3
      var bits
        int
      var v
        int
      pat 1
        fun $in_range_sbits 2
        var bits
          int
        var v
          int
      attribute qid 1
        string-attr Vcc3Prel.2784:26
      attribute uniqueId 1
        string-attr 13518
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_sbits 2
    var bits
      int
    var v
      int
    and 2
    <=
    -
    int-num 0
    fun $_pow2 1
    -
    var bits
      int
    int-num 1
    var v
      int
    <=
    var v
      int
    -
    fun $_pow2 1
    -
    var bits
      int
    int-num 1
    int-num 1
axiom 0
    forall 2 1 3
      var bits
        int
      var v
        int
      pat 1
        fun $unchecked_ubits 2
        var bits
          int
        var v
          int
      attribute qid 1
        string-attr Vcc3Prel.2788:15
      attribute uniqueId 1
        string-attr 13519
      attribute bvZ3Native 1
        string-attr False
    and 2
    fun $in_range_ubits 2
    var bits
      int
    fun $unchecked_ubits 2
    var bits
      int
    var v
      int
    implies
    fun $in_range_ubits 2
    var bits
      int
    var v
      int
    =
    fun $unchecked_ubits 2
    var bits
      int
    var v
      int
    var v
      int
axiom 0
    forall 1 1 3
      var x
        int
      pat 1
        fun $abs 1
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.2797:15
      attribute uniqueId 1
        string-attr 13520
      attribute bvZ3Native 1
        string-attr False
    =
    fun $abs 1
    var x
      int
    ite
    <
    var x
      int
    int-num 0
    -
    int-num 0
    var x
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_add 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2800:21
      attribute uniqueId 1
        string-attr 13521
      attribute bvZ3Native 1
        string-attr False
    =
    fun $unchk_add 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    +
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_sub 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2801:21
      attribute uniqueId 1
        string-attr 13522
      attribute bvZ3Native 1
        string-attr False
    =
    fun $unchk_sub 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    -
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_mul 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2802:21
      attribute uniqueId 1
        string-attr 13523
      attribute bvZ3Native 1
        string-attr False
    =
    fun $unchk_mul 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    *
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_div 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2803:21
      attribute uniqueId 1
        string-attr 13524
      attribute bvZ3Native 1
        string-attr False
    =
    fun $unchk_div 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    /
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_mod 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2804:21
      attribute uniqueId 1
        string-attr 13525
      attribute bvZ3Native 1
        string-attr False
    =
    fun $unchk_mod 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    %
    var x
      int
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        fun $unchk_add 3
        fun ^^u8 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2806:14
      attribute uniqueId 1
        string-attr 13526
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u8 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u8 0
    >
    +
    var x
      int
    var y
      int
    fun $max.u8 0
    =
    fun $unchk_add 3
    fun ^^u8 0
    var x
      int
    var y
      int
    -
    -
    +
    var x
      int
    var y
      int
    fun $max.u8 0
    int-num 1
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        fun $unchk_add 3
        fun ^^u4 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2810:14
      attribute uniqueId 1
        string-attr 13527
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u4 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u4 0
    >
    +
    var x
      int
    var y
      int
    fun $max.u8 0
    =
    fun $unchk_add 3
    fun ^^u4 0
    var x
      int
    var y
      int
    -
    -
    +
    var x
      int
    var y
      int
    fun $max.u4 0
    int-num 1
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_shl 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2816:14
      attribute uniqueId 1
        string-attr 13528
      attribute bvZ3Native 1
        string-attr False
    implies
    >=
    var x
      int
    int-num 0
    =
    fun $_shl 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    *
    var x
      int
    fun $_pow2 1
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        fun $_shr 2
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2820:16
      attribute uniqueId 1
        string-attr 13529
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_shr 2
    var x
      int
    var y
      int
    /
    var x
      int
    fun $_pow2 1
    var y
      int
axiom 0
    forall 5 1 3
      var x
        int
      var from
        int
      var to
        int
      var xs
        int
      var val
        int
      pat 1
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2827:15
      attribute uniqueId 1
        string-attr 13530
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <
    var val
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    and 2
    <=
    int-num 0
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    <
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    fun $_pow2 1
    var xs
      int
axiom 0
    forall 3 1 3
      var from
        int
      var to
        int
      var xs
        int
      pat 1
        fun $bv_update 5
        int-num 0
        var xs
          int
        var from
          int
        var to
          int
        int-num 0
      attribute qid 1
        string-attr Vcc3Prel.2833:15
      attribute uniqueId 1
        string-attr 13531
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    =
    fun $bv_update 5
    int-num 0
    var xs
      int
    var from
      int
    var to
      int
    int-num 0
    int-num 0
axiom 0
    forall 5 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2837:15
      attribute uniqueId 1
        string-attr 13532
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 2
    <=
    -
    int-num 0
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    var val
      int
    <
    var val
      int
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    =
    fun $bv_extract_signed 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
axiom 0
    forall 5 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2843:15
      attribute uniqueId 1
        string-attr 13533
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <
    var val
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    =
    fun $bv_extract_unsigned 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2849:15
      attribute uniqueId 1
        string-attr 13534
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    and 2
    <=
    -
    int-num 0
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    fun $bv_extract_signed 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    <=
    fun $bv_extract_signed 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    -
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    int-num 1
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2854:15
      attribute uniqueId 1
        string-attr 13535
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    and 2
    <=
    int-num 0
    fun $bv_extract_unsigned 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    <=
    fun $bv_extract_unsigned 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    -
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    int-num 1
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var x
        int
      var y
        int
      pat 2
        fun $bv_extract_unsigned 4
        var x
          int
        int-num 32
        var from
          int
        var to
          int
        fun $_and 3
        fun ^^u4 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2859:15
      attribute uniqueId 1
        string-attr 13536
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    int-num 32
    =
    fun $bv_extract_unsigned 4
    var x
      int
    int-num 32
    var from
      int
    var to
      int
    fun $_shr 2
    fun $_and 3
    fun ^^u4 0
    var x
      int
    fun $_shl 3
    fun ^^u4 0
    -
    fun $_shl 3
    fun ^^u4 0
    int-num 1
    -
    var to
      int
    var from
      int
    int-num 1
    var from
      int
    var from
      int
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var x
        int
      var y
        int
      pat 2
        fun $bv_extract_unsigned 4
        var x
          int
        int-num 64
        var from
          int
        var to
          int
        fun $_and 3
        fun ^^u8 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2865:15
      attribute uniqueId 1
        string-attr 13537
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    int-num 64
    =
    fun $bv_extract_unsigned 4
    var x
      int
    int-num 64
    var from
      int
    var to
      int
    fun $_shr 2
    fun $_and 3
    fun ^^u8 0
    var x
      int
    fun $_shl 3
    fun ^^u4 0
    -
    fun $_shl 3
    fun ^^u8 0
    int-num 1
    -
    var to
      int
    var from
      int
    int-num 1
    var from
      int
    var from
      int
axiom 0
    forall 7 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      var from2
        int
      var to2
        int
      pat 1
        fun $bv_extract_signed 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from2
          int
        var to2
          int
      attribute qid 1
        string-attr Vcc3Prel.2871:15
      attribute uniqueId 1
        string-attr 13538
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 3
    <=
    int-num 0
    var from2
      int
    <
    var from2
      int
    var to2
      int
    <=
    var to2
      int
    var xs
      int
    implies
    or 2
    <=
    var to2
      int
    var from
      int
    <=
    var to
      int
    var from2
      int
    =
    fun $bv_extract_signed 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from2
      int
    var to2
      int
    fun $bv_extract_signed 4
    var x
      int
    var xs
      int
    var from2
      int
    var to2
      int
axiom 0
    forall 7 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      var from2
        int
      var to2
        int
      pat 1
        fun $bv_extract_unsigned 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from2
          int
        var to2
          int
      attribute qid 1
        string-attr Vcc3Prel.2878:15
      attribute uniqueId 1
        string-attr 13539
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 3
    <=
    int-num 0
    var from2
      int
    <
    var from2
      int
    var to2
      int
    <=
    var to2
      int
    var xs
      int
    implies
    or 2
    <=
    var to2
      int
    var from
      int
    <=
    var to
      int
    var from2
      int
    =
    fun $bv_extract_unsigned 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from2
      int
    var to2
      int
    fun $bv_extract_unsigned 4
    var x
      int
    var xs
      int
    var from2
      int
    var to2
      int
axiom 0
    forall 3 1 3
      var from
        int
      var to
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        int-num 0
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2885:15
      attribute uniqueId 1
        string-attr 13540
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    =
    fun $bv_extract_signed 4
    int-num 0
    var xs
      int
    var from
      int
    var to
      int
    int-num 0
axiom 0
    forall 3 1 3
      var from
        int
      var to
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        int-num 0
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2890:15
      attribute uniqueId 1
        string-attr 13541
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    =
    fun $bv_extract_unsigned 4
    int-num 0
    var xs
      int
    var from
      int
    var to
      int
    int-num 0
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var val
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2895:15
      attribute uniqueId 1
        string-attr 13542
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    <=
    int-num 0
    var val
      int
    =
    fun $bv_extract_unsigned 4
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var val
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2900:15
      attribute uniqueId 1
        string-attr 13543
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    <=
    int-num 0
    var val
      int
    <
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    =
    fun $bv_extract_signed 4
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var val
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr Vcc3Prel.2905:15
      attribute uniqueId 1
        string-attr 13544
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    <=
    int-num 0
    var val
      int
    >=
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    =
    fun $bv_extract_signed 4
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    -
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i1 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2933:15
      attribute uniqueId 1
        string-attr 13545
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i1 0
    var val
      int
    and 2
    <=
    fun $min.i1 0
    var val
      int
    <=
    var val
      int
    fun $max.i1 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i2 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2934:15
      attribute uniqueId 1
        string-attr 13546
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i2 0
    var val
      int
    and 2
    <=
    fun $min.i2 0
    var val
      int
    <=
    var val
      int
    fun $max.i2 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i4 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2935:15
      attribute uniqueId 1
        string-attr 13547
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i4 0
    var val
      int
    and 2
    <=
    fun $min.i4 0
    var val
      int
    <=
    var val
      int
    fun $max.i4 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i8 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2936:15
      attribute uniqueId 1
        string-attr 13548
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i8 0
    var val
      int
    and 2
    <=
    fun $min.i8 0
    var val
      int
    <=
    var val
      int
    fun $max.i8 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u1 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2937:15
      attribute uniqueId 1
        string-attr 13549
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u1 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u1 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u2 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2938:15
      attribute uniqueId 1
        string-attr 13550
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u2 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u2 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u4 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2939:15
      attribute uniqueId 1
        string-attr 13551
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u4 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u4 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u8 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2940:15
      attribute uniqueId 1
        string-attr 13552
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u8 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u8 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^nat 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2941:15
      attribute uniqueId 1
        string-attr 13553
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^nat 0
    var val
      int
    >=
    var val
      int
    int-num 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^mathint 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2942:15
      attribute uniqueId 1
        string-attr 13554
      attribute bvZ3Native 1
        string-attr False
    fun $in_range_t 2
    fun ^^mathint 0
    var val
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var val
        int
      pat 1
        fun $unchecked 2
        var t
          type-con $ctype 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2944:15
      attribute uniqueId 1
        string-attr 13555
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var val
      int
    =
    fun $unchecked 2
    var t
      type-con $ctype 0
    var val
      int
    var val
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var val
        int
      pat 1
        fun $unchecked 2
        var t
          type-con $ctype 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2945:15
      attribute uniqueId 1
        string-attr 13556
      attribute bvZ3Native 1
        string-attr False
    fun $in_range_t 2
    var t
      type-con $ctype 0
    fun $unchecked 2
    var t
      type-con $ctype 0
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u1 0
        fun $unchecked 2
        fun ^^i1 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2947:15
      attribute uniqueId 1
        string-attr 13557
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u1 0
    =
    fun $unchecked 2
    fun ^^u1 0
    fun $unchecked 2
    fun ^^i1 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u2 0
        fun $unchecked 2
        fun ^^i2 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2948:15
      attribute uniqueId 1
        string-attr 13558
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u2 0
    =
    fun $unchecked 2
    fun ^^u2 0
    fun $unchecked 2
    fun ^^i2 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u4 0
        fun $unchecked 2
        fun ^^i4 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2949:15
      attribute uniqueId 1
        string-attr 13559
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u4 0
    =
    fun $unchecked 2
    fun ^^u4 0
    fun $unchecked 2
    fun ^^i4 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u8 0
        fun $unchecked 2
        fun ^^i8 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2950:15
      attribute uniqueId 1
        string-attr 13560
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u8 0
    =
    fun $unchecked 2
    fun ^^u8 0
    fun $unchecked 2
    fun ^^i8 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i1 0
        fun $unchecked 2
        fun ^^u1 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2951:15
      attribute uniqueId 1
        string-attr 13561
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i1 0
    var val
      int
    <=
    var val
      int
    fun $max.i1 0
    =
    fun $unchecked 2
    fun ^^i1 0
    fun $unchecked 2
    fun ^^u1 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i2 0
        fun $unchecked 2
        fun ^^u2 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2952:15
      attribute uniqueId 1
        string-attr 13562
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i2 0
    var val
      int
    <=
    var val
      int
    fun $max.i2 0
    =
    fun $unchecked 2
    fun ^^i2 0
    fun $unchecked 2
    fun ^^u2 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i4 0
        fun $unchecked 2
        fun ^^u4 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2953:15
      attribute uniqueId 1
        string-attr 13563
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i4 0
    var val
      int
    <=
    var val
      int
    fun $max.i4 0
    =
    fun $unchecked 2
    fun ^^i4 0
    fun $unchecked 2
    fun ^^u4 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i8 0
        fun $unchecked 2
        fun ^^u8 0
        var val
          int
      attribute qid 1
        string-attr Vcc3Prel.2954:15
      attribute uniqueId 1
        string-attr 13564
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i8 0
    var val
      int
    <=
    var val
      int
    fun $max.i8 0
    =
    fun $unchecked 2
    fun ^^i8 0
    fun $unchecked 2
    fun ^^u8 0
    var val
      int
    var val
      int
axiom 0
    forall 4 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      var z
        int
      pat 2
        %
        var x
          int
        fun $_pow2 1
        var y
          int
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var z
          int
      attribute qid 1
        string-attr Vcc3Prel.2959:15
      attribute uniqueId 1
        string-attr 13565
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    -
    fun $_pow2 1
    var y
      int
    int-num 1
    >=
    var x
      int
    int-num 0
    =
    %
    var x
      int
    fun $_pow2 1
    var y
      int
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    -
    fun $_pow2 1
    var y
      int
    int-num 1
axiom 0
    forall 2 1 3
      var i
        int
      var j
        int
      pat 1
        /
        var i
          int
        var j
          int
      attribute qid 1
        string-attr Vcc3Prel.2965:15
      attribute uniqueId 1
        string-attr 13566
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    int-num 0
    var j
      int
    <=
    /
    var i
      int
    var j
      int
    var i
      int
axiom 0
    forall 2 1 3
      var i
        int
      var j
        int
      pat 1
        /
        var i
          int
        var j
          int
      attribute qid 1
        string-attr Vcc3Prel.2967:15
      attribute uniqueId 1
        string-attr 13567
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    >
    var i
      int
    int-num 0
    >
    var j
      int
    int-num 0
    and 2
    <
    -
    var i
      int
    var j
      int
    *
    /
    var i
      int
    var j
      int
    var j
      int
    <=
    *
    /
    var i
      int
    var j
      int
    var j
      int
    var i
      int
axiom 0
    forall 1 1 3
      var i
        int
      pat 1
        /
        var i
          int
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.2968:15
      attribute uniqueId 1
        string-attr 13568
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    =
    var i
      int
    int-num 0
    =
    /
    var i
      int
    var i
      int
    int-num 1
axiom 0
    forall 1 1 3
      var i
        int
      pat 1
        /
        int-num 0
        var i
          int
      attribute qid 1
        string-attr Vcc3Prel.2969:15
      attribute uniqueId 1
        string-attr 13569
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    =
    var i
      int
    int-num 0
    =
    /
    int-num 0
    var i
      int
    int-num 0
axiom 0
    forall 2 2 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      pat 1
        /
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2972:15
      attribute uniqueId 1
        string-attr 13570
      attribute bvZ3Native 1
        string-attr False
    =
    %
    var x
      int
    var y
      int
    -
    var x
      int
    *
    /
    var x
      int
    var y
      int
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2973:15
      attribute uniqueId 1
        string-attr 13571
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var x
      int
    <
    int-num 0
    var y
      int
    and 2
    <=
    int-num 0
    %
    var x
      int
    var y
      int
    <
    %
    var x
      int
    var y
      int
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2974:15
      attribute uniqueId 1
        string-attr 13572
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var x
      int
    <
    var y
      int
    int-num 0
    and 2
    <=
    int-num 0
    %
    var x
      int
    var y
      int
    <
    %
    var x
      int
    var y
      int
    -
    int-num 0
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2975:15
      attribute uniqueId 1
        string-attr 13573
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    var x
      int
    int-num 0
    <
    int-num 0
    var y
      int
    and 2
    <
    -
    int-num 0
    var y
      int
    %
    var x
      int
    var y
      int
    <=
    %
    var x
      int
    var y
      int
    int-num 0
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2976:15
      attribute uniqueId 1
        string-attr 13574
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    var x
      int
    int-num 0
    <
    var y
      int
    int-num 0
    and 2
    <
    var y
      int
    %
    var x
      int
    var y
      int
    <=
    %
    var x
      int
    var y
      int
    int-num 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2985:15
      attribute uniqueId 1
        string-attr 13575
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2986:15
      attribute uniqueId 1
        string-attr 13576
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    and 2
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var x
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2987:15
      attribute uniqueId 1
        string-attr 13577
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    +
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2988:15
      attribute uniqueId 1
        string-attr 13578
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    and 2
    <=
    var x
      int
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    var y
      int
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
axiom 0
    forall 4 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      var z
        int
      pat 2
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
        fun $_pow2 1
        var z
          int
      attribute qid 1
        string-attr Vcc3Prel.2989:15
      attribute uniqueId 1
        string-attr 13579
      attribute bvZ3Native 1
        string-attr False
    implies
    and 8
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    <=
    int-num 0
    var z
      int
    <
    var z
      int
    int-num 64
    <
    var x
      int
    fun $_pow2 1
    var z
      int
    <
    var y
      int
    fun $_pow2 1
    var z
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    <
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_pow2 1
    var z
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2992:15
      attribute uniqueId 1
        string-attr 13580
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u1 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u1 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u1 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2993:15
      attribute uniqueId 1
        string-attr 13581
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u2 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u2 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u2 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2994:15
      attribute uniqueId 1
        string-attr 13582
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u4 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u4 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u4 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2995:15
      attribute uniqueId 1
        string-attr 13583
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u8 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u8 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u8 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2997:15
      attribute uniqueId 1
        string-attr 13584
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u1 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u1 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u1 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2998:15
      attribute uniqueId 1
        string-attr 13585
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u2 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u2 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u2 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.2999:15
      attribute uniqueId 1
        string-attr 13586
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u4 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u4 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u4 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3000:15
      attribute uniqueId 1
        string-attr 13587
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u8 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u8 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u8 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3002:15
      attribute uniqueId 1
        string-attr 13588
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u1 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u1 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u1 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3003:15
      attribute uniqueId 1
        string-attr 13589
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u2 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u2 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u2 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3004:15
      attribute uniqueId 1
        string-attr 13590
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u4 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u4 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u4 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3005:15
      attribute uniqueId 1
        string-attr 13591
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u8 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u8 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u8 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3007:15
      attribute uniqueId 1
        string-attr 13592
      attribute bvZ3Native 1
        string-attr False
    fun $in_range_t 2
    var t
      type-con $ctype 0
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3012:15
      attribute uniqueId 1
        string-attr 13593
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3013:15
      attribute uniqueId 1
        string-attr 13594
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        int-num 0
      attribute qid 1
        string-attr Vcc3Prel.3014:15
      attribute uniqueId 1
        string-attr 13595
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        int-num 0
      attribute qid 1
        string-attr Vcc3Prel.3015:15
      attribute uniqueId 1
        string-attr 13596
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3016:15
      attribute uniqueId 1
        string-attr 13597
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        int-num 0
      attribute qid 1
        string-attr Vcc3Prel.3017:15
      attribute uniqueId 1
        string-attr 13598
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        int-num 0
      attribute qid 1
        string-attr Vcc3Prel.3018:15
      attribute uniqueId 1
        string-attr 13599
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3019:15
      attribute uniqueId 1
        string-attr 13600
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3020:15
      attribute uniqueId 1
        string-attr 13601
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var y
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3021:15
      attribute uniqueId 1
        string-attr 13602
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var x
      int
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        int-num 0
      attribute qid 1
        string-attr Vcc3Prel.3022:15
      attribute uniqueId 1
        string-attr 13603
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3023:15
      attribute uniqueId 1
        string-attr 13604
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        int-num 0
      attribute qid 1
        string-attr Vcc3Prel.3024:15
      attribute uniqueId 1
        string-attr 13605
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_not 2
        var t
          type-con $ctype 0
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr Vcc3Prel.3025:15
      attribute uniqueId 1
        string-attr 13606
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_not 2
    var t
      type-con $ctype 0
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3026:15
      attribute uniqueId 1
        string-attr 13607
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_or 3
    var t
      type-con $ctype 0
    var y
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3027:15
      attribute uniqueId 1
        string-attr 13608
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_xor 3
    var t
      type-con $ctype 0
    var y
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3028:15
      attribute uniqueId 1
        string-attr 13609
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_and 3
    var t
      type-con $ctype 0
    var y
      int
    var x
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        fun $op_mul 2
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3032:18
      attribute uniqueId 1
        string-attr 13610
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_mul 2
    var x
      int
    var y
      int
    *
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $op_add 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3037:18
      attribute uniqueId 1
        string-attr 13611
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_add 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    +
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $op_sub 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3038:18
      attribute uniqueId 1
        string-attr 13612
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_sub 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    -
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $op_div 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3039:18
      attribute uniqueId 1
        string-attr 13613
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_div 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    /
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $op_lt 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3040:17
      attribute uniqueId 1
        string-attr 13614
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_lt 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $op_le 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3041:17
      attribute uniqueId 1
        string-attr 13615
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_le 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $op_gt 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3042:17
      attribute uniqueId 1
        string-attr 13616
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_gt 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    >
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $op_ge 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr Vcc3Prel.3043:17
      attribute uniqueId 1
        string-attr 13617
      attribute bvZ3Native 1
        string-attr False
    =
    fun $op_ge 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    >=
    var x
      int
    var y
      int
axiom 0
    forall 1 0 3
      var p
        type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3051:15
      attribute uniqueId 1
        string-attr 13618
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_ptr 1
    fun $ptr_to_int 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 1 0 3
      var p
        type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.3055:15
      attribute uniqueId 1
        string-attr 13619
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_field 1
    fun $field_to_int 1
    var p
      type-con $field 0
    var p
      type-con $field 0
axiom 0
    forall 1 0 3
      var p
        array 2
          type-con $ptr 0
          bool
      attribute qid 1
        string-attr Vcc3Prel.3059:15
      attribute uniqueId 1
        string-attr 13620
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_ptrset 1
    fun $ptrset_to_int 1
    var p
      array 2
        type-con $ptr 0
        bool
    var p
      array 2
        type-con $ptr 0
        bool
axiom 0
    implies
    >=
    fun $arch_ptr_size 0
    int-num 8
    forall 1 1 3
      var k
        int
      pat 1
        fun $u8_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3079:39
      attribute uniqueId 1
        string-attr 13621
      attribute bvZ3Native 1
        string-attr False
    =
    fun $addr 1
    fun $u8_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    forall 1 1 3
      var k
        int
      pat 1
        fun $u4_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3080:15
      attribute uniqueId 1
        string-attr 13622
      attribute bvZ3Native 1
        string-attr False
    =
    fun $addr 1
    fun $u4_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    forall 1 1 3
      var k
        int
      pat 1
        fun $u2_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3081:15
      attribute uniqueId 1
        string-attr 13623
      attribute bvZ3Native 1
        string-attr False
    =
    fun $addr 1
    fun $u2_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    forall 1 1 3
      var k
        int
      pat 1
        fun $u1_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3082:15
      attribute uniqueId 1
        string-attr 13624
      attribute bvZ3Native 1
        string-attr False
    =
    fun $addr 1
    fun $u1_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    implies
    >=
    fun $arch_ptr_size 0
    int-num 8
    forall 1 1 3
      var k
        int
      pat 1
        fun $i8_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3084:39
      attribute uniqueId 1
        string-attr 13625
      attribute bvZ3Native 1
        string-attr False
    implies
    >=
    var k
      int
    int-num 0
    =
    fun $addr 1
    fun $i8_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    forall 1 1 3
      var k
        int
      pat 1
        fun $i4_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3085:15
      attribute uniqueId 1
        string-attr 13626
      attribute bvZ3Native 1
        string-attr False
    implies
    >=
    var k
      int
    int-num 0
    =
    fun $addr 1
    fun $i4_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    forall 1 1 3
      var k
        int
      pat 1
        fun $i2_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3086:15
      attribute uniqueId 1
        string-attr 13627
      attribute bvZ3Native 1
        string-attr False
    implies
    >=
    var k
      int
    int-num 0
    =
    fun $addr 1
    fun $i2_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    forall 1 1 3
      var k
        int
      pat 1
        fun $i1_to_ptr 1
        var k
          int
      attribute qid 1
        string-attr Vcc3Prel.3087:15
      attribute uniqueId 1
        string-attr 13628
      attribute bvZ3Native 1
        string-attr False
    implies
    >=
    var k
      int
    int-num 0
    =
    fun $addr 1
    fun $i1_to_ptr 1
    var k
      int
    var k
      int
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_u8 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3089:15
      attribute uniqueId 1
        string-attr 13629
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.u8 0
    =
    fun $ptr_to_u8 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_i8 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3090:15
      attribute uniqueId 1
        string-attr 13630
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i8 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.i8 0
    =
    fun $ptr_to_i8 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_u4 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3091:15
      attribute uniqueId 1
        string-attr 13631
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.u4 0
    =
    fun $ptr_to_u4 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_i4 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3092:15
      attribute uniqueId 1
        string-attr 13632
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i4 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.i4 0
    =
    fun $ptr_to_i4 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_u2 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3093:15
      attribute uniqueId 1
        string-attr 13633
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.u2 0
    =
    fun $ptr_to_u2 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_i2 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3094:15
      attribute uniqueId 1
        string-attr 13634
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i2 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.i2 0
    =
    fun $ptr_to_i2 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_u1 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3095:15
      attribute uniqueId 1
        string-attr 13635
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.u1 0
    =
    fun $ptr_to_u1 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_i1 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3096:15
      attribute uniqueId 1
        string-attr 13636
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i1 0
    fun $addr 1
    var p
      type-con $ptr 0
    <=
    fun $addr 1
    var p
      type-con $ptr 0
    fun $max.i1 0
    =
    fun $ptr_to_i1 1
    var p
      type-con $ptr 0
    fun $addr 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var a
        int
      var b
        int
      pat 1
        fun $int_distance 2
        var a
          int
        var b
          int
      attribute qid 1
        string-attr Vcc3Prel.3185:24
      attribute uniqueId 1
        string-attr 13637
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_distance 2
    var a
      int
    var b
      int
    ite
    <
    var a
      int
    var b
      int
    -
    var b
      int
    var a
      int
    -
    var a
      int
    var b
      int
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var id
        int
      var length
        int
      pat 2
        fun $good_state 1
        var S
          type-con $state 0
        fun $get_string_literal 2
        var id
          int
        var length
          int
      attribute qid 1
        string-attr Vcc3Prel.3207:15
      attribute uniqueId 1
        string-attr 13638
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    fun $in_range_phys_ptr 1
    fun $get_string_literal 2
    var id
      int
    var length
      int
    fun $is_thread_local_array 4
    var S
      type-con $state 0
    fun $get_string_literal 2
    var id
      int
    var length
      int
    fun ^^i1 0
    +
    var length
      int
    int-num 1
axiom 0
    forall 1 1 3
      var s
        int
      pat 1
        fun $blob_type 1
        var s
          int
      attribute qid 1
        string-attr Vcc3Prel.3222:15
      attribute uniqueId 1
        string-attr 13639
      attribute bvZ3Native 1
        string-attr False
    and 7
    true
    =
    fun $sizeof 1
    fun $blob_type 1
    var s
      int
    var s
      int
    not
    fun $is_primitive 1
    fun $blob_type 1
    var s
      int
    not
    fun $is_claimable 1
    fun $blob_type 1
    var s
      int
    =
    fun $type_branch 1
    fun $blob_type 1
    var s
      int
    fun $ctype_blob 0
    fun $is_sequential_field 1
    fun $f_owns 1
    fun $blob_type 1
    var s
      int
    =
    fun $field_offset 1
    fun $f_root 1
    fun $blob_type 1
    var s
      int
    int-num 0
axiom 0
    forall 4 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var s
        int
      pat 1
        fun $inv2 4
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        fun $blob_type 1
        var s
          int
      attribute qid 1
        string-attr Vcc3Prel.3231:15
      attribute uniqueId 1
        string-attr 13640
      attribute bvZ3Native 1
        string-attr False
    =
    fun $inv2 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $blob_type 1
    var s
      int
    =
    fun $owns 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_empty 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var sz
        int
      var p
        type-con $ptr 0
      var a
        type-con $ptr 0
      pat 1
        select 2
        fun $composite_extent 3
        var S
          type-con $state 0
        var a
          type-con $ptr 0
        fun $blob_type 1
        var sz
          int
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3233:15
      attribute uniqueId 1
        string-attr 13641
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var a
      type-con $ptr 0
    fun $blob_type 1
    var sz
      int
    var p
      type-con $ptr 0
    =
    var p
      type-con $ptr 0
    var a
      type-con $ptr 0
axiom 0
    forall 5 1 3
      var S
        type-con $state 0
      var r1
        int
      var s1
        int
      var r2
        int
      var s2
        int
      pat 2
        fun $owner 2
        var S
          type-con $state 0
        fun $ptr 2
        fun $f_root 1
        fun $blob_type 1
        var s1
          int
        var r1
          int
        fun $owner 2
        var S
          type-con $state 0
        fun $ptr 2
        fun $f_root 1
        fun $blob_type 1
        var s2
          int
        var r2
          int
      attribute qid 1
        string-attr Vcc3Prel.3240:15
      attribute uniqueId 1
        string-attr 13642
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    not
    =
    var r1
      int
    var r2
      int
    not
    =
    var s1
      int
    var s2
      int
    implies
    and 2
    fun $typed 2
    var S
      type-con $state 0
    fun $ptr 2
    fun $f_root 1
    fun $blob_type 1
    var s1
      int
    var r1
      int
    fun $typed 2
    var S
      type-con $state 0
    fun $ptr 2
    fun $f_root 1
    fun $blob_type 1
    var s2
      int
    var r2
      int
    and 3
    >
    var s1
      int
    int-num 0
    >
    var s2
      int
    int-num 0
    or 2
    <=
    +
    var r1
      int
    var s1
      int
    var r2
      int
    <=
    +
    var r2
      int
    var s2
      int
    var r1
      int
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $allow_reinterpretation 1
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.3265:15
      attribute uniqueId 1
        string-attr 13643
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $allow_reinterpretation_in 1
    var p
      type-con $ptr 0
    =
    fun $field_parent_type 1
    var f
      type-con $field 0
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $allow_reinterpretation 1
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 3 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var W
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $updated_only_values 3
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var W
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.3350:15
      attribute uniqueId 1
        string-attr 13646
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3352:11
      attribute uniqueId 1
        string-attr 13644
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    or 4
    not
    =
    fun $owner 2
    var S1
      type-con $state 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    fun $me 0
    and 2
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $closed 2
    var S1
      type-con $state 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    =
    select 2
    select 2
    fun $heap 1
    var S1
      type-con $state 0
    fun $field 1
    var p
      type-con $ptr 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    select 2
    select 2
    fun $heap 1
    var S2
      type-con $state 0
    fun $field 1
    var p
      type-con $ptr 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3357:11
      attribute uniqueId 1
        string-attr 13645
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    or 4
    not
    =
    fun $owner 2
    var S1
      type-con $state 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    fun $me 0
    and 2
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $closed 2
    var S1
      type-con $state 0
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    =
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    fun $updated_only_values 3
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var W
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 3 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var W
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $updated_only_domains 3
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var W
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.3363:15
      attribute uniqueId 1
        string-attr 13648
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.3365:11
      attribute uniqueId 1
        string-attr 13647
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    var p
      type-con $ptr 0
    not
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    or 2
    =
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    select 2
    fun $f_timestamp 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    fun $domain_updated_at 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var W
      array 2
        type-con $ptr 0
        bool
    fun $updated_only_domains 3
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var W
      array 2
        type-con $ptr 0
        bool
axiom 0
    forall 4 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var p
        type-con $ptr 0
      var W
        array 2
          type-con $ptr 0
          bool
      pat 1
        fun $domain_updated_at 4
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var W
          array 2
            type-con $ptr 0
            bool
      attribute qid 1
        string-attr Vcc3Prel.3382:29
      attribute uniqueId 1
        string-attr 13650
      attribute bvZ3Native 1
        string-attr False
    =
    fun $domain_updated_at 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var W
      array 2
        type-con $ptr 0
        bool
    and 2
    forall 2 1 3
      var q
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $fetch_from_domain 3
        fun $int_to_version 1
        select 2
        fun $f_timestamp 1
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr Vcc3Prel.3383:13
      attribute uniqueId 1
        string-attr 13649
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $is_proper 1
    fun $dot 2
    var q
      type-con $ptr 0
    var f
      type-con $field 0
    fun $is_primitive 1
    fun $field_type 1
    var f
      type-con $field 0
    not
    select 2
    var W
      array 2
        type-con $ptr 0
        bool
    fun $dot 2
    var q
      type-con $ptr 0
    var f
      type-con $field 0
    =
    fun $fetch_from_domain 3
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var f
      type-con $field 0
    fun $fetch_from_domain 3
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var f
      type-con $field 0
    =
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $ver_domain 1
    fun $int_to_version 1
    select 2
    fun $f_timestamp 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    =
    fun $arch_ptr_size 0
    int-num 8
axiom 0
    =
    fun $arch_spec_ptr_start 0
    fun $max.u8 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^$##thread_id 0
    int-num 1
    =
    fun $type_branch 1
    fun ^$##thread_id 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^$##thread_id 0
    fun $is_math_type 1
    fun ^$##thread_id 0
axiom 0
    and 4
    =
    fun $sizeof 1
    fun ^$##club 0
    int-num 1
    =
    fun $type_branch 1
    fun ^$##club 0
    fun $ctype_flat 0
    fun $is_primitive 1
    fun ^$##club 0
    fun $is_math_type 1
    fun ^$##club 0
axiom 0
    fun $file_name_is 2
    int-num 1
    fun #file^C?3A?5CUsers?5Ceddie?5Cvcc2_3?2Dsrc?5Cvcc?5CTest?5Ctestsuite?5Cvcc3?5Cisabelle?2D00__vcc_split__1_23456.c 0
axiom 0
    forall 4 1 3
      var q
        type-con $ptr 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        select 2
        fun lambda@677 3
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.745:15
      attribute uniqueId 1
        string-attr 13651
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@677 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    var q
      type-con $ptr 0
    and 7
    =
    fun $prim_emb 1
    var q
      type-con $ptr 0
    fun $prim_emb 1
    var p
      type-con $ptr 0
    =
    fun $field_type 1
    fun $field 1
    var q
      type-con $ptr 0
    var T
      type-con $ctype 0
    =
    fun $field_arr_root 1
    fun $field 1
    var q
      type-con $ptr 0
    fun $field_arr_root 1
    fun $field 1
    var p
      type-con $ptr 0
    <=
    int-num 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    <=
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    -
    var sz
      int
    int-num 1
    =
    var q
      type-con $ptr 0
    ite
    fun $is_primitive 1
    fun $field_type 1
    fun $field 1
    var p
      type-con $ptr 0
    fun $idx_inline_prim 2
    var p
      type-con $ptr 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $idx_inline_comp 2
    var p
      type-con $ptr 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    not
    =
    fun $field_kind 1
    fun $field 1
    var q
      type-con $ptr 0
    fun $fk_base 0
axiom 0
    forall 3 1 3
      var q
        type-con $ptr 0
      var sz
        int
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@678 2
        var sz
          int
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.754:15
      attribute uniqueId 1
        string-attr 13652
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@678 2
    var sz
      int
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    and 3
    <=
    int-num 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    <=
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    -
    var sz
      int
    int-num 1
    select 2
    fun $full_extent 1
    fun $idx 2
    var p
      type-con $ptr 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var q
        type-con $ptr 0
      var sz
        int
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      pat 1
        select 2
        fun lambda@679 3
        var sz
          int
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.780:13
      attribute uniqueId 1
        string-attr 13653
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@679 3
    var sz
      int
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var q
      type-con $ptr 0
    and 3
    <=
    int-num 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    <=
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    -
    var sz
      int
    int-num 1
    =
    var q
      type-con $ptr 0
    fun $idx 2
    var p
      type-con $ptr 0
    fun $index_within 2
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var r
        type-con $ptr 0
      var S0
        type-con $state 0
      var o
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@680 2
        var S0
          type-con $state 0
        var o
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1602:16
      attribute uniqueId 1
        string-attr 13654
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@680 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    var r
      type-con $ptr 0
    ite
    =
    fun $owner 2
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $me 0
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var r
        type-con $ptr 0
      var o
        type-con $ptr 0
      var S0
        type-con $state 0
      pat 1
        select 2
        fun lambda@681 2
        var o
          type-con $ptr 0
        var S0
          type-con $state 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1633:16
      attribute uniqueId 1
        string-attr 13655
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@681 2
    var o
      type-con $ptr 0
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    ite
    select 2
    fun $owns 2
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
    var r
      type-con $ptr 0
    var o
      type-con $ptr 0
    select 2
    fun $f_owner 1
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var r
        type-con $ptr 0
      var S
        type-con $state 0
      var S0
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@682 3
        var S
          type-con $state 0
        var S0
          type-con $state 0
        var p
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1748:48
      attribute uniqueId 1
        string-attr 13656
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@682 3
    var S
      type-con $state 0
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var r
      type-con $ptr 0
    ite
    select 2
    fun $owns 2
    var S0
      type-con $state 0
    var p
      type-con $ptr 0
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    select 2
    fun $f_owner 1
    var S
      type-con $state 0
    var r
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var r
        type-con $ptr 0
      var S0
        type-con $state 0
      var S1
        type-con $state 0
      var dynamic
        array 2
          type-con $ptr 0
          bool
      pat 1
        select 2
        fun lambda@683 3
        var S0
          type-con $state 0
        var S1
          type-con $state 0
        var dynamic
          array 2
            type-con $ptr 0
            bool
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1761:29
      attribute uniqueId 1
        string-attr 13657
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@683 3
    var S0
      type-con $state 0
    var S1
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var r
      type-con $ptr 0
    ite
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    fun $owner 2
    var S0
      type-con $state 0
    var r
      type-con $ptr 0
    fun $me 0
    select 2
    fun $f_owner 1
    var S1
      type-con $state 0
    var r
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var o
        type-con $ptr 0
      var S0
        type-con $state 0
      var dynamic
        array 2
          type-con $ptr 0
          bool
      var static
        array 2
          type-con $ptr 0
          bool
      pat 1
        select 2
        fun lambda@684 3
        var S0
          type-con $state 0
        var dynamic
          array 2
            type-con $ptr 0
            bool
        var static
          array 2
            type-con $ptr 0
            bool
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1772:30
      attribute uniqueId 1
        string-attr 13658
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@684 3
    var S0
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    ite
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    false
    select 2
    fun $f_closed 1
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var o
        type-con $ptr 0
      var S0
        type-con $state 0
      var dynamic
        array 2
          type-con $ptr 0
          bool
      var static
        array 2
          type-con $ptr 0
          bool
      pat 1
        select 2
        fun lambda@685 3
        var S0
          type-con $state 0
        var dynamic
          array 2
            type-con $ptr 0
            bool
        var static
          array 2
            type-con $ptr 0
            bool
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.1781:30
      attribute uniqueId 1
        string-attr 13659
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@685 3
    var S0
      type-con $state 0
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    ite
    or 2
    select 2
    var dynamic
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var static
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    true
    select 2
    fun $f_closed 1
    var S0
      type-con $state 0
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var r
        type-con $ptr 0
      var S
        type-con $state 0
      pat 1
        select 2
        fun lambda@686 2
        var r
          type-con $ptr 0
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2332:13
      attribute uniqueId 1
        string-attr 13660
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@686 2
    var r
      type-con $ptr 0
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    fun $is_proper 1
    var p
      type-con $ptr 0
    select 2
    fun $composite_extent 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    fun $dot_emb 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@687 1
        var r
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2336:13
      attribute uniqueId 1
        string-attr 13661
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@687 1
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    and 2
    fun $is_proper 1
    var p
      type-con $ptr 0
    select 2
    fun $composite_extent 3
    fun $full_extent_state 0
    var r
      type-con $ptr 0
    fun $field_type 1
    fun $field 1
    var r
      type-con $ptr 0
    fun $dot_emb 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var o
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@688 1
        var o
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2343:13
      attribute uniqueId 1
        string-attr 13662
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@688 1
    var o
      type-con $ptr 0
    var p
      type-con $ptr 0
    and 2
    fun $is_proper 1
    var p
      type-con $ptr 0
    =
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@689 1
        var q
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2372:13
      attribute uniqueId 1
        string-attr 13663
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@689 1
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
    and 3
    fun $is_proper 1
    var p
      type-con $ptr 0
    fun $is_volatile_field 1
    fun $field 1
    var p
      type-con $ptr 0
    =
    fun $maybe_emb 1
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var o
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@690 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2591:13
      attribute uniqueId 1
        string-attr 13664
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@690 0
    var o
      type-con $ptr 0
    false
axiom 0
    forall 2 1 3
      var o
        type-con $ptr 0
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@691 1
        var p
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2594:13
      attribute uniqueId 1
        string-attr 13665
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@691 1
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    =
    var o
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var o
        type-con $ptr 0
      var p
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@692 1
        var p
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2597:13
      attribute uniqueId 1
        string-attr 13666
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@692 1
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
    and 2
    not
    =
    fun $addr0 1
    var p
      type-con $ptr 0
    int-num 0
    =
    var p
      type-con $ptr 0
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var o
        type-con $ptr 0
      var A
        array 2
          type-con $ptr 0
          bool
      var B
        array 2
          type-con $ptr 0
          bool
      pat 1
        select 2
        fun lambda@693 2
        var A
          array 2
            type-con $ptr 0
            bool
        var B
          array 2
            type-con $ptr 0
            bool
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2600:13
      attribute uniqueId 1
        string-attr 13667
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@693 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    or 2
    select 2
    var A
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var B
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var o
        type-con $ptr 0
      var A
        array 2
          type-con $ptr 0
          bool
      var B
        array 2
          type-con $ptr 0
          bool
      pat 1
        select 2
        fun lambda@694 2
        var A
          array 2
            type-con $ptr 0
            bool
        var B
          array 2
            type-con $ptr 0
            bool
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2603:13
      attribute uniqueId 1
        string-attr 13668
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@694 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    and 2
    select 2
    var A
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    not
    select 2
    var B
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var o
        type-con $ptr 0
      var A
        array 2
          type-con $ptr 0
          bool
      var B
        array 2
          type-con $ptr 0
          bool
      pat 1
        select 2
        fun lambda@695 2
        var A
          array 2
            type-con $ptr 0
            bool
        var B
          array 2
            type-con $ptr 0
            bool
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr Vcc3Prel.2606:13
      attribute uniqueId 1
        string-attr 13669
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@695 2
    var A
      array 2
        type-con $ptr 0
        bool
    var B
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    and 2
    select 2
    var A
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
    select 2
    var B
      array 2
        type-con $ptr 0
        bool
    var o
      type-con $ptr 0
var-decl $s 0
    type-con $state 0
var-decl $cev_pc 0
    int
vc foo 1
    implies
    label pos 0 0
    true
    implies
    and 9
    forall 1 1 3
      var #p
        type-con $ptr 0
      pat 1
        select 2
        fun lambda@696 0
        var #p
          type-con $ptr 0
      attribute qid 1
        string-attr nofile.0:0
      attribute uniqueId 1
        string-attr 13670
      attribute bvZ3Native 1
        string-attr False
    =
    select 2
    fun lambda@696 0
    var #p
      type-con $ptr 0
    false
    label pos 0 0
    true
    fun $function_entry 1
    var $s
      type-con $state 0
    fun $good_state_ext 2
    fun #tok$1^3.1 0
    var $s
      type-con $state 0
    fun $full_stop 1
    var $s
      type-con $state 0
    forall 1 1 3
      var f
        type-con $pure_function 0
      pat 1
        fun $frame_level 1
        var f
          type-con $pure_function 0
      attribute qid 1
        string-attr Vcc3Prel.1457:13
      attribute uniqueId 1
        string-attr 13357
      attribute bvZ3Native 1
        string-attr False
    <
    fun $frame_level 1
    var f
      type-con $pure_function 0
    fun $current_frame_level 0
    =
    var #wrTime$1^3.1
      int
    fun $current_timestamp 1
    var $s
      type-con $state 0
    =
    fun $writes_at 1
    var #wrTime$1^3.1
      int
    fun lambda@696 0
    =
    int-num 2147483647
    fun $decreases_level 0
    and 2
    label neg 3 14
    fun $position_marker 0
    implies
    fun $position_marker 0
    true
